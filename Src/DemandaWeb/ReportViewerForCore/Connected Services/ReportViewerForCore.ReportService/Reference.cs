//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportViewerForCore.ReportService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ConfigurationName="ReportViewerForCore.ReportService.ReportingService2010Soap")]
    public interface ReportingService2010Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa" +
            "talogItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateCatalogItemResponse CreateCatalogItem(ReportViewerForCore.ReportService.CreateCatalogItemRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa" +
            "talogItem", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateCatalogItemResponse> CreateCatalogItemAsync(ReportViewerForCore.ReportService.CreateCatalogItemRequest request);
        
        // CODEGEN: Generating message contract since message SetItemDefinitionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD" +
            "efinition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemDefinitionResponse SetItemDefinition(ReportViewerForCore.ReportService.SetItemDefinitionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD" +
            "efinition", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemDefinitionResponse> SetItemDefinitionAsync(ReportViewerForCore.ReportService.SetItemDefinitionRequest request);
        
        // CODEGEN: Generating message contract since message GetItemDefinitionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "efinition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemDefinitionResponse GetItemDefinition(ReportViewerForCore.ReportService.GetItemDefinitionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "efinition", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDefinitionResponse> GetItemDefinitionAsync(ReportViewerForCore.ReportService.GetItemDefinitionRequest request);
        
        // CODEGEN: Generating message contract since message GetItemTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemT" +
            "ype", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemTypeResponse GetItemType(ReportViewerForCore.ReportService.GetItemTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemT" +
            "ype", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemTypeResponse> GetItemTypeAsync(ReportViewerForCore.ReportService.GetItemTypeRequest request);
        
        // CODEGEN: Generating message contract since message DeleteItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt" +
            "em", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DeleteItemResponse DeleteItem(ReportViewerForCore.ReportService.DeleteItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt" +
            "em", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteItemResponse> DeleteItemAsync(ReportViewerForCore.ReportService.DeleteItemRequest request);
        
        // CODEGEN: Generating message contract since message MoveItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/MoveItem" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.MoveItemResponse MoveItem(ReportViewerForCore.ReportService.MoveItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/MoveItem" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.MoveItemResponse> MoveItemAsync(ReportViewerForCore.ReportService.MoveItemRequest request);
        
        // CODEGEN: Generating message contract since message InheritParentSecurityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritP" +
            "arentSecurity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.InheritParentSecurityResponse InheritParentSecurity(ReportViewerForCore.ReportService.InheritParentSecurityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritP" +
            "arentSecurity", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.InheritParentSecurityResponse> InheritParentSecurityAsync(ReportViewerForCore.ReportService.InheritParentSecurityRequest request);
        
        // CODEGEN: Generating message contract since message ListItemHistoryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem" +
            "History", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListItemHistoryResponse ListItemHistory(ReportViewerForCore.ReportService.ListItemHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem" +
            "History", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListItemHistoryResponse> ListItemHistoryAsync(ReportViewerForCore.ReportService.ListItemHistoryRequest request);
        
        // CODEGEN: Generating message contract since message ListChildrenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListChil" +
            "dren", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListChildrenResponse ListChildren(ReportViewerForCore.ReportService.ListChildrenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListChil" +
            "dren", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListChildrenResponse> ListChildrenAsync(ReportViewerForCore.ReportService.ListChildrenRequest request);
        
        // CODEGEN: Generating message contract since message ListDependentItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListDepe" +
            "ndentItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListDependentItemsResponse ListDependentItems(ReportViewerForCore.ReportService.ListDependentItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListDepe" +
            "ndentItems", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListDependentItemsResponse> ListDependentItemsAsync(ReportViewerForCore.ReportService.ListDependentItemsRequest request);
        
        // CODEGEN: Generating message contract since message FindItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FindItem" +
            "s", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.FindItemsResponse FindItems(ReportViewerForCore.ReportService.FindItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FindItem" +
            "s", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FindItemsResponse> FindItemsAsync(ReportViewerForCore.ReportService.FindItemsRequest request);
        
        // CODEGEN: Generating message contract since message ListParentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPare" +
            "nts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListParentsResponse ListParents(ReportViewerForCore.ReportService.ListParentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPare" +
            "nts", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParentsResponse> ListParentsAsync(ReportViewerForCore.ReportService.ListParentsRequest request);
        
        // CODEGEN: Generating message contract since message CreateFolderRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateFo" +
            "lder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateFolderResponse CreateFolder(ReportViewerForCore.ReportService.CreateFolderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateFo" +
            "lder", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateFolderResponse> CreateFolderAsync(ReportViewerForCore.ReportService.CreateFolderRequest request);
        
        // CODEGEN: Generating message contract since message SetPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPrope" +
            "rties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetPropertiesResponse SetProperties(ReportViewerForCore.ReportService.SetPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPrope" +
            "rties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetPropertiesResponse> SetPropertiesAsync(ReportViewerForCore.ReportService.SetPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message GetPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPrope" +
            "rties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetPropertiesResponse GetProperties(ReportViewerForCore.ReportService.GetPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPrope" +
            "rties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPropertiesResponse> GetPropertiesAsync(ReportViewerForCore.ReportService.GetPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message SetItemReferencesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemR" +
            "eferences", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemReferencesResponse SetItemReferences(ReportViewerForCore.ReportService.SetItemReferencesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemR" +
            "eferences", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemReferencesResponse> SetItemReferencesAsync(ReportViewerForCore.ReportService.SetItemReferencesRequest request);
        
        // CODEGEN: Generating message contract since message GetItemReferencesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemR" +
            "eferences", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemReferencesResponse GetItemReferences(ReportViewerForCore.ReportService.GetItemReferencesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemR" +
            "eferences", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemReferencesResponse> GetItemReferencesAsync(ReportViewerForCore.ReportService.GetItemReferencesRequest request);
        
        // CODEGEN: Generating message contract since message ListItemTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem" +
            "Types", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListItemTypesResponse ListItemTypes(ReportViewerForCore.ReportService.ListItemTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem" +
            "Types", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListItemTypesResponse> ListItemTypesAsync(ReportViewerForCore.ReportService.ListItemTypesRequest request);
        
        // CODEGEN: Generating message contract since message SetSubscriptionPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSubsc" +
            "riptionProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetSubscriptionPropertiesResponse SetSubscriptionProperties(ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSubsc" +
            "riptionProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSubscriptionPropertiesResponse> SetSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSubsc" +
            "riptionProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetSubscriptionPropertiesResponse GetSubscriptionProperties(ReportViewerForCore.ReportService.GetSubscriptionPropertiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSubsc" +
            "riptionProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSubscriptionPropertiesResponse> GetSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.GetSubscriptionPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message SetDataDrivenSubscriptionPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataD" +
            "rivenSubscriptionProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesResponse SetDataDrivenSubscriptionProperties(ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataD" +
            "rivenSubscriptionProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesResponse> SetDataDrivenSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataD" +
            "rivenSubscriptionProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesResponse GetDataDrivenSubscriptionProperties(ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataD" +
            "rivenSubscriptionProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesResponse> GetDataDrivenSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message DisableSubscriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DisableS" +
            "ubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DisableSubscriptionResponse DisableSubscription(ReportViewerForCore.ReportService.DisableSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DisableS" +
            "ubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DisableSubscriptionResponse> DisableSubscriptionAsync(ReportViewerForCore.ReportService.DisableSubscriptionRequest request);
        
        // CODEGEN: Generating message contract since message EnableSubscriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/EnableSu" +
            "bscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.EnableSubscriptionResponse EnableSubscription(ReportViewerForCore.ReportService.EnableSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/EnableSu" +
            "bscription", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.EnableSubscriptionResponse> EnableSubscriptionAsync(ReportViewerForCore.ReportService.EnableSubscriptionRequest request);
        
        // CODEGEN: Generating message contract since message DeleteSubscriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSu" +
            "bscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DeleteSubscriptionResponse DeleteSubscription(ReportViewerForCore.ReportService.DeleteSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSu" +
            "bscription", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteSubscriptionResponse> DeleteSubscriptionAsync(ReportViewerForCore.ReportService.DeleteSubscriptionRequest request);
        
        // CODEGEN: Generating message contract since message CreateSubscriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSu" +
            "bscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateSubscriptionResponse CreateSubscription(ReportViewerForCore.ReportService.CreateSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSu" +
            "bscription", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateSubscriptionResponse> CreateSubscriptionAsync(ReportViewerForCore.ReportService.CreateSubscriptionRequest request);
        
        // CODEGEN: Generating message contract since message CreateDataDrivenSubscriptionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa" +
            "taDrivenSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionResponse CreateDataDrivenSubscription(ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa" +
            "taDrivenSubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionResponse> CreateDataDrivenSubscriptionAsync(ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest request);
        
        // CODEGEN: Generating message contract since message GetExtensionSettingsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExten" +
            "sionSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetExtensionSettingsResponse GetExtensionSettings(ReportViewerForCore.ReportService.GetExtensionSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExten" +
            "sionSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetExtensionSettingsResponse> GetExtensionSettingsAsync(ReportViewerForCore.ReportService.GetExtensionSettingsRequest request);
        
        // CODEGEN: Generating message contract since message ValidateExtensionSettingsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Validate" +
            "ExtensionSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ValidateExtensionSettingsResponse ValidateExtensionSettings(ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Validate" +
            "ExtensionSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ValidateExtensionSettingsResponse> ValidateExtensionSettingsAsync(ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest request);
        
        // CODEGEN: Generating message contract since message ListSubscriptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs" +
            "criptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListSubscriptionsResponse ListSubscriptions(ReportViewerForCore.ReportService.ListSubscriptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs" +
            "criptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSubscriptionsResponse> ListSubscriptionsAsync(ReportViewerForCore.ReportService.ListSubscriptionsRequest request);
        
        // CODEGEN: Generating message contract since message ListMySubscriptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMySu" +
            "bscriptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListMySubscriptionsResponse ListMySubscriptions(ReportViewerForCore.ReportService.ListMySubscriptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMySu" +
            "bscriptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListMySubscriptionsResponse> ListMySubscriptionsAsync(ReportViewerForCore.ReportService.ListMySubscriptionsRequest request);
        
        // CODEGEN: Generating message contract since message ListSubscriptionsUsingDataSourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs" +
            "criptionsUsingDataSource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceResponse ListSubscriptionsUsingDataSource(ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs" +
            "criptionsUsingDataSource", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceResponse> ListSubscriptionsUsingDataSourceAsync(ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest request);
        
        // CODEGEN: Generating message contract since message ChangeSubscriptionOwnerRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ChangeSu" +
            "bscriptionOwner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ChangeSubscriptionOwnerResponse ChangeSubscriptionOwner(ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ChangeSu" +
            "bscriptionOwner", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ChangeSubscriptionOwnerResponse> ChangeSubscriptionOwnerAsync(ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest request);
        
        // CODEGEN: Generating message contract since message CreateDataSourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa" +
            "taSource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateDataSourceResponse CreateDataSource(ReportViewerForCore.ReportService.CreateDataSourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa" +
            "taSource", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateDataSourceResponse> CreateDataSourceAsync(ReportViewerForCore.ReportService.CreateDataSourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PrepareQ" +
            "uery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.PrepareQueryResponse PrepareQuery(ReportViewerForCore.ReportService.PrepareQueryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PrepareQ" +
            "uery", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.PrepareQueryResponse> PrepareQueryAsync(ReportViewerForCore.ReportService.PrepareQueryRequest request);
        
        // CODEGEN: Generating message contract since message EnableDataSourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/EnableDa" +
            "taSource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.EnableDataSourceResponse EnableDataSource(ReportViewerForCore.ReportService.EnableDataSourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/EnableDa" +
            "taSource", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.EnableDataSourceResponse> EnableDataSourceAsync(ReportViewerForCore.ReportService.EnableDataSourceRequest request);
        
        // CODEGEN: Generating message contract since message DisableDataSourceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DisableD" +
            "ataSource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DisableDataSourceResponse DisableDataSource(ReportViewerForCore.ReportService.DisableDataSourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DisableD" +
            "ataSource", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DisableDataSourceResponse> DisableDataSourceAsync(ReportViewerForCore.ReportService.DisableDataSourceRequest request);
        
        // CODEGEN: Generating message contract since message SetDataSourceContentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataS" +
            "ourceContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetDataSourceContentsResponse SetDataSourceContents(ReportViewerForCore.ReportService.SetDataSourceContentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataS" +
            "ourceContents", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetDataSourceContentsResponse> SetDataSourceContentsAsync(ReportViewerForCore.ReportService.SetDataSourceContentsRequest request);
        
        // CODEGEN: Generating message contract since message GetDataSourceContentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataS" +
            "ourceContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetDataSourceContentsResponse GetDataSourceContents(ReportViewerForCore.ReportService.GetDataSourceContentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataS" +
            "ourceContents", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetDataSourceContentsResponse> GetDataSourceContentsAsync(ReportViewerForCore.ReportService.GetDataSourceContentsRequest request);
        
        // CODEGEN: Generating message contract since message ListDatabaseCredentialRetrievalOptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListData" +
            "baseCredentialRetrievalOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsResponse ListDatabaseCredentialRetrievalOptions(ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListData" +
            "baseCredentialRetrievalOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsResponse> ListDatabaseCredentialRetrievalOptionsAsync(ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest request);
        
        // CODEGEN: Generating message contract since message SetItemDataSourcesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD" +
            "ataSources", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemDataSourcesResponse SetItemDataSources(ReportViewerForCore.ReportService.SetItemDataSourcesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD" +
            "ataSources", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemDataSourcesResponse> SetItemDataSourcesAsync(ReportViewerForCore.ReportService.SetItemDataSourcesRequest request);
        
        // CODEGEN: Generating message contract since message GetItemDataSourcesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "ataSources", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemDataSourcesResponse GetItemDataSources(ReportViewerForCore.ReportService.GetItemDataSourcesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "ataSources", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDataSourcesResponse> GetItemDataSourcesAsync(ReportViewerForCore.ReportService.GetItemDataSourcesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn" +
            "ectForDataSourceDefinition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionResponse TestConnectForDataSourceDefinition(ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn" +
            "ectForDataSourceDefinition", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionResponse> TestConnectForDataSourceDefinitionAsync(ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn" +
            "ectForItemDataSource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.TestConnectForItemDataSourceResponse TestConnectForItemDataSource(ReportViewerForCore.ReportService.TestConnectForItemDataSourceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn" +
            "ectForItemDataSource", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.TestConnectForItemDataSourceResponse> TestConnectForItemDataSourceAsync(ReportViewerForCore.ReportService.TestConnectForItemDataSourceRequest request);
        
        // CODEGEN: Generating message contract since message CreateRoleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRo" +
            "le", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateRoleResponse CreateRole(ReportViewerForCore.ReportService.CreateRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRo" +
            "le", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateRoleResponse> CreateRoleAsync(ReportViewerForCore.ReportService.CreateRoleRequest request);
        
        // CODEGEN: Generating message contract since message SetRolePropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetRoleP" +
            "roperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetRolePropertiesResponse SetRoleProperties(ReportViewerForCore.ReportService.SetRolePropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetRoleP" +
            "roperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetRolePropertiesResponse> SetRolePropertiesAsync(ReportViewerForCore.ReportService.SetRolePropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRoleP" +
            "roperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetRolePropertiesResponse GetRoleProperties(ReportViewerForCore.ReportService.GetRolePropertiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRoleP" +
            "roperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetRolePropertiesResponse> GetRolePropertiesAsync(ReportViewerForCore.ReportService.GetRolePropertiesRequest request);
        
        // CODEGEN: Generating message contract since message DeleteRoleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteRo" +
            "le", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DeleteRoleResponse DeleteRole(ReportViewerForCore.ReportService.DeleteRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteRo" +
            "le", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteRoleResponse> DeleteRoleAsync(ReportViewerForCore.ReportService.DeleteRoleRequest request);
        
        // CODEGEN: Generating message contract since message ListRolesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListRole" +
            "s", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListRolesResponse ListRoles(ReportViewerForCore.ReportService.ListRolesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListRole" +
            "s", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListRolesResponse> ListRolesAsync(ReportViewerForCore.ReportService.ListRolesRequest request);
        
        // CODEGEN: Generating message contract since message ListTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListTask" +
            "s", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListTasksResponse ListTasks(ReportViewerForCore.ReportService.ListTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListTask" +
            "s", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListTasksResponse> ListTasksAsync(ReportViewerForCore.ReportService.ListTasksRequest request);
        
        // CODEGEN: Generating message contract since message SetPoliciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPolic" +
            "ies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetPoliciesResponse SetPolicies(ReportViewerForCore.ReportService.SetPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPolic" +
            "ies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetPoliciesResponse> SetPoliciesAsync(ReportViewerForCore.ReportService.SetPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPolic" +
            "ies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetPoliciesResponse GetPolicies(ReportViewerForCore.ReportService.GetPoliciesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPolic" +
            "ies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPoliciesResponse> GetPoliciesAsync(ReportViewerForCore.ReportService.GetPoliciesRequest request);
        
        // CODEGEN: Generating message contract since message GetItemDataSourcePromptsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "ataSourcePrompts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemDataSourcePromptsResponse GetItemDataSourcePrompts(ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "ataSourcePrompts", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDataSourcePromptsResponse> GetItemDataSourcePromptsAsync(ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Generate" +
            "Model", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GenerateModelResponse GenerateModel(ReportViewerForCore.ReportService.GenerateModelRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Generate" +
            "Model", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GenerateModelResponse> GenerateModelAsync(ReportViewerForCore.ReportService.GenerateModelRequest request);
        
        // CODEGEN: Generating message contract since message GetModelItemPermissionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel" +
            "ItemPermissions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetModelItemPermissionsResponse GetModelItemPermissions(ReportViewerForCore.ReportService.GetModelItemPermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel" +
            "ItemPermissions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetModelItemPermissionsResponse> GetModelItemPermissionsAsync(ReportViewerForCore.ReportService.GetModelItemPermissionsRequest request);
        
        // CODEGEN: Generating message contract since message SetModelItemPoliciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel" +
            "ItemPolicies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetModelItemPoliciesResponse SetModelItemPolicies(ReportViewerForCore.ReportService.SetModelItemPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel" +
            "ItemPolicies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetModelItemPoliciesResponse> SetModelItemPoliciesAsync(ReportViewerForCore.ReportService.SetModelItemPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel" +
            "ItemPolicies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetModelItemPoliciesResponse GetModelItemPolicies(ReportViewerForCore.ReportService.GetModelItemPoliciesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel" +
            "ItemPolicies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetModelItemPoliciesResponse> GetModelItemPoliciesAsync(ReportViewerForCore.ReportService.GetModelItemPoliciesRequest request);
        
        // CODEGEN: Generating message contract since message GetUserModelRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetUserM" +
            "odel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetUserModelResponse GetUserModel(ReportViewerForCore.ReportService.GetUserModelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetUserM" +
            "odel", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetUserModelResponse> GetUserModelAsync(ReportViewerForCore.ReportService.GetUserModelRequest request);
        
        // CODEGEN: Generating message contract since message InheritModelItemParentSecurityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritM" +
            "odelItemParentSecurity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.InheritModelItemParentSecurityResponse InheritModelItemParentSecurity(ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritM" +
            "odelItemParentSecurity", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.InheritModelItemParentSecurityResponse> InheritModelItemParentSecurityAsync(ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest request);
        
        // CODEGEN: Generating message contract since message SetModelDrillthroughReportsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel" +
            "DrillthroughReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetModelDrillthroughReportsResponse SetModelDrillthroughReports(ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel" +
            "DrillthroughReports", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetModelDrillthroughReportsResponse> SetModelDrillthroughReportsAsync(ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest request);
        
        // CODEGEN: Generating message contract since message ListModelDrillthroughReportsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lDrillthroughReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListModelDrillthroughReportsResponse ListModelDrillthroughReports(ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lDrillthroughReports", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelDrillthroughReportsResponse> ListModelDrillthroughReportsAsync(ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest request);
        
        // CODEGEN: Generating message contract since message ListModelItemChildrenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lItemChildren", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListModelItemChildrenResponse ListModelItemChildren(ReportViewerForCore.ReportService.ListModelItemChildrenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lItemChildren", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelItemChildrenResponse> ListModelItemChildrenAsync(ReportViewerForCore.ReportService.ListModelItemChildrenRequest request);
        
        // CODEGEN: Generating message contract since message ListModelItemTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lItemTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListModelItemTypesResponse ListModelItemTypes(ReportViewerForCore.ReportService.ListModelItemTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lItemTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelItemTypesResponse> ListModelItemTypesAsync(ReportViewerForCore.ReportService.ListModelItemTypesRequest request);
        
        // CODEGEN: Generating message contract since message ListModelPerspectivesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lPerspectives", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListModelPerspectivesResponse ListModelPerspectives(ReportViewerForCore.ReportService.ListModelPerspectivesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lPerspectives", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelPerspectivesResponse> ListModelPerspectivesAsync(ReportViewerForCore.ReportService.ListModelPerspectivesRequest request);
        
        // CODEGEN: Generating message contract since message RegenerateModelRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Regenera" +
            "teModel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.RegenerateModelResponse RegenerateModel(ReportViewerForCore.ReportService.RegenerateModelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Regenera" +
            "teModel", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.RegenerateModelResponse> RegenerateModelAsync(ReportViewerForCore.ReportService.RegenerateModelRequest request);
        
        // CODEGEN: Generating message contract since message RemoveAllModelItemPoliciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/RemoveAl" +
            "lModelItemPolicies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesResponse RemoveAllModelItemPolicies(ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/RemoveAl" +
            "lModelItemPolicies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesResponse> RemoveAllModelItemPoliciesAsync(ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest request);
        
        // CODEGEN: Generating message contract since message CreateScheduleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSc" +
            "hedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateScheduleResponse CreateSchedule(ReportViewerForCore.ReportService.CreateScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSc" +
            "hedule", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateScheduleResponse> CreateScheduleAsync(ReportViewerForCore.ReportService.CreateScheduleRequest request);
        
        // CODEGEN: Generating message contract since message DeleteScheduleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSc" +
            "hedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DeleteScheduleResponse DeleteSchedule(ReportViewerForCore.ReportService.DeleteScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSc" +
            "hedule", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteScheduleResponse> DeleteScheduleAsync(ReportViewerForCore.ReportService.DeleteScheduleRequest request);
        
        // CODEGEN: Generating message contract since message ListSchedulesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "dules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListSchedulesResponse ListSchedules(ReportViewerForCore.ReportService.ListSchedulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "dules", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSchedulesResponse> ListSchedulesAsync(ReportViewerForCore.ReportService.ListSchedulesRequest request);
        
        // CODEGEN: Generating message contract since message GetSchedulePropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSched" +
            "uleProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetSchedulePropertiesResponse GetScheduleProperties(ReportViewerForCore.ReportService.GetSchedulePropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSched" +
            "uleProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSchedulePropertiesResponse> GetSchedulePropertiesAsync(ReportViewerForCore.ReportService.GetSchedulePropertiesRequest request);
        
        // CODEGEN: Generating message contract since message ListScheduleStatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "duleStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListScheduleStatesResponse ListScheduleStates(ReportViewerForCore.ReportService.ListScheduleStatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "duleStates", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListScheduleStatesResponse> ListScheduleStatesAsync(ReportViewerForCore.ReportService.ListScheduleStatesRequest request);
        
        // CODEGEN: Generating message contract since message PauseScheduleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PauseSch" +
            "edule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.PauseScheduleResponse PauseSchedule(ReportViewerForCore.ReportService.PauseScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PauseSch" +
            "edule", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.PauseScheduleResponse> PauseScheduleAsync(ReportViewerForCore.ReportService.PauseScheduleRequest request);
        
        // CODEGEN: Generating message contract since message ResumeScheduleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ResumeSc" +
            "hedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ResumeScheduleResponse ResumeSchedule(ReportViewerForCore.ReportService.ResumeScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ResumeSc" +
            "hedule", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ResumeScheduleResponse> ResumeScheduleAsync(ReportViewerForCore.ReportService.ResumeScheduleRequest request);
        
        // CODEGEN: Generating message contract since message SetSchedulePropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSched" +
            "uleProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetSchedulePropertiesResponse SetScheduleProperties(ReportViewerForCore.ReportService.SetSchedulePropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSched" +
            "uleProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSchedulePropertiesResponse> SetSchedulePropertiesAsync(ReportViewerForCore.ReportService.SetSchedulePropertiesRequest request);
        
        // CODEGEN: Generating message contract since message ListScheduledItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "duledItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListScheduledItemsResponse ListScheduledItems(ReportViewerForCore.ReportService.ListScheduledItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "duledItems", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListScheduledItemsResponse> ListScheduledItemsAsync(ReportViewerForCore.ReportService.ListScheduledItemsRequest request);
        
        // CODEGEN: Generating message contract since message SetItemParametersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemP" +
            "arameters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemParametersResponse SetItemParameters(ReportViewerForCore.ReportService.SetItemParametersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemP" +
            "arameters", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemParametersResponse> SetItemParametersAsync(ReportViewerForCore.ReportService.SetItemParametersRequest request);
        
        // CODEGEN: Generating message contract since message GetItemParametersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemP" +
            "arameters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemParametersResponse GetItemParameters(ReportViewerForCore.ReportService.GetItemParametersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemP" +
            "arameters", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemParametersResponse> GetItemParametersAsync(ReportViewerForCore.ReportService.GetItemParametersRequest request);
        
        // CODEGEN: Generating message contract since message ListParameterTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara" +
            "meterTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListParameterTypesResponse ListParameterTypes(ReportViewerForCore.ReportService.ListParameterTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara" +
            "meterTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParameterTypesResponse> ListParameterTypesAsync(ReportViewerForCore.ReportService.ListParameterTypesRequest request);
        
        // CODEGEN: Generating message contract since message ListParameterStatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara" +
            "meterStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListParameterStatesResponse ListParameterStates(ReportViewerForCore.ReportService.ListParameterStatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara" +
            "meterStates", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParameterStatesResponse> ListParameterStatesAsync(ReportViewerForCore.ReportService.ListParameterStatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRe" +
            "portEditSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateReportEditSessionResponse CreateReportEditSession(ReportViewerForCore.ReportService.CreateReportEditSessionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRe" +
            "portEditSession", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateReportEditSessionResponse> CreateReportEditSessionAsync(ReportViewerForCore.ReportService.CreateReportEditSessionRequest request);
        
        // CODEGEN: Generating message contract since message CreateLinkedItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateLi" +
            "nkedItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateLinkedItemResponse CreateLinkedItem(ReportViewerForCore.ReportService.CreateLinkedItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateLi" +
            "nkedItem", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateLinkedItemResponse> CreateLinkedItemAsync(ReportViewerForCore.ReportService.CreateLinkedItemRequest request);
        
        // CODEGEN: Generating message contract since message SetItemLinkRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemL" +
            "ink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemLinkResponse SetItemLink(ReportViewerForCore.ReportService.SetItemLinkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemL" +
            "ink", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemLinkResponse> SetItemLinkAsync(ReportViewerForCore.ReportService.SetItemLinkRequest request);
        
        // CODEGEN: Generating message contract since message GetItemLinkRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemL" +
            "ink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemLinkResponse GetItemLink(ReportViewerForCore.ReportService.GetItemLinkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemL" +
            "ink", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemLinkResponse> GetItemLinkAsync(ReportViewerForCore.ReportService.GetItemLinkRequest request);
        
        // CODEGEN: Generating message contract since message ListExecutionSettingsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExec" +
            "utionSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListExecutionSettingsResponse ListExecutionSettings(ReportViewerForCore.ReportService.ListExecutionSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExec" +
            "utionSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExecutionSettingsResponse> ListExecutionSettingsAsync(ReportViewerForCore.ReportService.ListExecutionSettingsRequest request);
        
        // CODEGEN: Generating message contract since message SetExecutionOptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetExecu" +
            "tionOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetExecutionOptionsResponse SetExecutionOptions(ReportViewerForCore.ReportService.SetExecutionOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetExecu" +
            "tionOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetExecutionOptionsResponse> SetExecutionOptionsAsync(ReportViewerForCore.ReportService.SetExecutionOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExecu" +
            "tionOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetExecutionOptionsResponse GetExecutionOptions(ReportViewerForCore.ReportService.GetExecutionOptionsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExecu" +
            "tionOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetExecutionOptionsResponse> GetExecutionOptionsAsync(ReportViewerForCore.ReportService.GetExecutionOptionsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateItemExecutionSnapshotRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/UpdateIt" +
            "emExecutionSnapshot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotResponse UpdateItemExecutionSnapshot(ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/UpdateIt" +
            "emExecutionSnapshot", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotResponse> UpdateItemExecutionSnapshotAsync(ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest request);
        
        // CODEGEN: Generating message contract since message SetCacheOptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache" +
            "Options", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetCacheOptionsResponse SetCacheOptions(ReportViewerForCore.ReportService.SetCacheOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache" +
            "Options", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetCacheOptionsResponse> SetCacheOptionsAsync(ReportViewerForCore.ReportService.SetCacheOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache" +
            "Options", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetCacheOptionsResponse GetCacheOptions(ReportViewerForCore.ReportService.GetCacheOptionsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache" +
            "Options", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetCacheOptionsResponse> GetCacheOptionsAsync(ReportViewerForCore.ReportService.GetCacheOptionsRequest request);
        
        // CODEGEN: Generating message contract since message FlushCacheRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FlushCac" +
            "he", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.FlushCacheResponse FlushCache(ReportViewerForCore.ReportService.FlushCacheRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FlushCac" +
            "he", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FlushCacheResponse> FlushCacheAsync(ReportViewerForCore.ReportService.FlushCacheRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateIt" +
            "emHistorySnapshot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateItemHistorySnapshotResponse CreateItemHistorySnapshot(ReportViewerForCore.ReportService.CreateItemHistorySnapshotRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateIt" +
            "emHistorySnapshot", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateItemHistorySnapshotResponse> CreateItemHistorySnapshotAsync(ReportViewerForCore.ReportService.CreateItemHistorySnapshotRequest request);
        
        // CODEGEN: Generating message contract since message DeleteItemHistorySnapshotRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt" +
            "emHistorySnapshot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DeleteItemHistorySnapshotResponse DeleteItemHistorySnapshot(ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt" +
            "emHistorySnapshot", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteItemHistorySnapshotResponse> DeleteItemHistorySnapshotAsync(ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest request);
        
        // CODEGEN: Generating message contract since message SetItemHistoryLimitRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH" +
            "istoryLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemHistoryLimitResponse SetItemHistoryLimit(ReportViewerForCore.ReportService.SetItemHistoryLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH" +
            "istoryLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemHistoryLimitResponse> SetItemHistoryLimitAsync(ReportViewerForCore.ReportService.SetItemHistoryLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH" +
            "istoryLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemHistoryLimitResponse GetItemHistoryLimit(ReportViewerForCore.ReportService.GetItemHistoryLimitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH" +
            "istoryLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemHistoryLimitResponse> GetItemHistoryLimitAsync(ReportViewerForCore.ReportService.GetItemHistoryLimitRequest request);
        
        // CODEGEN: Generating message contract since message SetItemHistoryOptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH" +
            "istoryOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetItemHistoryOptionsResponse SetItemHistoryOptions(ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH" +
            "istoryOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemHistoryOptionsResponse> SetItemHistoryOptionsAsync(ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH" +
            "istoryOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetItemHistoryOptionsResponse GetItemHistoryOptions(ReportViewerForCore.ReportService.GetItemHistoryOptionsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH" +
            "istoryOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemHistoryOptionsResponse> GetItemHistoryOptionsAsync(ReportViewerForCore.ReportService.GetItemHistoryOptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetReportServerConfigInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRepor" +
            "tServerConfigInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetReportServerConfigInfoResponse GetReportServerConfigInfo(ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRepor" +
            "tServerConfigInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetReportServerConfigInfoResponse> GetReportServerConfigInfoAsync(ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest request);
        
        // CODEGEN: Generating message contract since message IsSSLRequiredRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/IsSSLReq" +
            "uired", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.IsSSLRequiredResponse IsSSLRequired(ReportViewerForCore.ReportService.IsSSLRequiredRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/IsSSLReq" +
            "uired", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.IsSSLRequiredResponse> IsSSLRequiredAsync(ReportViewerForCore.ReportService.IsSSLRequiredRequest request);
        
        // CODEGEN: Generating message contract since message SetSystemPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste" +
            "mProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetSystemPropertiesResponse SetSystemProperties(ReportViewerForCore.ReportService.SetSystemPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste" +
            "mProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSystemPropertiesResponse> SetSystemPropertiesAsync(ReportViewerForCore.ReportService.SetSystemPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message GetSystemPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetSystemPropertiesResponse GetSystemProperties(ReportViewerForCore.ReportService.GetSystemPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPropertiesResponse> GetSystemPropertiesAsync(ReportViewerForCore.ReportService.GetSystemPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message SetUserSettingsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetUserS" +
            "ettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetUserSettingsResponse SetUserSettings(ReportViewerForCore.ReportService.SetUserSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetUserS" +
            "ettings", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetUserSettingsResponse> SetUserSettingsAsync(ReportViewerForCore.ReportService.SetUserSettingsRequest request);
        
        // CODEGEN: Generating message contract since message GetUserSettingsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetUserS" +
            "ettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetUserSettingsResponse GetUserSettings(ReportViewerForCore.ReportService.GetUserSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetUserS" +
            "ettings", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetUserSettingsResponse> GetUserSettingsAsync(ReportViewerForCore.ReportService.GetUserSettingsRequest request);
        
        // CODEGEN: Generating message contract since message SetSystemPoliciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste" +
            "mPolicies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetSystemPoliciesResponse SetSystemPolicies(ReportViewerForCore.ReportService.SetSystemPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste" +
            "mPolicies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSystemPoliciesResponse> SetSystemPoliciesAsync(ReportViewerForCore.ReportService.SetSystemPoliciesRequest request);
        
        // CODEGEN: Generating message contract since message GetSystemPoliciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mPolicies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetSystemPoliciesResponse GetSystemPolicies(ReportViewerForCore.ReportService.GetSystemPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mPolicies", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPoliciesResponse> GetSystemPoliciesAsync(ReportViewerForCore.ReportService.GetSystemPoliciesRequest request);
        
        // CODEGEN: Generating message contract since message ListExtensionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte" +
            "nsions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListExtensionsResponse ListExtensions(ReportViewerForCore.ReportService.ListExtensionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte" +
            "nsions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExtensionsResponse> ListExtensionsAsync(ReportViewerForCore.ReportService.ListExtensionsRequest request);
        
        // CODEGEN: Generating message contract since message ListExtensionTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte" +
            "nsionTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListExtensionTypesResponse ListExtensionTypes(ReportViewerForCore.ReportService.ListExtensionTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte" +
            "nsionTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExtensionTypesResponse> ListExtensionTypesAsync(ReportViewerForCore.ReportService.ListExtensionTypesRequest request);
        
        // CODEGEN: Generating message contract since message ListEventsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListEven" +
            "ts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListEventsResponse ListEvents(ReportViewerForCore.ReportService.ListEventsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListEven" +
            "ts", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListEventsResponse> ListEventsAsync(ReportViewerForCore.ReportService.ListEventsRequest request);
        
        // CODEGEN: Generating message contract since message FireEventRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FireEven" +
            "t", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.FireEventResponse FireEvent(ReportViewerForCore.ReportService.FireEventRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FireEven" +
            "t", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FireEventResponse> FireEventAsync(ReportViewerForCore.ReportService.FireEventRequest request);
        
        // CODEGEN: Generating message contract since message ListJobsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobs" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListJobsResponse ListJobs(ReportViewerForCore.ReportService.ListJobsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobs" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobsResponse> ListJobsAsync(ReportViewerForCore.ReportService.ListJobsRequest request);
        
        // CODEGEN: Generating message contract since message ListJobTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobT" +
            "ypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListJobTypesResponse ListJobTypes(ReportViewerForCore.ReportService.ListJobTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobT" +
            "ypes", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobTypesResponse> ListJobTypesAsync(ReportViewerForCore.ReportService.ListJobTypesRequest request);
        
        // CODEGEN: Generating message contract since message ListJobActionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobA" +
            "ctions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListJobActionsResponse ListJobActions(ReportViewerForCore.ReportService.ListJobActionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobA" +
            "ctions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobActionsResponse> ListJobActionsAsync(ReportViewerForCore.ReportService.ListJobActionsRequest request);
        
        // CODEGEN: Generating message contract since message ListJobStatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobS" +
            "tates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListJobStatesResponse ListJobStates(ReportViewerForCore.ReportService.ListJobStatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobS" +
            "tates", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobStatesResponse> ListJobStatesAsync(ReportViewerForCore.ReportService.ListJobStatesRequest request);
        
        // CODEGEN: Generating message contract since message CancelJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CancelJo" +
            "b", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CancelJobResponse CancelJob(ReportViewerForCore.ReportService.CancelJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CancelJo" +
            "b", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CancelJobResponse> CancelJobAsync(ReportViewerForCore.ReportService.CancelJobRequest request);
        
        // CODEGEN: Generating message contract since message CreateCacheRefreshPlanRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa" +
            "cheRefreshPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.CreateCacheRefreshPlanResponse CreateCacheRefreshPlan(ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa" +
            "cheRefreshPlan", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateCacheRefreshPlanResponse> CreateCacheRefreshPlanAsync(ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest request);
        
        // CODEGEN: Generating message contract since message SetCacheRefreshPlanPropertiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache" +
            "RefreshPlanProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesResponse SetCacheRefreshPlanProperties(ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache" +
            "RefreshPlanProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesResponse> SetCacheRefreshPlanPropertiesAsync(ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache" +
            "RefreshPlanProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesResponse GetCacheRefreshPlanProperties(ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache" +
            "RefreshPlanProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesResponse> GetCacheRefreshPlanPropertiesAsync(ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesRequest request);
        
        // CODEGEN: Generating message contract since message DeleteCacheRefreshPlanRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteCa" +
            "cheRefreshPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.DeleteCacheRefreshPlanResponse DeleteCacheRefreshPlan(ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteCa" +
            "cheRefreshPlan", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteCacheRefreshPlanResponse> DeleteCacheRefreshPlanAsync(ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest request);
        
        // CODEGEN: Generating message contract since message ListCacheRefreshPlansRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListCach" +
            "eRefreshPlans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListCacheRefreshPlansResponse ListCacheRefreshPlans(ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListCach" +
            "eRefreshPlans", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListCacheRefreshPlansResponse> ListCacheRefreshPlansAsync(ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest request);
        
        // CODEGEN: Generating message contract since message LogonUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/LogonUse" +
            "r", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.LogonUserResponse LogonUser(ReportViewerForCore.ReportService.LogonUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/LogonUse" +
            "r", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.LogonUserResponse> LogonUserAsync(ReportViewerForCore.ReportService.LogonUserRequest request);
        
        // CODEGEN: Generating message contract since message LogoffRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Logoff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.LogoffResponse Logoff(ReportViewerForCore.ReportService.LogoffRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Logoff", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.LogoffResponse> LogoffAsync(ReportViewerForCore.ReportService.LogoffRequest request);
        
        // CODEGEN: Generating message contract since message GetPermissionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPermi" +
            "ssions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetPermissionsResponse GetPermissions(ReportViewerForCore.ReportService.GetPermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPermi" +
            "ssions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPermissionsResponse> GetPermissionsAsync(ReportViewerForCore.ReportService.GetPermissionsRequest request);
        
        // CODEGEN: Generating message contract since message GetSystemPermissionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mPermissions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.GetSystemPermissionsResponse GetSystemPermissions(ReportViewerForCore.ReportService.GetSystemPermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mPermissions", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPermissionsResponse> GetSystemPermissionsAsync(ReportViewerForCore.ReportService.GetSystemPermissionsRequest request);
        
        // CODEGEN: Generating message contract since message ListSecurityScopesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSecu" +
            "rityScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ExpirationDefinition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RecurrencePattern))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScheduleDefinitionOrReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataSourceDefinitionOrReference))]
        ReportViewerForCore.ReportService.ListSecurityScopesResponse ListSecurityScopes(ReportViewerForCore.ReportService.ListSecurityScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSecu" +
            "rityScopes", ReplyAction="*")]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSecurityScopesResponse> ListSecurityScopesAsync(ReportViewerForCore.ReportService.ListSecurityScopesRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class TrustedUserHeader
    {
        
        private string userNameField;
        
        private byte[] userTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=1)]
        public byte[] UserToken
        {
            get
            {
                return this.userTokenField;
            }
            set
            {
                this.userTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class CacheRefreshPlan
    {
        
        private string cacheRefreshPlanIDField;
        
        private string itemPathField;
        
        private string descriptionField;
        
        private CacheRefreshPlanState stateField;
        
        private System.DateTime lastExecutedField;
        
        private System.DateTime modifiedDateField;
        
        private string modifiedByField;
        
        private string lastRunStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CacheRefreshPlanID
        {
            get
            {
                return this.cacheRefreshPlanIDField;
            }
            set
            {
                this.cacheRefreshPlanIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ItemPath
        {
            get
            {
                return this.itemPathField;
            }
            set
            {
                this.itemPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public CacheRefreshPlanState State
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime LastExecuted
        {
            get
            {
                return this.lastExecutedField;
            }
            set
            {
                this.lastExecutedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this.modifiedDateField;
            }
            set
            {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ModifiedBy
        {
            get
            {
                return this.modifiedByField;
            }
            set
            {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string LastRunStatus
        {
            get
            {
                return this.lastRunStatusField;
            }
            set
            {
                this.lastRunStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class CacheRefreshPlanState
    {
        
        private bool missingParameterValueField;
        
        private bool invalidParameterValueField;
        
        private bool unknownItemParameterField;
        
        private bool cachingNotEnabledOnItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MissingParameterValue
        {
            get
            {
                return this.missingParameterValueField;
            }
            set
            {
                this.missingParameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool InvalidParameterValue
        {
            get
            {
                return this.invalidParameterValueField;
            }
            set
            {
                this.invalidParameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool UnknownItemParameter
        {
            get
            {
                return this.unknownItemParameterField;
            }
            set
            {
                this.unknownItemParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool CachingNotEnabledOnItem
        {
            get
            {
                return this.cachingNotEnabledOnItemField;
            }
            set
            {
                this.cachingNotEnabledOnItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Job
    {
        
        private string jobIDField;
        
        private string nameField;
        
        private string pathField;
        
        private string descriptionField;
        
        private string machineField;
        
        private string userField;
        
        private System.DateTime startDateTimeField;
        
        private string jobActionNameField;
        
        private string jobTypeNameField;
        
        private string jobStatusNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string JobID
        {
            get
            {
                return this.jobIDField;
            }
            set
            {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Machine
        {
            get
            {
                return this.machineField;
            }
            set
            {
                this.machineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string User
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime StartDateTime
        {
            get
            {
                return this.startDateTimeField;
            }
            set
            {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string JobActionName
        {
            get
            {
                return this.jobActionNameField;
            }
            set
            {
                this.jobActionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string JobTypeName
        {
            get
            {
                return this.jobTypeNameField;
            }
            set
            {
                this.jobTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string JobStatusName
        {
            get
            {
                return this.jobStatusNameField;
            }
            set
            {
                this.jobStatusNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Event
    {
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Extension
    {
        
        private string extensionTypeNameField;
        
        private string nameField;
        
        private string localizedNameField;
        
        private bool visibleField;
        
        private bool isModelGenerationSupportedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ExtensionTypeName
        {
            get
            {
                return this.extensionTypeNameField;
            }
            set
            {
                this.extensionTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LocalizedName
        {
            get
            {
                return this.localizedNameField;
            }
            set
            {
                this.localizedNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Visible
        {
            get
            {
                return this.visibleField;
            }
            set
            {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsModelGenerationSupported
        {
            get
            {
                return this.isModelGenerationSupportedField;
            }
            set
            {
                this.isModelGenerationSupportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleExpiration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeExpiration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ExpirationDefinition
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleExpiration : ExpirationDefinition
    {
        
        private ScheduleDefinitionOrReference itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference), Order=0)]
        public ScheduleDefinitionOrReference Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleDefinition : ScheduleDefinitionOrReference
    {
        
        private RecurrencePattern itemField;
        
        private System.DateTime startDateTimeField;
        
        private System.DateTime endDateField;
        
        private bool endDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DailyRecurrence", typeof(DailyRecurrence), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("MinuteRecurrence", typeof(MinuteRecurrence), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("MonthlyDOWRecurrence", typeof(MonthlyDOWRecurrence), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("MonthlyRecurrence", typeof(MonthlyRecurrence), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("WeeklyRecurrence", typeof(WeeklyRecurrence), Order=0)]
        public RecurrencePattern Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime StartDateTime
        {
            get
            {
                return this.startDateTimeField;
            }
            set
            {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified
        {
            get
            {
                return this.endDateFieldSpecified;
            }
            set
            {
                this.endDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DailyRecurrence : RecurrencePattern
    {
        
        private int daysIntervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int DaysInterval
        {
            get
            {
                return this.daysIntervalField;
            }
            set
            {
                this.daysIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DailyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WeeklyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MonthlyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MonthlyDOWRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MinuteRecurrence))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class RecurrencePattern
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class WeeklyRecurrence : RecurrencePattern
    {
        
        private int weeksIntervalField;
        
        private bool weeksIntervalFieldSpecified;
        
        private DaysOfWeekSelector daysOfWeekField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int WeeksInterval
        {
            get
            {
                return this.weeksIntervalField;
            }
            set
            {
                this.weeksIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeeksIntervalSpecified
        {
            get
            {
                return this.weeksIntervalFieldSpecified;
            }
            set
            {
                this.weeksIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DaysOfWeekSelector DaysOfWeek
        {
            get
            {
                return this.daysOfWeekField;
            }
            set
            {
                this.daysOfWeekField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DaysOfWeekSelector
    {
        
        private bool sundayField;
        
        private bool mondayField;
        
        private bool tuesdayField;
        
        private bool wednesdayField;
        
        private bool thursdayField;
        
        private bool fridayField;
        
        private bool saturdayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Sunday
        {
            get
            {
                return this.sundayField;
            }
            set
            {
                this.sundayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Monday
        {
            get
            {
                return this.mondayField;
            }
            set
            {
                this.mondayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Tuesday
        {
            get
            {
                return this.tuesdayField;
            }
            set
            {
                this.tuesdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Wednesday
        {
            get
            {
                return this.wednesdayField;
            }
            set
            {
                this.wednesdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool Thursday
        {
            get
            {
                return this.thursdayField;
            }
            set
            {
                this.thursdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool Friday
        {
            get
            {
                return this.fridayField;
            }
            set
            {
                this.fridayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool Saturday
        {
            get
            {
                return this.saturdayField;
            }
            set
            {
                this.saturdayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MonthlyRecurrence : RecurrencePattern
    {
        
        private string daysField;
        
        private MonthsOfYearSelector monthsOfYearField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Days
        {
            get
            {
                return this.daysField;
            }
            set
            {
                this.daysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MonthsOfYearSelector MonthsOfYear
        {
            get
            {
                return this.monthsOfYearField;
            }
            set
            {
                this.monthsOfYearField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MonthsOfYearSelector
    {
        
        private bool januaryField;
        
        private bool februaryField;
        
        private bool marchField;
        
        private bool aprilField;
        
        private bool mayField;
        
        private bool juneField;
        
        private bool julyField;
        
        private bool augustField;
        
        private bool septemberField;
        
        private bool octoberField;
        
        private bool novemberField;
        
        private bool decemberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool January
        {
            get
            {
                return this.januaryField;
            }
            set
            {
                this.januaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool February
        {
            get
            {
                return this.februaryField;
            }
            set
            {
                this.februaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool March
        {
            get
            {
                return this.marchField;
            }
            set
            {
                this.marchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool April
        {
            get
            {
                return this.aprilField;
            }
            set
            {
                this.aprilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool May
        {
            get
            {
                return this.mayField;
            }
            set
            {
                this.mayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool June
        {
            get
            {
                return this.juneField;
            }
            set
            {
                this.juneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool July
        {
            get
            {
                return this.julyField;
            }
            set
            {
                this.julyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool August
        {
            get
            {
                return this.augustField;
            }
            set
            {
                this.augustField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool September
        {
            get
            {
                return this.septemberField;
            }
            set
            {
                this.septemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool October
        {
            get
            {
                return this.octoberField;
            }
            set
            {
                this.octoberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool November
        {
            get
            {
                return this.novemberField;
            }
            set
            {
                this.novemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool December
        {
            get
            {
                return this.decemberField;
            }
            set
            {
                this.decemberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MonthlyDOWRecurrence : RecurrencePattern
    {
        
        private WeekNumberEnum whichWeekField;
        
        private bool whichWeekFieldSpecified;
        
        private DaysOfWeekSelector daysOfWeekField;
        
        private MonthsOfYearSelector monthsOfYearField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WeekNumberEnum WhichWeek
        {
            get
            {
                return this.whichWeekField;
            }
            set
            {
                this.whichWeekField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WhichWeekSpecified
        {
            get
            {
                return this.whichWeekFieldSpecified;
            }
            set
            {
                this.whichWeekFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DaysOfWeekSelector DaysOfWeek
        {
            get
            {
                return this.daysOfWeekField;
            }
            set
            {
                this.daysOfWeekField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public MonthsOfYearSelector MonthsOfYear
        {
            get
            {
                return this.monthsOfYearField;
            }
            set
            {
                this.monthsOfYearField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum WeekNumberEnum
    {
        
        /// <remarks/>
        FirstWeek,
        
        /// <remarks/>
        SecondWeek,
        
        /// <remarks/>
        ThirdWeek,
        
        /// <remarks/>
        FourthWeek,
        
        /// <remarks/>
        LastWeek,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MinuteRecurrence : RecurrencePattern
    {
        
        private int minutesIntervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MinutesInterval
        {
            get
            {
                return this.minutesIntervalField;
            }
            set
            {
                this.minutesIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NoSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleDefinition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleDefinitionOrReference
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class NoSchedule : ScheduleDefinitionOrReference
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleReference : ScheduleDefinitionOrReference
    {
        
        private string scheduleIDField;
        
        private ScheduleDefinition definitionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ScheduleID
        {
            get
            {
                return this.scheduleIDField;
            }
            set
            {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ScheduleDefinition Definition
        {
            get
            {
                return this.definitionField;
            }
            set
            {
                this.definitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class TimeExpiration : ExpirationDefinition
    {
        
        private int minutesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Minutes
        {
            get
            {
                return this.minutesField;
            }
            set
            {
                this.minutesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceCredentials
    {
        
        private string dataSourceNameField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName
        {
            get
            {
                return this.dataSourceNameField;
            }
            set
            {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemParameter
    {
        
        private string nameField;
        
        private string parameterTypeNameField;
        
        private bool nullableField;
        
        private bool nullableFieldSpecified;
        
        private bool allowBlankField;
        
        private bool allowBlankFieldSpecified;
        
        private bool multiValueField;
        
        private bool multiValueFieldSpecified;
        
        private bool queryParameterField;
        
        private bool queryParameterFieldSpecified;
        
        private string promptField;
        
        private bool promptUserField;
        
        private bool promptUserFieldSpecified;
        
        private string[] dependenciesField;
        
        private bool validValuesQueryBasedField;
        
        private bool validValuesQueryBasedFieldSpecified;
        
        private ValidValue[] validValuesField;
        
        private bool defaultValuesQueryBasedField;
        
        private bool defaultValuesQueryBasedFieldSpecified;
        
        private string[] defaultValuesField;
        
        private string parameterStateNameField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ParameterTypeName
        {
            get
            {
                return this.parameterTypeNameField;
            }
            set
            {
                this.parameterTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Nullable
        {
            get
            {
                return this.nullableField;
            }
            set
            {
                this.nullableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified
        {
            get
            {
                return this.nullableFieldSpecified;
            }
            set
            {
                this.nullableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool AllowBlank
        {
            get
            {
                return this.allowBlankField;
            }
            set
            {
                this.allowBlankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified
        {
            get
            {
                return this.allowBlankFieldSpecified;
            }
            set
            {
                this.allowBlankFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool MultiValue
        {
            get
            {
                return this.multiValueField;
            }
            set
            {
                this.multiValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified
        {
            get
            {
                return this.multiValueFieldSpecified;
            }
            set
            {
                this.multiValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool QueryParameter
        {
            get
            {
                return this.queryParameterField;
            }
            set
            {
                this.queryParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParameterSpecified
        {
            get
            {
                return this.queryParameterFieldSpecified;
            }
            set
            {
                this.queryParameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Prompt
        {
            get
            {
                return this.promptField;
            }
            set
            {
                this.promptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool PromptUser
        {
            get
            {
                return this.promptUserField;
            }
            set
            {
                this.promptUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptUserSpecified
        {
            get
            {
                return this.promptUserFieldSpecified;
            }
            set
            {
                this.promptUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Dependency")]
        public string[] Dependencies
        {
            get
            {
                return this.dependenciesField;
            }
            set
            {
                this.dependenciesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool ValidValuesQueryBased
        {
            get
            {
                return this.validValuesQueryBasedField;
            }
            set
            {
                this.validValuesQueryBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesQueryBasedSpecified
        {
            get
            {
                return this.validValuesQueryBasedFieldSpecified;
            }
            set
            {
                this.validValuesQueryBasedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public ValidValue[] ValidValues
        {
            get
            {
                return this.validValuesField;
            }
            set
            {
                this.validValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool DefaultValuesQueryBased
        {
            get
            {
                return this.defaultValuesQueryBasedField;
            }
            set
            {
                this.defaultValuesQueryBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValuesQueryBasedSpecified
        {
            get
            {
                return this.defaultValuesQueryBasedFieldSpecified;
            }
            set
            {
                this.defaultValuesQueryBasedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] DefaultValues
        {
            get
            {
                return this.defaultValuesField;
            }
            set
            {
                this.defaultValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string ParameterStateName
        {
            get
            {
                return this.parameterStateNameField;
            }
            set
            {
                this.parameterStateNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ErrorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ValidValue
    {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Schedule
    {
        
        private string scheduleIDField;
        
        private string nameField;
        
        private ScheduleDefinition definitionField;
        
        private string descriptionField;
        
        private string creatorField;
        
        private System.DateTime nextRunTimeField;
        
        private bool nextRunTimeFieldSpecified;
        
        private System.DateTime lastRunTimeField;
        
        private bool lastRunTimeFieldSpecified;
        
        private bool referencesPresentField;
        
        private string scheduleStateNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ScheduleID
        {
            get
            {
                return this.scheduleIDField;
            }
            set
            {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ScheduleDefinition Definition
        {
            get
            {
                return this.definitionField;
            }
            set
            {
                this.definitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Creator
        {
            get
            {
                return this.creatorField;
            }
            set
            {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime NextRunTime
        {
            get
            {
                return this.nextRunTimeField;
            }
            set
            {
                this.nextRunTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NextRunTimeSpecified
        {
            get
            {
                return this.nextRunTimeFieldSpecified;
            }
            set
            {
                this.nextRunTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime LastRunTime
        {
            get
            {
                return this.lastRunTimeField;
            }
            set
            {
                this.lastRunTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRunTimeSpecified
        {
            get
            {
                return this.lastRunTimeFieldSpecified;
            }
            set
            {
                this.lastRunTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool ReferencesPresent
        {
            get
            {
                return this.referencesPresentField;
            }
            set
            {
                this.referencesPresentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ScheduleStateName
        {
            get
            {
                return this.scheduleStateNameField;
            }
            set
            {
                this.scheduleStateNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelPerspective
    {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelCatalogItem
    {
        
        private string modelField;
        
        private string descriptionField;
        
        private ModelPerspective[] perspectivesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Model
        {
            get
            {
                return this.modelField;
            }
            set
            {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ModelPerspective[] Perspectives
        {
            get
            {
                return this.perspectivesField;
            }
            set
            {
                this.perspectivesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelItem
    {
        
        private string idField;
        
        private string nameField;
        
        private string modelItemTypeNameField;
        
        private string descriptionField;
        
        private ModelItem[] modelItemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ModelItemTypeName
        {
            get
            {
                return this.modelItemTypeNameField;
            }
            set
            {
                this.modelItemTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public ModelItem[] ModelItems
        {
            get
            {
                return this.modelItemsField;
            }
            set
            {
                this.modelItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelDrillthroughReport
    {
        
        private string pathField;
        
        private DrillthroughType typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DrillthroughType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum DrillthroughType
    {
        
        /// <remarks/>
        Detail,
        
        /// <remarks/>
        List,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourcePrompt
    {
        
        private string nameField;
        
        private string dataSourceIDField;
        
        private string promptField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Prompt
        {
            get
            {
                return this.promptField;
            }
            set
            {
                this.promptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Policy
    {
        
        private string groupUserNameField;
        
        private Role[] rolesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string GroupUserName
        {
            get
            {
                return this.groupUserNameField;
            }
            set
            {
                this.groupUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public Role[] Roles
        {
            get
            {
                return this.rolesField;
            }
            set
            {
                this.rolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Role
    {
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Task
    {
        
        private string taskIDField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TaskID
        {
            get
            {
                return this.taskIDField;
            }
            set
            {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSource
    {
        
        private string nameField;
        
        private DataSourceDefinitionOrReference itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", typeof(DataSourceDefinition), Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference", typeof(DataSourceReference), Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", typeof(InvalidDataSourceReference), Order=1)]
        public DataSourceDefinitionOrReference Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceDefinition : DataSourceDefinitionOrReference
    {
        
        private string extensionField;
        
        private string connectStringField;
        
        private bool useOriginalConnectStringField;
        
        private bool originalConnectStringExpressionBasedField;
        
        private CredentialRetrievalEnum credentialRetrievalField;
        
        private bool windowsCredentialsField;
        
        private bool impersonateUserField;
        
        private bool impersonateUserFieldSpecified;
        
        private string promptField;
        
        private string userNameField;
        
        private string passwordField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Extension
        {
            get
            {
                return this.extensionField;
            }
            set
            {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ConnectString
        {
            get
            {
                return this.connectStringField;
            }
            set
            {
                this.connectStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool UseOriginalConnectString
        {
            get
            {
                return this.useOriginalConnectStringField;
            }
            set
            {
                this.useOriginalConnectStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool OriginalConnectStringExpressionBased
        {
            get
            {
                return this.originalConnectStringExpressionBasedField;
            }
            set
            {
                this.originalConnectStringExpressionBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public CredentialRetrievalEnum CredentialRetrieval
        {
            get
            {
                return this.credentialRetrievalField;
            }
            set
            {
                this.credentialRetrievalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool WindowsCredentials
        {
            get
            {
                return this.windowsCredentialsField;
            }
            set
            {
                this.windowsCredentialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool ImpersonateUser
        {
            get
            {
                return this.impersonateUserField;
            }
            set
            {
                this.impersonateUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImpersonateUserSpecified
        {
            get
            {
                return this.impersonateUserFieldSpecified;
            }
            set
            {
                this.impersonateUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Prompt
        {
            get
            {
                return this.promptField;
            }
            set
            {
                this.promptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool Enabled
        {
            get
            {
                return this.enabledField;
            }
            set
            {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return this.enabledFieldSpecified;
            }
            set
            {
                this.enabledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum CredentialRetrievalEnum
    {
        
        /// <remarks/>
        Prompt,
        
        /// <remarks/>
        Store,
        
        /// <remarks/>
        Integrated,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InvalidDataSourceReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceDefinition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceDefinitionOrReference
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceReference : DataSourceDefinitionOrReference
    {
        
        private string referenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class InvalidDataSourceReference : DataSourceDefinitionOrReference
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Subscription
    {
        
        private string subscriptionIDField;
        
        private string ownerField;
        
        private string pathField;
        
        private string virtualPathField;
        
        private string reportField;
        
        private ExtensionSettings deliverySettingsField;
        
        private string descriptionField;
        
        private string statusField;
        
        private ActiveState activeField;
        
        private System.DateTime lastExecutedField;
        
        private bool lastExecutedFieldSpecified;
        
        private string modifiedByField;
        
        private System.DateTime modifiedDateField;
        
        private string eventTypeField;
        
        private bool isDataDrivenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionID
        {
            get
            {
                return this.subscriptionIDField;
            }
            set
            {
                this.subscriptionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Owner
        {
            get
            {
                return this.ownerField;
            }
            set
            {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string VirtualPath
        {
            get
            {
                return this.virtualPathField;
            }
            set
            {
                this.virtualPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Report
        {
            get
            {
                return this.reportField;
            }
            set
            {
                this.reportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ExtensionSettings DeliverySettings
        {
            get
            {
                return this.deliverySettingsField;
            }
            set
            {
                this.deliverySettingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public ActiveState Active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime LastExecuted
        {
            get
            {
                return this.lastExecutedField;
            }
            set
            {
                this.lastExecutedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastExecutedSpecified
        {
            get
            {
                return this.lastExecutedFieldSpecified;
            }
            set
            {
                this.lastExecutedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ModifiedBy
        {
            get
            {
                return this.modifiedByField;
            }
            set
            {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this.modifiedDateField;
            }
            set
            {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string EventType
        {
            get
            {
                return this.eventTypeField;
            }
            set
            {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool IsDataDriven
        {
            get
            {
                return this.isDataDrivenField;
            }
            set
            {
                this.isDataDrivenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ExtensionSettings
    {
        
        private string extensionField;
        
        private ParameterValueOrFieldReference[] parameterValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Extension
        {
            get
            {
                return this.extensionField;
            }
            set
            {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterFieldReference))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterValue))]
        public ParameterValueOrFieldReference[] ParameterValues
        {
            get
            {
                return this.parameterValuesField;
            }
            set
            {
                this.parameterValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ParameterFieldReference : ParameterValueOrFieldReference
    {
        
        private string parameterNameField;
        
        private string fieldAliasField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ParameterName
        {
            get
            {
                return this.parameterNameField;
            }
            set
            {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FieldAlias
        {
            get
            {
                return this.fieldAliasField;
            }
            set
            {
                this.fieldAliasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterFieldReference))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ParameterValueOrFieldReference
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ParameterValue : ParameterValueOrFieldReference
    {
        
        private string nameField;
        
        private string valueField;
        
        private string labelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ActiveState
    {
        
        private bool deliveryExtensionRemovedField;
        
        private bool deliveryExtensionRemovedFieldSpecified;
        
        private bool sharedDataSourceRemovedField;
        
        private bool sharedDataSourceRemovedFieldSpecified;
        
        private bool missingParameterValueField;
        
        private bool missingParameterValueFieldSpecified;
        
        private bool invalidParameterValueField;
        
        private bool invalidParameterValueFieldSpecified;
        
        private bool unknownReportParameterField;
        
        private bool unknownReportParameterFieldSpecified;
        
        private bool disabledByUserField;
        
        private bool disabledByUserFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool DeliveryExtensionRemoved
        {
            get
            {
                return this.deliveryExtensionRemovedField;
            }
            set
            {
                this.deliveryExtensionRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryExtensionRemovedSpecified
        {
            get
            {
                return this.deliveryExtensionRemovedFieldSpecified;
            }
            set
            {
                this.deliveryExtensionRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool SharedDataSourceRemoved
        {
            get
            {
                return this.sharedDataSourceRemovedField;
            }
            set
            {
                this.sharedDataSourceRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharedDataSourceRemovedSpecified
        {
            get
            {
                return this.sharedDataSourceRemovedFieldSpecified;
            }
            set
            {
                this.sharedDataSourceRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool MissingParameterValue
        {
            get
            {
                return this.missingParameterValueField;
            }
            set
            {
                this.missingParameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MissingParameterValueSpecified
        {
            get
            {
                return this.missingParameterValueFieldSpecified;
            }
            set
            {
                this.missingParameterValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool InvalidParameterValue
        {
            get
            {
                return this.invalidParameterValueField;
            }
            set
            {
                this.invalidParameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvalidParameterValueSpecified
        {
            get
            {
                return this.invalidParameterValueFieldSpecified;
            }
            set
            {
                this.invalidParameterValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool UnknownReportParameter
        {
            get
            {
                return this.unknownReportParameterField;
            }
            set
            {
                this.unknownReportParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownReportParameterSpecified
        {
            get
            {
                return this.unknownReportParameterFieldSpecified;
            }
            set
            {
                this.unknownReportParameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool DisabledByUser
        {
            get
            {
                return this.disabledByUserField;
            }
            set
            {
                this.disabledByUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledByUserSpecified
        {
            get
            {
                return this.disabledByUserFieldSpecified;
            }
            set
            {
                this.disabledByUserFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ExtensionParameter
    {
        
        private string nameField;
        
        private string displayNameField;
        
        private bool requiredField;
        
        private bool requiredFieldSpecified;
        
        private bool readOnlyField;
        
        private string valueField;
        
        private string errorField;
        
        private bool encryptedField;
        
        private bool isPasswordField;
        
        private ValidValue[] validValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Required
        {
            get
            {
                return this.requiredField;
            }
            set
            {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequiredSpecified
        {
            get
            {
                return this.requiredFieldSpecified;
            }
            set
            {
                this.requiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool ReadOnly
        {
            get
            {
                return this.readOnlyField;
            }
            set
            {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Error
        {
            get
            {
                return this.errorField;
            }
            set
            {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool Encrypted
        {
            get
            {
                return this.encryptedField;
            }
            set
            {
                this.encryptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool IsPassword
        {
            get
            {
                return this.isPasswordField;
            }
            set
            {
                this.isPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public ValidValue[] ValidValues
        {
            get
            {
                return this.validValuesField;
            }
            set
            {
                this.validValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class QueryDefinition
    {
        
        private string commandTypeField;
        
        private string commandTextField;
        
        private int timeoutField;
        
        private bool timeoutFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CommandType
        {
            get
            {
                return this.commandTypeField;
            }
            set
            {
                this.commandTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CommandText
        {
            get
            {
                return this.commandTextField;
            }
            set
            {
                this.commandTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeoutSpecified
        {
            get
            {
                return this.timeoutFieldSpecified;
            }
            set
            {
                this.timeoutFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Field
    {
        
        private string aliasField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSetDefinition
    {
        
        private Field[] fieldsField;
        
        private QueryDefinition queryField;
        
        private SensitivityEnum caseSensitivityField;
        
        private bool caseSensitivityFieldSpecified;
        
        private string collationField;
        
        private SensitivityEnum accentSensitivityField;
        
        private bool accentSensitivityFieldSpecified;
        
        private SensitivityEnum kanatypeSensitivityField;
        
        private bool kanatypeSensitivityFieldSpecified;
        
        private SensitivityEnum widthSensitivityField;
        
        private bool widthSensitivityFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Field[] Fields
        {
            get
            {
                return this.fieldsField;
            }
            set
            {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public QueryDefinition Query
        {
            get
            {
                return this.queryField;
            }
            set
            {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SensitivityEnum CaseSensitivity
        {
            get
            {
                return this.caseSensitivityField;
            }
            set
            {
                this.caseSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseSensitivitySpecified
        {
            get
            {
                return this.caseSensitivityFieldSpecified;
            }
            set
            {
                this.caseSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Collation
        {
            get
            {
                return this.collationField;
            }
            set
            {
                this.collationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SensitivityEnum AccentSensitivity
        {
            get
            {
                return this.accentSensitivityField;
            }
            set
            {
                this.accentSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccentSensitivitySpecified
        {
            get
            {
                return this.accentSensitivityFieldSpecified;
            }
            set
            {
                this.accentSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SensitivityEnum KanatypeSensitivity
        {
            get
            {
                return this.kanatypeSensitivityField;
            }
            set
            {
                this.kanatypeSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KanatypeSensitivitySpecified
        {
            get
            {
                return this.kanatypeSensitivityFieldSpecified;
            }
            set
            {
                this.kanatypeSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public SensitivityEnum WidthSensitivity
        {
            get
            {
                return this.widthSensitivityField;
            }
            set
            {
                this.widthSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSensitivitySpecified
        {
            get
            {
                return this.widthSensitivityFieldSpecified;
            }
            set
            {
                this.widthSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum SensitivityEnum
    {
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
        
        /// <remarks/>
        Auto,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataRetrievalPlan
    {
        
        private DataSourceDefinitionOrReference itemField;
        
        private DataSetDefinition dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", typeof(DataSourceDefinition), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference", typeof(DataSourceReference), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", typeof(InvalidDataSourceReference), Order=0)]
        public DataSourceDefinitionOrReference Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DataSetDefinition DataSet
        {
            get
            {
                return this.dataSetField;
            }
            set
            {
                this.dataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemReferenceData
    {
        
        private string nameField;
        
        private string referenceField;
        
        private string referenceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReferenceType
        {
            get
            {
                return this.referenceTypeField;
            }
            set
            {
                this.referenceTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemReference
    {
        
        private string nameField;
        
        private string referenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemNamespaceHeader
    {
        
        private ItemNamespaceEnum itemNamespaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ItemNamespaceEnum ItemNamespace
        {
            get
            {
                return this.itemNamespaceField;
            }
            set
            {
                this.itemNamespaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum ItemNamespaceEnum
    {
        
        /// <remarks/>
        PathBased,
        
        /// <remarks/>
        GUIDBased,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class SearchCondition
    {
        
        private ConditionEnum conditionField;
        
        private bool conditionFieldSpecified;
        
        private string[] valuesField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ConditionEnum Condition
        {
            get
            {
                return this.conditionField;
            }
            set
            {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return this.conditionFieldSpecified;
            }
            set
            {
                this.conditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] Values
        {
            get
            {
                return this.valuesField;
            }
            set
            {
                this.valuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum ConditionEnum
    {
        
        /// <remarks/>
        Contains,
        
        /// <remarks/>
        Equals,
        
        /// <remarks/>
        In,
        
        /// <remarks/>
        Between,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemHistorySnapshot
    {
        
        private string historyIDField;
        
        private System.DateTime creationDateField;
        
        private int sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string HistoryID
        {
            get
            {
                return this.historyIDField;
            }
            set
            {
                this.historyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime CreationDate
        {
            get
            {
                return this.creationDateField;
            }
            set
            {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class SYSTEMTIME
    {
        
        private short yearField;
        
        private short monthField;
        
        private short dayOfWeekField;
        
        private short dayField;
        
        private short hourField;
        
        private short minuteField;
        
        private short secondField;
        
        private short millisecondsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short year
        {
            get
            {
                return this.yearField;
            }
            set
            {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public short month
        {
            get
            {
                return this.monthField;
            }
            set
            {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public short dayOfWeek
        {
            get
            {
                return this.dayOfWeekField;
            }
            set
            {
                this.dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public short day
        {
            get
            {
                return this.dayField;
            }
            set
            {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public short hour
        {
            get
            {
                return this.hourField;
            }
            set
            {
                this.hourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public short minute
        {
            get
            {
                return this.minuteField;
            }
            set
            {
                this.minuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public short second
        {
            get
            {
                return this.secondField;
            }
            set
            {
                this.secondField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public short milliseconds
        {
            get
            {
                return this.millisecondsField;
            }
            set
            {
                this.millisecondsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class TimeZoneInformation
    {
        
        private int biasField;
        
        private int standardBiasField;
        
        private SYSTEMTIME standardDateField;
        
        private int daylightBiasField;
        
        private SYSTEMTIME daylightDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Bias
        {
            get
            {
                return this.biasField;
            }
            set
            {
                this.biasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int StandardBias
        {
            get
            {
                return this.standardBiasField;
            }
            set
            {
                this.standardBiasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SYSTEMTIME StandardDate
        {
            get
            {
                return this.standardDateField;
            }
            set
            {
                this.standardDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int DaylightBias
        {
            get
            {
                return this.daylightBiasField;
            }
            set
            {
                this.daylightBiasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SYSTEMTIME DaylightDate
        {
            get
            {
                return this.daylightDateField;
            }
            set
            {
                this.daylightDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ServerInfoHeader
    {
        
        private string reportServerVersionNumberField;
        
        private string reportServerEditionField;
        
        private string reportServerVersionField;
        
        private string reportServerDateTimeField;
        
        private TimeZoneInformation reportServerTimeZoneInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ReportServerVersionNumber
        {
            get
            {
                return this.reportServerVersionNumberField;
            }
            set
            {
                this.reportServerVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ReportServerEdition
        {
            get
            {
                return this.reportServerEditionField;
            }
            set
            {
                this.reportServerEditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReportServerVersion
        {
            get
            {
                return this.reportServerVersionField;
            }
            set
            {
                this.reportServerVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ReportServerDateTime
        {
            get
            {
                return this.reportServerDateTimeField;
            }
            set
            {
                this.reportServerDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public TimeZoneInformation ReportServerTimeZoneInfo
        {
            get
            {
                return this.reportServerTimeZoneInfoField;
            }
            set
            {
                this.reportServerTimeZoneInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Warning
    {
        
        private string codeField;
        
        private string severityField;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Severity
        {
            get
            {
                return this.severityField;
            }
            set
            {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ObjectName
        {
            get
            {
                return this.objectNameField;
            }
            set
            {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ObjectType
        {
            get
            {
                return this.objectTypeField;
            }
            set
            {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class CatalogItem
    {
        
        private string idField;
        
        private string nameField;
        
        private string pathField;
        
        private string virtualPathField;
        
        private string typeNameField;
        
        private int sizeField;
        
        private bool sizeFieldSpecified;
        
        private string descriptionField;
        
        private bool hiddenField;
        
        private bool hiddenFieldSpecified;
        
        private System.DateTime creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private System.DateTime modifiedDateField;
        
        private bool modifiedDateFieldSpecified;
        
        private string createdByField;
        
        private string modifiedByField;
        
        private Property[] itemMetadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string VirtualPath
        {
            get
            {
                return this.virtualPathField;
            }
            set
            {
                this.virtualPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TypeName
        {
            get
            {
                return this.typeNameField;
            }
            set
            {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int Size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified
        {
            get
            {
                return this.sizeFieldSpecified;
            }
            set
            {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool Hidden
        {
            get
            {
                return this.hiddenField;
            }
            set
            {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return this.hiddenFieldSpecified;
            }
            set
            {
                this.hiddenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime CreationDate
        {
            get
            {
                return this.creationDateField;
            }
            set
            {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreationDateSpecified
        {
            get
            {
                return this.creationDateFieldSpecified;
            }
            set
            {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this.modifiedDateField;
            }
            set
            {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModifiedDateSpecified
        {
            get
            {
                return this.modifiedDateFieldSpecified;
            }
            set
            {
                this.modifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CreatedBy
        {
            get
            {
                return this.createdByField;
            }
            set
            {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ModifiedBy
        {
            get
            {
                return this.modifiedByField;
            }
            set
            {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public Property[] ItemMetadata
        {
            get
            {
                return this.itemMetadataField;
            }
            set
            {
                this.itemMetadataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Property
    {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCatalogItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateCatalogItemRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public bool Overwrite;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public CreateCatalogItemRequest()
        {
        }
        
        public CreateCatalogItemRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemType, string Name, string Parent, bool Overwrite, byte[] Definition, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemType = ItemType;
            this.Name = Name;
            this.Parent = Parent;
            this.Overwrite = Overwrite;
            this.Definition = Definition;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCatalogItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateCatalogItemResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem ItemInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Warning[] Warnings;
        
        public CreateCatalogItemResponse()
        {
        }
        
        public CreateCatalogItemResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem ItemInfo, ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ItemInfo = ItemInfo;
            this.Warnings = Warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemDefinition", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemDefinitionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public SetItemDefinitionRequest()
        {
        }
        
        public SetItemDefinitionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, byte[] Definition, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Definition = Definition;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemDefinitionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemDefinitionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Warning[] Warnings;
        
        public SetItemDefinitionResponse()
        {
        }
        
        public SetItemDefinitionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Warnings = Warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemDefinition", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemDefinitionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemDefinitionRequest()
        {
        }
        
        public GetItemDefinitionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemDefinitionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemDefinitionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public GetItemDefinitionResponse()
        {
        }
        
        public GetItemDefinitionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, byte[] Definition)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemType", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemTypeRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemTypeRequest()
        {
        }
        
        public GetItemTypeRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemTypeResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemTypeResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Type;
        
        public GetItemTypeResponse()
        {
        }
        
        public GetItemTypeResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string Type)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Type = Type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteItemRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public DeleteItemRequest()
        {
        }
        
        public DeleteItemRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteItemResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DeleteItemResponse()
        {
        }
        
        public DeleteItemResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class MoveItemRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Target;
        
        public MoveItemRequest()
        {
        }
        
        public MoveItemRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Target)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Target = Target;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class MoveItemResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public MoveItemResponse()
        {
        }
        
        public MoveItemResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InheritParentSecurity", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class InheritParentSecurityRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public InheritParentSecurityRequest()
        {
        }
        
        public InheritParentSecurityRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InheritParentSecurityResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class InheritParentSecurityResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public InheritParentSecurityResponse()
        {
        }
        
        public InheritParentSecurityResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListItemHistory", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListItemHistoryRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public ListItemHistoryRequest()
        {
        }
        
        public ListItemHistoryRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListItemHistoryResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListItemHistoryResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ItemHistorySnapshot[] ItemHistory;
        
        public ListItemHistoryResponse()
        {
        }
        
        public ListItemHistoryResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ItemHistorySnapshot[] ItemHistory)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ItemHistory = ItemHistory;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListChildren", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListChildrenRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool Recursive;
        
        public ListChildrenRequest()
        {
        }
        
        public ListChildrenRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool Recursive)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Recursive = Recursive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListChildrenResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListChildrenResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem[] CatalogItems;
        
        public ListChildrenResponse()
        {
        }
        
        public ListChildrenResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem[] CatalogItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.CatalogItems = CatalogItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListDependentItems", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListDependentItemsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public ListDependentItemsRequest()
        {
        }
        
        public ListDependentItemsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListDependentItemsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListDependentItemsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem[] CatalogItems;
        
        public ListDependentItemsResponse()
        {
        }
        
        public ListDependentItemsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem[] CatalogItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.CatalogItems = CatalogItems;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum BooleanOperatorEnum
    {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindItems", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class FindItemsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.BooleanOperatorEnum BooleanOperator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.Property[] SearchOptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public ReportViewerForCore.ReportService.SearchCondition[] SearchConditions;
        
        public FindItemsRequest()
        {
        }
        
        public FindItemsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Folder, ReportViewerForCore.ReportService.BooleanOperatorEnum BooleanOperator, ReportViewerForCore.ReportService.Property[] SearchOptions, ReportViewerForCore.ReportService.SearchCondition[] SearchConditions)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Folder = Folder;
            this.BooleanOperator = BooleanOperator;
            this.SearchOptions = SearchOptions;
            this.SearchConditions = SearchConditions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindItemsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class FindItemsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem[] Items;
        
        public FindItemsResponse()
        {
        }
        
        public FindItemsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem[] Items)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Items = Items;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListParents", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListParentsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public ListParentsRequest()
        {
        }
        
        public ListParentsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListParentsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListParentsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem[] ListParentsResult;
        
        public ListParentsResponse()
        {
        }
        
        public ListParentsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem[] ListParentsResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListParentsResult = ListParentsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateFolder", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateFolderRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public CreateFolderRequest()
        {
        }
        
        public CreateFolderRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Folder, string Parent, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Folder = Folder;
            this.Parent = Parent;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateFolderResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateFolderResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem ItemInfo;
        
        public CreateFolderResponse()
        {
        }
        
        public CreateFolderResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem ItemInfo)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ItemInfo = ItemInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public SetPropertiesRequest()
        {
        }
        
        public SetPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetPropertiesResponse()
        {
        }
        
        public SetPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ItemNamespaceHeader ItemNamespaceHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public GetPropertiesRequest()
        {
        }
        
        public GetPropertiesRequest(ReportViewerForCore.ReportService.ItemNamespaceHeader ItemNamespaceHeader, ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.ItemNamespaceHeader = ItemNamespaceHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Values;
        
        public GetPropertiesResponse()
        {
        }
        
        public GetPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Property[] Values)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Values = Values;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemReferences", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemReferencesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ItemReference[] ItemReferences;
        
        public SetItemReferencesRequest()
        {
        }
        
        public SetItemReferencesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ItemReference[] ItemReferences)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.ItemReferences = ItemReferences;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemReferencesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemReferencesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetItemReferencesResponse()
        {
        }
        
        public SetItemReferencesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemReferences", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemReferencesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ReferenceItemType;
        
        public GetItemReferencesRequest()
        {
        }
        
        public GetItemReferencesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string ReferenceItemType)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.ReferenceItemType = ReferenceItemType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemReferencesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemReferencesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ItemReferenceData[] ItemReferences;
        
        public GetItemReferencesResponse()
        {
        }
        
        public GetItemReferencesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ItemReferenceData[] ItemReferences)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ItemReferences = ItemReferences;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListItemTypes", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListItemTypesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListItemTypesRequest()
        {
        }
        
        public ListItemTypesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListItemTypesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListItemTypesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListItemTypesResult;
        
        public ListItemTypesResponse()
        {
        }
        
        public ListItemTypesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListItemTypesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListItemTypesResult = ListItemTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSubscriptionProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSubscriptionPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public ReportViewerForCore.ReportService.ParameterValue[] Parameters;
        
        public SetSubscriptionPropertiesRequest()
        {
        }
        
        public SetSubscriptionPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SubscriptionID = SubscriptionID;
            this.ExtensionSettings = ExtensionSettings;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSubscriptionPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSubscriptionPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetSubscriptionPropertiesResponse()
        {
        }
        
        public SetSubscriptionPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSubscriptionProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSubscriptionPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        public GetSubscriptionPropertiesRequest()
        {
        }
        
        public GetSubscriptionPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SubscriptionID = SubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSubscriptionPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSubscriptionPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Owner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public ReportViewerForCore.ReportService.ActiveState Active;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public string Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=6)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=7)]
        public ReportViewerForCore.ReportService.ParameterValue[] Parameters;
        
        public GetSubscriptionPropertiesResponse()
        {
        }
        
        public GetSubscriptionPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string Owner, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, ReportViewerForCore.ReportService.ActiveState Active, string Status, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Owner = Owner;
            this.ExtensionSettings = ExtensionSettings;
            this.Description = Description;
            this.Active = Active;
            this.Status = Status;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDataDrivenSubscriptionProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetDataDrivenSubscriptionPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataDrivenSubscriptionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=6)]
        public ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters;
        
        public SetDataDrivenSubscriptionPropertiesRequest()
        {
        }
        
        public SetDataDrivenSubscriptionPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataDrivenSubscriptionID, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataDrivenSubscriptionID = DataDrivenSubscriptionID;
            this.ExtensionSettings = ExtensionSettings;
            this.DataRetrievalPlan = DataRetrievalPlan;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDataDrivenSubscriptionPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetDataDrivenSubscriptionPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetDataDrivenSubscriptionPropertiesResponse()
        {
        }
        
        public SetDataDrivenSubscriptionPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataDrivenSubscriptionProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetDataDrivenSubscriptionPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataDrivenSubscriptionID;
        
        public GetDataDrivenSubscriptionPropertiesRequest()
        {
        }
        
        public GetDataDrivenSubscriptionPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataDrivenSubscriptionID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataDrivenSubscriptionID = DataDrivenSubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataDrivenSubscriptionPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetDataDrivenSubscriptionPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Owner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public ReportViewerForCore.ReportService.ActiveState Active;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public string Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=6)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=7)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=8)]
        public ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters;
        
        public GetDataDrivenSubscriptionPropertiesResponse()
        {
        }
        
        public GetDataDrivenSubscriptionPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string Owner, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, ReportViewerForCore.ReportService.ActiveState Active, string Status, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Owner = Owner;
            this.ExtensionSettings = ExtensionSettings;
            this.DataRetrievalPlan = DataRetrievalPlan;
            this.Description = Description;
            this.Active = Active;
            this.Status = Status;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DisableSubscription", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DisableSubscriptionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        public DisableSubscriptionRequest()
        {
        }
        
        public DisableSubscriptionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SubscriptionID = SubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DisableSubscriptionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DisableSubscriptionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DisableSubscriptionResponse()
        {
        }
        
        public DisableSubscriptionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableSubscription", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class EnableSubscriptionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        public EnableSubscriptionRequest()
        {
        }
        
        public EnableSubscriptionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SubscriptionID = SubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableSubscriptionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class EnableSubscriptionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public EnableSubscriptionResponse()
        {
        }
        
        public EnableSubscriptionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSubscription", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteSubscriptionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        public DeleteSubscriptionRequest()
        {
        }
        
        public DeleteSubscriptionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SubscriptionID = SubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSubscriptionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteSubscriptionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DeleteSubscriptionResponse()
        {
        }
        
        public DeleteSubscriptionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSubscription", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateSubscriptionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public ReportViewerForCore.ReportService.ParameterValue[] Parameters;
        
        public CreateSubscriptionRequest()
        {
        }
        
        public CreateSubscriptionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.ExtensionSettings = ExtensionSettings;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSubscriptionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateSubscriptionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        public CreateSubscriptionResponse()
        {
        }
        
        public CreateSubscriptionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string SubscriptionID)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.SubscriptionID = SubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDataDrivenSubscription", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateDataDrivenSubscriptionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=6)]
        public ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters;
        
        public CreateDataDrivenSubscriptionRequest()
        {
        }
        
        public CreateDataDrivenSubscriptionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.ExtensionSettings = ExtensionSettings;
            this.DataRetrievalPlan = DataRetrievalPlan;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDataDrivenSubscriptionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateDataDrivenSubscriptionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        public CreateDataDrivenSubscriptionResponse()
        {
        }
        
        public CreateDataDrivenSubscriptionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string SubscriptionID)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.SubscriptionID = SubscriptionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExtensionSettings", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetExtensionSettingsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Extension;
        
        public GetExtensionSettingsRequest()
        {
        }
        
        public GetExtensionSettingsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Extension)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Extension = Extension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExtensionSettingsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetExtensionSettingsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ExtensionParameter[] ExtensionParameters;
        
        public GetExtensionSettingsResponse()
        {
        }
        
        public GetExtensionSettingsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ExtensionParameter[] ExtensionParameters)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExtensionParameters = ExtensionParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateExtensionSettings", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ValidateExtensionSettingsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] ParameterValues;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string SiteUrl;
        
        public ValidateExtensionSettingsRequest()
        {
        }
        
        public ValidateExtensionSettingsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Extension, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] ParameterValues, string SiteUrl)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Extension = Extension;
            this.ParameterValues = ParameterValues;
            this.SiteUrl = SiteUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateExtensionSettingsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ValidateExtensionSettingsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ExtensionParameter[] ParameterErrors;
        
        public ValidateExtensionSettingsResponse()
        {
        }
        
        public ValidateExtensionSettingsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ExtensionParameter[] ParameterErrors)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ParameterErrors = ParameterErrors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSubscriptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSubscriptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPathOrSiteURL;
        
        public ListSubscriptionsRequest()
        {
        }
        
        public ListSubscriptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPathOrSiteURL)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPathOrSiteURL = ItemPathOrSiteURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSubscriptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSubscriptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Subscription[] SubscriptionItems;
        
        public ListSubscriptionsResponse()
        {
        }
        
        public ListSubscriptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Subscription[] SubscriptionItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.SubscriptionItems = SubscriptionItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListMySubscriptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListMySubscriptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPathOrSiteURL;
        
        public ListMySubscriptionsRequest()
        {
        }
        
        public ListMySubscriptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPathOrSiteURL)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPathOrSiteURL = ItemPathOrSiteURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListMySubscriptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListMySubscriptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Subscription[] SubscriptionItems;
        
        public ListMySubscriptionsResponse()
        {
        }
        
        public ListMySubscriptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Subscription[] SubscriptionItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.SubscriptionItems = SubscriptionItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSubscriptionsUsingDataSource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSubscriptionsUsingDataSourceRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        public ListSubscriptionsUsingDataSourceRequest()
        {
        }
        
        public ListSubscriptionsUsingDataSourceRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSubscriptionsUsingDataSourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSubscriptionsUsingDataSourceResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Subscription[] SubscriptionItems;
        
        public ListSubscriptionsUsingDataSourceResponse()
        {
        }
        
        public ListSubscriptionsUsingDataSourceResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Subscription[] SubscriptionItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.SubscriptionItems = SubscriptionItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSubscriptionOwner", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ChangeSubscriptionOwnerRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SubscriptionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string NewOwner;
        
        public ChangeSubscriptionOwnerRequest()
        {
        }
        
        public ChangeSubscriptionOwnerRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, string NewOwner)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SubscriptionID = SubscriptionID;
            this.NewOwner = NewOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSubscriptionOwnerResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ChangeSubscriptionOwnerResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public ChangeSubscriptionOwnerResponse()
        {
        }
        
        public ChangeSubscriptionOwnerResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDataSource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateDataSourceRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public bool Overwrite;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public ReportViewerForCore.ReportService.DataSourceDefinition Definition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public CreateDataSourceRequest()
        {
        }
        
        public CreateDataSourceRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, string Parent, bool Overwrite, ReportViewerForCore.ReportService.DataSourceDefinition Definition, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
            this.Parent = Parent;
            this.Overwrite = Overwrite;
            this.Definition = Definition;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDataSourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateDataSourceResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem ItemInfo;
        
        public CreateDataSourceResponse()
        {
        }
        
        public CreateDataSourceResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem ItemInfo)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ItemInfo = ItemInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrepareQuery", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class PrepareQueryRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.DataSource DataSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.DataSetDefinition DataSet;
        
        public PrepareQueryRequest()
        {
        }
        
        public PrepareQueryRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.DataSource DataSource, ReportViewerForCore.ReportService.DataSetDefinition DataSet)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
            this.DataSet = DataSet;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrepareQueryResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class PrepareQueryResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.DataSetDefinition DataSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool Changed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string[] ParameterNames;
        
        public PrepareQueryResponse()
        {
        }
        
        public PrepareQueryResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.DataSetDefinition DataSettings, bool Changed, string[] ParameterNames)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.DataSettings = DataSettings;
            this.Changed = Changed;
            this.ParameterNames = ParameterNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableDataSource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class EnableDataSourceRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        public EnableDataSourceRequest()
        {
        }
        
        public EnableDataSourceRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableDataSourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class EnableDataSourceResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public EnableDataSourceResponse()
        {
        }
        
        public EnableDataSourceResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DisableDataSource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DisableDataSourceRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        public DisableDataSourceRequest()
        {
        }
        
        public DisableDataSourceRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DisableDataSourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DisableDataSourceResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DisableDataSourceResponse()
        {
        }
        
        public DisableDataSourceResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDataSourceContents", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetDataSourceContentsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.DataSourceDefinition Definition;
        
        public SetDataSourceContentsRequest()
        {
        }
        
        public SetDataSourceContentsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, ReportViewerForCore.ReportService.DataSourceDefinition Definition)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDataSourceContentsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetDataSourceContentsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetDataSourceContentsResponse()
        {
        }
        
        public SetDataSourceContentsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSourceContents", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetDataSourceContentsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        public GetDataSourceContentsRequest()
        {
        }
        
        public GetDataSourceContentsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSourceContentsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetDataSourceContentsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.DataSourceDefinition Definition;
        
        public GetDataSourceContentsResponse()
        {
        }
        
        public GetDataSourceContentsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.DataSourceDefinition Definition)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListDatabaseCredentialRetrievalOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListDatabaseCredentialRetrievalOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListDatabaseCredentialRetrievalOptionsRequest()
        {
        }
        
        public ListDatabaseCredentialRetrievalOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListDatabaseCredentialRetrievalOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListDatabaseCredentialRetrievalOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListDatabaseCredentialRetrievalOptionsResult;
        
        public ListDatabaseCredentialRetrievalOptionsResponse()
        {
        }
        
        public ListDatabaseCredentialRetrievalOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListDatabaseCredentialRetrievalOptionsResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListDatabaseCredentialRetrievalOptionsResult = ListDatabaseCredentialRetrievalOptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemDataSources", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemDataSourcesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.DataSource[] DataSources;
        
        public SetItemDataSourcesRequest()
        {
        }
        
        public SetItemDataSourcesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.DataSource[] DataSources)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.DataSources = DataSources;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemDataSourcesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemDataSourcesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetItemDataSourcesResponse()
        {
        }
        
        public SetItemDataSourcesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemDataSources", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemDataSourcesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemDataSourcesRequest()
        {
        }
        
        public GetItemDataSourcesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemDataSourcesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemDataSourcesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.DataSource[] DataSources;
        
        public GetItemDataSourcesResponse()
        {
        }
        
        public GetItemDataSourcesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.DataSource[] DataSources)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.DataSources = DataSources;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestConnectForDataSourceDefinition", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class TestConnectForDataSourceDefinitionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.DataSourceDefinition DataSourceDefinition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Password;
        
        public TestConnectForDataSourceDefinitionRequest()
        {
        }
        
        public TestConnectForDataSourceDefinitionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.DataSourceDefinition DataSourceDefinition, string UserName, string Password)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSourceDefinition = DataSourceDefinition;
            this.UserName = UserName;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestConnectForDataSourceDefinitionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class TestConnectForDataSourceDefinitionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool TestConnectForDataSourceDefinitionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ConnectError;
        
        public TestConnectForDataSourceDefinitionResponse()
        {
        }
        
        public TestConnectForDataSourceDefinitionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, bool TestConnectForDataSourceDefinitionResult, string ConnectError)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.TestConnectForDataSourceDefinitionResult = TestConnectForDataSourceDefinitionResult;
            this.ConnectError = ConnectError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestConnectForItemDataSource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class TestConnectForItemDataSourceRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string DataSourceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string Password;
        
        public TestConnectForItemDataSourceRequest()
        {
        }
        
        public TestConnectForItemDataSourceRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string DataSourceName, string UserName, string Password)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.DataSourceName = DataSourceName;
            this.UserName = UserName;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestConnectForItemDataSourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class TestConnectForItemDataSourceResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool TestConnectForItemDataSourceResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ConnectError;
        
        public TestConnectForItemDataSourceResponse()
        {
        }
        
        public TestConnectForItemDataSourceResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, bool TestConnectForItemDataSourceResult, string ConnectError)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.TestConnectForItemDataSourceResult = TestConnectForItemDataSourceResult;
            this.ConnectError = ConnectError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateRole", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateRoleRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string[] TaskIDs;
        
        public CreateRoleRequest()
        {
        }
        
        public CreateRoleRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string Description, string[] TaskIDs)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Name = Name;
            this.Description = Description;
            this.TaskIDs = TaskIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateRoleResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateRoleResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public CreateRoleResponse()
        {
        }
        
        public CreateRoleResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRoleProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetRolePropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string[] TaskIDs;
        
        public SetRolePropertiesRequest()
        {
        }
        
        public SetRolePropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string Description, string[] TaskIDs)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Name = Name;
            this.Description = Description;
            this.TaskIDs = TaskIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRolePropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetRolePropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetRolePropertiesResponse()
        {
        }
        
        public SetRolePropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetRolePropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string SiteUrl;
        
        public GetRolePropertiesRequest()
        {
        }
        
        public GetRolePropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string SiteUrl)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Name = Name;
            this.SiteUrl = SiteUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRolePropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetRolePropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] TaskIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Description;
        
        public GetRolePropertiesResponse()
        {
        }
        
        public GetRolePropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] TaskIDs, string Description)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.TaskIDs = TaskIDs;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRole", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteRoleRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Name;
        
        public DeleteRoleRequest()
        {
        }
        
        public DeleteRoleRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRoleResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteRoleResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DeleteRoleResponse()
        {
        }
        
        public DeleteRoleResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRoles", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListRolesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SecurityScope;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string SiteUrl;
        
        public ListRolesRequest()
        {
        }
        
        public ListRolesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SecurityScope, string SiteUrl)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SecurityScope = SecurityScope;
            this.SiteUrl = SiteUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRolesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListRolesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Role[] Roles;
        
        public ListRolesResponse()
        {
        }
        
        public ListRolesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Role[] Roles)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Roles = Roles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListTasks", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListTasksRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SecurityScope;
        
        public ListTasksRequest()
        {
        }
        
        public ListTasksRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SecurityScope)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SecurityScope = SecurityScope;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListTasksResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListTasksResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Task[] Tasks;
        
        public ListTasksResponse()
        {
        }
        
        public ListTasksResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Task[] Tasks)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Tasks = Tasks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Policy[] Policies;
        
        public SetPoliciesRequest()
        {
        }
        
        public SetPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Policies = Policies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetPoliciesResponse()
        {
        }
        
        public SetPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetPoliciesRequest()
        {
        }
        
        public GetPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Policy[] Policies;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool InheritParent;
        
        public GetPoliciesResponse()
        {
        }
        
        public GetPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Policy[] Policies, bool InheritParent)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Policies = Policies;
            this.InheritParent = InheritParent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemDataSourcePrompts", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemDataSourcePromptsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemDataSourcePromptsRequest()
        {
        }
        
        public GetItemDataSourcePromptsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemDataSourcePromptsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemDataSourcePromptsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.DataSourcePrompt[] DataSourcePrompts;
        
        public GetItemDataSourcePromptsResponse()
        {
        }
        
        public GetItemDataSourcePromptsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.DataSourcePrompt[] DataSourcePrompts)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.DataSourcePrompts = DataSourcePrompts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateModel", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GenerateModelRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string DataSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public GenerateModelRequest()
        {
        }
        
        public GenerateModelRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, string Model, string Parent, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.DataSource = DataSource;
            this.Model = Model;
            this.Parent = Parent;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateModelResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GenerateModelResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem ItemInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Warning[] Warnings;
        
        public GenerateModelResponse()
        {
        }
        
        public GenerateModelResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem ItemInfo, ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ItemInfo = ItemInfo;
            this.Warnings = Warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModelItemPermissions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetModelItemPermissionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        public GetModelItemPermissionsRequest()
        {
        }
        
        public GetModelItemPermissionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModelItemPermissionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetModelItemPermissionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] Permissions;
        
        public GetModelItemPermissionsResponse()
        {
        }
        
        public GetModelItemPermissionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] Permissions)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Permissions = Permissions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetModelItemPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetModelItemPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.Policy[] Policies;
        
        public SetModelItemPoliciesRequest()
        {
        }
        
        public SetModelItemPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
            this.Policies = Policies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetModelItemPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetModelItemPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetModelItemPoliciesResponse()
        {
        }
        
        public SetModelItemPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModelItemPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetModelItemPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        public GetModelItemPoliciesRequest()
        {
        }
        
        public GetModelItemPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModelItemPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetModelItemPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Policy[] Policies;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool InheritParent;
        
        public GetModelItemPoliciesResponse()
        {
        }
        
        public GetModelItemPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Policy[] Policies, bool InheritParent)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Policies = Policies;
            this.InheritParent = InheritParent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModel", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetUserModelRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Perspective;
        
        public GetUserModelRequest()
        {
        }
        
        public GetUserModelRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string Perspective)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.Perspective = Perspective;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModelResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetUserModelResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public GetUserModelResponse()
        {
        }
        
        public GetUserModelResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, byte[] Definition)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InheritModelItemParentSecurity", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class InheritModelItemParentSecurityRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        public InheritModelItemParentSecurityRequest()
        {
        }
        
        public InheritModelItemParentSecurityRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InheritModelItemParentSecurityResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class InheritModelItemParentSecurityResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public InheritModelItemParentSecurityResponse()
        {
        }
        
        public InheritModelItemParentSecurityResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetModelDrillthroughReports", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetModelDrillthroughReportsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports;
        
        public SetModelDrillthroughReportsRequest()
        {
        }
        
        public SetModelDrillthroughReportsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
            this.Reports = Reports;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetModelDrillthroughReportsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetModelDrillthroughReportsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetModelDrillthroughReportsResponse()
        {
        }
        
        public SetModelDrillthroughReportsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelDrillthroughReports", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelDrillthroughReportsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        public ListModelDrillthroughReportsRequest()
        {
        }
        
        public ListModelDrillthroughReportsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelDrillthroughReportsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelDrillthroughReportsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports;
        
        public ListModelDrillthroughReportsResponse()
        {
        }
        
        public ListModelDrillthroughReportsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Reports = Reports;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelItemChildren", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelItemChildrenRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ModelItemID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public bool Recursive;
        
        public ListModelItemChildrenRequest()
        {
        }
        
        public ListModelItemChildrenRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, bool Recursive)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
            this.ModelItemID = ModelItemID;
            this.Recursive = Recursive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelItemChildrenResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelItemChildrenResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ModelItem[] ModelItems;
        
        public ListModelItemChildrenResponse()
        {
        }
        
        public ListModelItemChildrenResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ModelItem[] ModelItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ModelItems = ModelItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelItemTypes", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelItemTypesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListModelItemTypesRequest()
        {
        }
        
        public ListModelItemTypesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelItemTypesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelItemTypesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListModelItemTypesResult;
        
        public ListModelItemTypesResponse()
        {
        }
        
        public ListModelItemTypesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListModelItemTypesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListModelItemTypesResult = ListModelItemTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelPerspectives", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelPerspectivesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        public ListModelPerspectivesRequest()
        {
        }
        
        public ListModelPerspectivesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListModelPerspectivesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListModelPerspectivesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ModelCatalogItem[] ModelCatalogItems;
        
        public ListModelPerspectivesResponse()
        {
        }
        
        public ListModelPerspectivesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ModelCatalogItem[] ModelCatalogItems)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ModelCatalogItems = ModelCatalogItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegenerateModel", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class RegenerateModelRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        public RegenerateModelRequest()
        {
        }
        
        public RegenerateModelRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegenerateModelResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class RegenerateModelResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Warning[] Warnings;
        
        public RegenerateModelResponse()
        {
        }
        
        public RegenerateModelResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Warnings = Warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveAllModelItemPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class RemoveAllModelItemPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Model;
        
        public RemoveAllModelItemPoliciesRequest()
        {
        }
        
        public RemoveAllModelItemPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Model = Model;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveAllModelItemPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class RemoveAllModelItemPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public RemoveAllModelItemPoliciesResponse()
        {
        }
        
        public RemoveAllModelItemPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSchedule", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateScheduleRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string SiteUrl;
        
        public CreateScheduleRequest()
        {
        }
        
        public CreateScheduleRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition, string SiteUrl)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Name = Name;
            this.ScheduleDefinition = ScheduleDefinition;
            this.SiteUrl = SiteUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateScheduleResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateScheduleResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ScheduleID;
        
        public CreateScheduleResponse()
        {
        }
        
        public CreateScheduleResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string ScheduleID)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ScheduleID = ScheduleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSchedule", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteScheduleRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ScheduleID;
        
        public DeleteScheduleRequest()
        {
        }
        
        public DeleteScheduleRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ScheduleID = ScheduleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteScheduleResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteScheduleResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DeleteScheduleResponse()
        {
        }
        
        public DeleteScheduleResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSchedules", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSchedulesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string SiteUrl;
        
        public ListSchedulesRequest()
        {
        }
        
        public ListSchedulesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SiteUrl)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.SiteUrl = SiteUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSchedulesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSchedulesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Schedule[] Schedules;
        
        public ListSchedulesResponse()
        {
        }
        
        public ListSchedulesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Schedule[] Schedules)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Schedules = Schedules;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetScheduleProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSchedulePropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ScheduleID;
        
        public GetSchedulePropertiesRequest()
        {
        }
        
        public GetSchedulePropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ScheduleID = ScheduleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSchedulePropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSchedulePropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Schedule Schedule;
        
        public GetSchedulePropertiesResponse()
        {
        }
        
        public GetSchedulePropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Schedule Schedule)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Schedule = Schedule;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListScheduleStates", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListScheduleStatesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListScheduleStatesRequest()
        {
        }
        
        public ListScheduleStatesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListScheduleStatesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListScheduleStatesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListScheduleStatesResult;
        
        public ListScheduleStatesResponse()
        {
        }
        
        public ListScheduleStatesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListScheduleStatesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListScheduleStatesResult = ListScheduleStatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PauseSchedule", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class PauseScheduleRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ScheduleID;
        
        public PauseScheduleRequest()
        {
        }
        
        public PauseScheduleRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ScheduleID = ScheduleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PauseScheduleResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class PauseScheduleResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public PauseScheduleResponse()
        {
        }
        
        public PauseScheduleResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResumeSchedule", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ResumeScheduleRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ScheduleID;
        
        public ResumeScheduleRequest()
        {
        }
        
        public ResumeScheduleRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ScheduleID = ScheduleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResumeScheduleResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ResumeScheduleResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public ResumeScheduleResponse()
        {
        }
        
        public ResumeScheduleResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetScheduleProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSchedulePropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ScheduleID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition;
        
        public SetSchedulePropertiesRequest()
        {
        }
        
        public SetSchedulePropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string ScheduleID, ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Name = Name;
            this.ScheduleID = ScheduleID;
            this.ScheduleDefinition = ScheduleDefinition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSchedulePropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSchedulePropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetSchedulePropertiesResponse()
        {
        }
        
        public SetSchedulePropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListScheduledItems", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListScheduledItemsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ScheduleID;
        
        public ListScheduledItemsRequest()
        {
        }
        
        public ListScheduledItemsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ScheduleID = ScheduleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListScheduledItemsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListScheduledItemsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CatalogItem[] Items;
        
        public ListScheduledItemsResponse()
        {
        }
        
        public ListScheduledItemsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CatalogItem[] Items)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Items = Items;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemParameters", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemParametersRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.ItemParameter[] Parameters;
        
        public SetItemParametersRequest()
        {
        }
        
        public SetItemParametersRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ItemParameter[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemParametersResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemParametersResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetItemParametersResponse()
        {
        }
        
        public SetItemParametersResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemParameters", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemParametersRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string HistoryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public bool ForRendering;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public ReportViewerForCore.ReportService.ParameterValue[] Values;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public ReportViewerForCore.ReportService.DataSourceCredentials[] Credentials;
        
        public GetItemParametersRequest()
        {
        }
        
        public GetItemParametersRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string HistoryID, bool ForRendering, ReportViewerForCore.ReportService.ParameterValue[] Values, ReportViewerForCore.ReportService.DataSourceCredentials[] Credentials)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.HistoryID = HistoryID;
            this.ForRendering = ForRendering;
            this.Values = Values;
            this.Credentials = Credentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemParametersResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemParametersResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.ItemParameter[] Parameters;
        
        public GetItemParametersResponse()
        {
        }
        
        public GetItemParametersResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.ItemParameter[] Parameters)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListParameterTypes", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListParameterTypesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListParameterTypesRequest()
        {
        }
        
        public ListParameterTypesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListParameterTypesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListParameterTypesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListParameterTypesResult;
        
        public ListParameterTypesResponse()
        {
        }
        
        public ListParameterTypesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListParameterTypesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListParameterTypesResult = ListParameterTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListParameterStates", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListParameterStatesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListParameterStatesRequest()
        {
        }
        
        public ListParameterStatesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListParameterStatesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListParameterStatesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListParameterStatesResult;
        
        public ListParameterStatesResponse()
        {
        }
        
        public ListParameterStatesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListParameterStatesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListParameterStatesResult = ListParameterStatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateReportEditSession", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateReportEditSessionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public CreateReportEditSessionRequest()
        {
        }
        
        public CreateReportEditSessionRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Report, string Parent, byte[] Definition)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Report = Report;
            this.Parent = Parent;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateReportEditSessionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateReportEditSessionResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string EditSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Warning[] Warnings;
        
        public CreateReportEditSessionResponse()
        {
        }
        
        public CreateReportEditSessionResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string EditSessionID, ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.EditSessionID = EditSessionID;
            this.Warnings = Warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLinkedItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateLinkedItemRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string Link;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public CreateLinkedItemRequest()
        {
        }
        
        public CreateLinkedItemRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Parent, string Link, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Parent = Parent;
            this.Link = Link;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLinkedItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateLinkedItemResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public CreateLinkedItemResponse()
        {
        }
        
        public CreateLinkedItemResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemLink", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemLinkRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Link;
        
        public SetItemLinkRequest()
        {
        }
        
        public SetItemLinkRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Link)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Link = Link;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemLinkResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemLinkResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetItemLinkResponse()
        {
        }
        
        public SetItemLinkResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemLink", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemLinkRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemLinkRequest()
        {
        }
        
        public GetItemLinkRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemLinkResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemLinkResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Link;
        
        public GetItemLinkResponse()
        {
        }
        
        public GetItemLinkResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string Link)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Link = Link;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListExecutionSettings", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListExecutionSettingsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListExecutionSettingsRequest()
        {
        }
        
        public ListExecutionSettingsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListExecutionSettingsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListExecutionSettingsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListExecutionSettingsResult;
        
        public ListExecutionSettingsResponse()
        {
        }
        
        public ListExecutionSettingsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListExecutionSettingsResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListExecutionSettingsResult = ListExecutionSettingsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetExecutionOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string ExecutionSetting;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))]
        public ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item;
        
        public SetExecutionOptionsRequest()
        {
        }
        
        public SetExecutionOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string ExecutionSetting, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.ExecutionSetting = ExecutionSetting;
            this.Item = Item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetExecutionOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetExecutionOptionsResponse()
        {
        }
        
        public SetExecutionOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetExecutionOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetExecutionOptionsRequest()
        {
        }
        
        public GetExecutionOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetExecutionOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ExecutionSetting;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))]
        public ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item;
        
        public GetExecutionOptionsResponse()
        {
        }
        
        public GetExecutionOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string ExecutionSetting, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExecutionSetting = ExecutionSetting;
            this.Item = Item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateItemExecutionSnapshot", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class UpdateItemExecutionSnapshotRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public UpdateItemExecutionSnapshotRequest()
        {
        }
        
        public UpdateItemExecutionSnapshotRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateItemExecutionSnapshotResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class UpdateItemExecutionSnapshotResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public UpdateItemExecutionSnapshotResponse()
        {
        }
        
        public UpdateItemExecutionSnapshotResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCacheOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetCacheOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool CacheItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", typeof(ScheduleExpiration))]
        [System.Xml.Serialization.XmlElementAttribute("TimeExpiration", typeof(TimeExpiration))]
        public ReportViewerForCore.ReportService.ExpirationDefinition Item;
        
        public SetCacheOptionsRequest()
        {
        }
        
        public SetCacheOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool CacheItem, ReportViewerForCore.ReportService.ExpirationDefinition Item)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.CacheItem = CacheItem;
            this.Item = Item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCacheOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetCacheOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetCacheOptionsResponse()
        {
        }
        
        public SetCacheOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCacheOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetCacheOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetCacheOptionsRequest()
        {
        }
        
        public GetCacheOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCacheOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetCacheOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool CacheItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", typeof(ScheduleExpiration))]
        [System.Xml.Serialization.XmlElementAttribute("TimeExpiration", typeof(TimeExpiration))]
        public ReportViewerForCore.ReportService.ExpirationDefinition Item;
        
        public GetCacheOptionsResponse()
        {
        }
        
        public GetCacheOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, bool CacheItem, ReportViewerForCore.ReportService.ExpirationDefinition Item)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.CacheItem = CacheItem;
            this.Item = Item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FlushCache", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class FlushCacheRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public FlushCacheRequest()
        {
        }
        
        public FlushCacheRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FlushCacheResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class FlushCacheResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public FlushCacheResponse()
        {
        }
        
        public FlushCacheResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateItemHistorySnapshot", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateItemHistorySnapshotRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public CreateItemHistorySnapshotRequest()
        {
        }
        
        public CreateItemHistorySnapshotRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateItemHistorySnapshotResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateItemHistorySnapshotResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string HistoryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public ReportViewerForCore.ReportService.Warning[] Warnings;
        
        public CreateItemHistorySnapshotResponse()
        {
        }
        
        public CreateItemHistorySnapshotResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string HistoryID, ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.HistoryID = HistoryID;
            this.Warnings = Warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteItemHistorySnapshot", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteItemHistorySnapshotRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string HistoryID;
        
        public DeleteItemHistorySnapshotRequest()
        {
        }
        
        public DeleteItemHistorySnapshotRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string HistoryID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.HistoryID = HistoryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteItemHistorySnapshotResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteItemHistorySnapshotResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DeleteItemHistorySnapshotResponse()
        {
        }
        
        public DeleteItemHistorySnapshotResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemHistoryLimit", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemHistoryLimitRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool UseSystem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public int HistoryLimit;
        
        public SetItemHistoryLimitRequest()
        {
        }
        
        public SetItemHistoryLimitRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool UseSystem, int HistoryLimit)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.UseSystem = UseSystem;
            this.HistoryLimit = HistoryLimit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemHistoryLimitResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemHistoryLimitResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetItemHistoryLimitResponse()
        {
        }
        
        public SetItemHistoryLimitResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemHistoryLimit", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemHistoryLimitRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemHistoryLimitRequest()
        {
        }
        
        public GetItemHistoryLimitRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemHistoryLimitResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemHistoryLimitResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public int HistoryLimit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool IsSystem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public int SystemLimit;
        
        public GetItemHistoryLimitResponse()
        {
        }
        
        public GetItemHistoryLimitResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, int HistoryLimit, bool IsSystem, int SystemLimit)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.HistoryLimit = HistoryLimit;
            this.IsSystem = IsSystem;
            this.SystemLimit = SystemLimit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemHistoryOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemHistoryOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool EnableManualSnapshotCreation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public bool KeepExecutionSnapshots;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))]
        public ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item;
        
        public SetItemHistoryOptionsRequest()
        {
        }
        
        public SetItemHistoryOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.EnableManualSnapshotCreation = EnableManualSnapshotCreation;
            this.KeepExecutionSnapshots = KeepExecutionSnapshots;
            this.Item = Item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetItemHistoryOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetItemHistoryOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetItemHistoryOptionsResponse()
        {
        }
        
        public SetItemHistoryOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemHistoryOptions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemHistoryOptionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetItemHistoryOptionsRequest()
        {
        }
        
        public GetItemHistoryOptionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemHistoryOptionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetItemHistoryOptionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool EnableManualSnapshotCreation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public bool KeepExecutionSnapshots;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))]
        public ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item;
        
        public GetItemHistoryOptionsResponse()
        {
        }
        
        public GetItemHistoryOptionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.EnableManualSnapshotCreation = EnableManualSnapshotCreation;
            this.KeepExecutionSnapshots = KeepExecutionSnapshots;
            this.Item = Item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReportServerConfigInfo", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetReportServerConfigInfoRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool ScaleOut;
        
        public GetReportServerConfigInfoRequest()
        {
        }
        
        public GetReportServerConfigInfoRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, bool ScaleOut)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ScaleOut = ScaleOut;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReportServerConfigInfoResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetReportServerConfigInfoResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ServerConfigInfo;
        
        public GetReportServerConfigInfoResponse()
        {
        }
        
        public GetReportServerConfigInfoResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string ServerConfigInfo)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ServerConfigInfo = ServerConfigInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsSSLRequired", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class IsSSLRequiredRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public IsSSLRequiredRequest()
        {
        }
        
        public IsSSLRequiredRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsSSLRequiredResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class IsSSLRequiredResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool IsSSLRequiredResult;
        
        public IsSSLRequiredResponse()
        {
        }
        
        public IsSSLRequiredResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, bool IsSSLRequiredResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.IsSSLRequiredResult = IsSSLRequiredResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSystemPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public SetSystemPropertiesRequest()
        {
        }
        
        public SetSystemPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSystemPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetSystemPropertiesResponse()
        {
        }
        
        public SetSystemPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSystemPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public GetSystemPropertiesRequest()
        {
        }
        
        public GetSystemPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSystemPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Values;
        
        public GetSystemPropertiesResponse()
        {
        }
        
        public GetSystemPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Property[] Values)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Values = Values;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUserSettings", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetUserSettingsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public SetUserSettingsRequest()
        {
        }
        
        public SetUserSettingsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUserSettingsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetUserSettingsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetUserSettingsResponse()
        {
        }
        
        public SetUserSettingsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserSettings", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetUserSettingsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Properties;
        
        public GetUserSettingsRequest()
        {
        }
        
        public GetUserSettingsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserSettingsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetUserSettingsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Property[] Values;
        
        public GetUserSettingsResponse()
        {
        }
        
        public GetUserSettingsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Property[] Values)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Values = Values;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSystemPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Policy[] Policies;
        
        public SetSystemPoliciesRequest()
        {
        }
        
        public SetSystemPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Policies = Policies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetSystemPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetSystemPoliciesResponse()
        {
        }
        
        public SetSystemPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemPolicies", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSystemPoliciesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public GetSystemPoliciesRequest()
        {
        }
        
        public GetSystemPoliciesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemPoliciesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSystemPoliciesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Policy[] Policies;
        
        public GetSystemPoliciesResponse()
        {
        }
        
        public GetSystemPoliciesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Policies = Policies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListExtensions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListExtensionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ExtensionType;
        
        public ListExtensionsRequest()
        {
        }
        
        public ListExtensionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ExtensionType)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ExtensionType = ExtensionType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListExtensionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListExtensionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Extension[] Extensions;
        
        public ListExtensionsResponse()
        {
        }
        
        public ListExtensionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Extension[] Extensions)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Extensions = Extensions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListExtensionTypes", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListExtensionTypesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListExtensionTypesRequest()
        {
        }
        
        public ListExtensionTypesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListExtensionTypesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListExtensionTypesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListExtensionTypesResult;
        
        public ListExtensionTypesResponse()
        {
        }
        
        public ListExtensionTypesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListExtensionTypesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListExtensionTypesResult = ListExtensionTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListEvents", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListEventsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListEventsRequest()
        {
        }
        
        public ListEventsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListEventsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListEventsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Event[] Events;
        
        public ListEventsResponse()
        {
        }
        
        public ListEventsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Event[] Events)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Events = Events;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FireEvent", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class FireEventRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string EventData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string SiteUrl;
        
        public FireEventRequest()
        {
        }
        
        public FireEventRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string EventType, string EventData, string SiteUrl)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.EventType = EventType;
            this.EventData = EventData;
            this.SiteUrl = SiteUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FireEventResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class FireEventResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public FireEventResponse()
        {
        }
        
        public FireEventResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobs", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListJobsRequest()
        {
        }
        
        public ListJobsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.Job[] Jobs;
        
        public ListJobsResponse()
        {
        }
        
        public ListJobsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.Job[] Jobs)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Jobs = Jobs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobTypes", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobTypesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListJobTypesRequest()
        {
        }
        
        public ListJobTypesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobTypesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobTypesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListJobTypesResult;
        
        public ListJobTypesResponse()
        {
        }
        
        public ListJobTypesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListJobTypesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListJobTypesResult = ListJobTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobActions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobActionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListJobActionsRequest()
        {
        }
        
        public ListJobActionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobActionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobActionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListJobActionsResult;
        
        public ListJobActionsResponse()
        {
        }
        
        public ListJobActionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListJobActionsResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListJobActionsResult = ListJobActionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobStates", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobStatesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListJobStatesRequest()
        {
        }
        
        public ListJobStatesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListJobStatesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListJobStatesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListJobStatesResult;
        
        public ListJobStatesResponse()
        {
        }
        
        public ListJobStatesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListJobStatesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListJobStatesResult = ListJobStatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelJob", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CancelJobRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string JobID;
        
        public CancelJobRequest()
        {
        }
        
        public CancelJobRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string JobID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.JobID = JobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelJobResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CancelJobResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public bool CancelJobResult;
        
        public CancelJobResponse()
        {
        }
        
        public CancelJobResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, bool CancelJobResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.CancelJobResult = CancelJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCacheRefreshPlan", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateCacheRefreshPlanRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public ReportViewerForCore.ReportService.ParameterValue[] Parameters;
        
        public CreateCacheRefreshPlanRequest()
        {
        }
        
        public CreateCacheRefreshPlanRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCacheRefreshPlanResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class CreateCacheRefreshPlanResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string CacheRefreshPlanID;
        
        public CreateCacheRefreshPlanResponse()
        {
        }
        
        public CreateCacheRefreshPlanResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string CacheRefreshPlanID)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.CacheRefreshPlanID = CacheRefreshPlanID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCacheRefreshPlanProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetCacheRefreshPlanPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string CacheRefreshPlanID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public ReportViewerForCore.ReportService.ParameterValue[] Parameters;
        
        public SetCacheRefreshPlanPropertiesRequest()
        {
        }
        
        public SetCacheRefreshPlanPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.CacheRefreshPlanID = CacheRefreshPlanID;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCacheRefreshPlanPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class SetCacheRefreshPlanPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public SetCacheRefreshPlanPropertiesResponse()
        {
        }
        
        public SetCacheRefreshPlanPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCacheRefreshPlanProperties", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetCacheRefreshPlanPropertiesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string CacheRefreshPlanID;
        
        public GetCacheRefreshPlanPropertiesRequest()
        {
        }
        
        public GetCacheRefreshPlanPropertiesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.CacheRefreshPlanID = CacheRefreshPlanID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCacheRefreshPlanPropertiesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetCacheRefreshPlanPropertiesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string LastRunStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public ReportViewerForCore.ReportService.CacheRefreshPlanState State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=3)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=4)]
        public string MatchData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=5)]
        public ReportViewerForCore.ReportService.ParameterValue[] Parameters;
        
        public GetCacheRefreshPlanPropertiesResponse()
        {
        }
        
        public GetCacheRefreshPlanPropertiesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string Description, string LastRunStatus, ReportViewerForCore.ReportService.CacheRefreshPlanState State, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Description = Description;
            this.LastRunStatus = LastRunStatus;
            this.State = State;
            this.EventType = EventType;
            this.MatchData = MatchData;
            this.Parameters = Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCacheRefreshPlan", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteCacheRefreshPlanRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string CacheRefreshPlanID;
        
        public DeleteCacheRefreshPlanRequest()
        {
        }
        
        public DeleteCacheRefreshPlanRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.CacheRefreshPlanID = CacheRefreshPlanID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCacheRefreshPlanResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class DeleteCacheRefreshPlanResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public DeleteCacheRefreshPlanResponse()
        {
        }
        
        public DeleteCacheRefreshPlanResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListCacheRefreshPlans", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListCacheRefreshPlansRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public ListCacheRefreshPlansRequest()
        {
        }
        
        public ListCacheRefreshPlansRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListCacheRefreshPlansResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListCacheRefreshPlansResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public ReportViewerForCore.ReportService.CacheRefreshPlan[] CacheRefreshPlans;
        
        public ListCacheRefreshPlansResponse()
        {
        }
        
        public ListCacheRefreshPlansResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, ReportViewerForCore.ReportService.CacheRefreshPlan[] CacheRefreshPlans)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.CacheRefreshPlans = CacheRefreshPlans;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonUser", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class LogonUserRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=2)]
        public string authority;
        
        public LogonUserRequest()
        {
        }
        
        public LogonUserRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string userName, string password, string authority)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.userName = userName;
            this.password = password;
            this.authority = authority;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonUserResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class LogonUserResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public LogonUserResponse()
        {
        }
        
        public LogonUserResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Logoff", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class LogoffRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public LogoffRequest()
        {
        }
        
        public LogoffRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoffResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class LogoffResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        public LogoffResponse()
        {
        }
        
        public LogoffResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader)
        {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPermissions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetPermissionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string ItemPath;
        
        public GetPermissionsRequest()
        {
        }
        
        public GetPermissionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            this.TrustedUserHeader = TrustedUserHeader;
            this.ItemPath = ItemPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPermissionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetPermissionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Operation")]
        public string[] Permissions;
        
        public GetPermissionsResponse()
        {
        }
        
        public GetPermissionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] Permissions)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Permissions = Permissions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemPermissions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSystemPermissionsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public GetSystemPermissionsRequest()
        {
        }
        
        public GetSystemPermissionsRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemPermissionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class GetSystemPermissionsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Operation")]
        public string[] Permissions;
        
        public GetSystemPermissionsResponse()
        {
        }
        
        public GetSystemPermissionsResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] Permissions)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Permissions = Permissions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSecurityScopes", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSecurityScopesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader;
        
        public ListSecurityScopesRequest()
        {
        }
        
        public ListSecurityScopesRequest(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSecurityScopesResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsWrapped=true)]
    public partial class ListSecurityScopesResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
        public ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Order=0)]
        public string[] ListSecurityScopesResult;
        
        public ListSecurityScopesResponse()
        {
        }
        
        public ListSecurityScopesResponse(ReportViewerForCore.ReportService.ServerInfoHeader ServerInfoHeader, string[] ListSecurityScopesResult)
        {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListSecurityScopesResult = ListSecurityScopesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ReportingService2010SoapChannel : ReportViewerForCore.ReportService.ReportingService2010Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ReportingService2010SoapClient : System.ServiceModel.ClientBase<ReportViewerForCore.ReportService.ReportingService2010Soap>, ReportViewerForCore.ReportService.ReportingService2010Soap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ReportingService2010SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ReportingService2010SoapClient.GetBindingForEndpoint(endpointConfiguration), ReportingService2010SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingService2010SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ReportingService2010SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingService2010SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ReportingService2010SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingService2010SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateCatalogItemResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateCatalogItem(ReportViewerForCore.ReportService.CreateCatalogItemRequest request)
        {
            return base.Channel.CreateCatalogItem(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateCatalogItem(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemType, string Name, string Parent, bool Overwrite, byte[] Definition, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.CatalogItem ItemInfo, out ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            ReportViewerForCore.ReportService.CreateCatalogItemRequest inValue = new ReportViewerForCore.ReportService.CreateCatalogItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemType = ItemType;
            inValue.Name = Name;
            inValue.Parent = Parent;
            inValue.Overwrite = Overwrite;
            inValue.Definition = Definition;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.CreateCatalogItemResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateCatalogItem(inValue);
            ItemInfo = retVal.ItemInfo;
            Warnings = retVal.Warnings;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateCatalogItemResponse> CreateCatalogItemAsync(ReportViewerForCore.ReportService.CreateCatalogItemRequest request)
        {
            return base.Channel.CreateCatalogItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemDefinitionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemDefinition(ReportViewerForCore.ReportService.SetItemDefinitionRequest request)
        {
            return base.Channel.SetItemDefinition(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemDefinition(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, byte[] Definition, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            ReportViewerForCore.ReportService.SetItemDefinitionRequest inValue = new ReportViewerForCore.ReportService.SetItemDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Definition = Definition;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.SetItemDefinitionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemDefinition(inValue);
            Warnings = retVal.Warnings;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemDefinitionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemDefinitionAsync(ReportViewerForCore.ReportService.SetItemDefinitionRequest request)
        {
            return base.Channel.SetItemDefinitionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemDefinitionResponse> SetItemDefinitionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, byte[] Definition, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetItemDefinitionRequest inValue = new ReportViewerForCore.ReportService.SetItemDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Definition = Definition;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemDefinitionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemDefinitionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemDefinition(ReportViewerForCore.ReportService.GetItemDefinitionRequest request)
        {
            return base.Channel.GetItemDefinition(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemDefinition(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out byte[] Definition)
        {
            ReportViewerForCore.ReportService.GetItemDefinitionRequest inValue = new ReportViewerForCore.ReportService.GetItemDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemDefinitionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemDefinition(inValue);
            Definition = retVal.Definition;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDefinitionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemDefinitionAsync(ReportViewerForCore.ReportService.GetItemDefinitionRequest request)
        {
            return base.Channel.GetItemDefinitionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDefinitionResponse> GetItemDefinitionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.GetItemDefinitionRequest inValue = new ReportViewerForCore.ReportService.GetItemDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemDefinitionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemTypeResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemType(ReportViewerForCore.ReportService.GetItemTypeRequest request)
        {
            return base.Channel.GetItemType(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemType(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out string Type)
        {
            ReportViewerForCore.ReportService.GetItemTypeRequest inValue = new ReportViewerForCore.ReportService.GetItemTypeRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemTypeResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemType(inValue);
            Type = retVal.Type;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemTypeResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemTypeAsync(ReportViewerForCore.ReportService.GetItemTypeRequest request)
        {
            return base.Channel.GetItemTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemTypeResponse> GetItemTypeAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.GetItemTypeRequest inValue = new ReportViewerForCore.ReportService.GetItemTypeRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DeleteItemResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteItem(ReportViewerForCore.ReportService.DeleteItemRequest request)
        {
            return base.Channel.DeleteItem(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DeleteItem(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.DeleteItemRequest inValue = new ReportViewerForCore.ReportService.DeleteItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.DeleteItemResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteItem(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteItemResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteItemAsync(ReportViewerForCore.ReportService.DeleteItemRequest request)
        {
            return base.Channel.DeleteItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteItemResponse> DeleteItemAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.DeleteItemRequest inValue = new ReportViewerForCore.ReportService.DeleteItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.MoveItemResponse ReportViewerForCore.ReportService.ReportingService2010Soap.MoveItem(ReportViewerForCore.ReportService.MoveItemRequest request)
        {
            return base.Channel.MoveItem(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader MoveItem(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Target)
        {
            ReportViewerForCore.ReportService.MoveItemRequest inValue = new ReportViewerForCore.ReportService.MoveItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Target = Target;
            ReportViewerForCore.ReportService.MoveItemResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).MoveItem(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.MoveItemResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.MoveItemAsync(ReportViewerForCore.ReportService.MoveItemRequest request)
        {
            return base.Channel.MoveItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.MoveItemResponse> MoveItemAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Target)
        {
            ReportViewerForCore.ReportService.MoveItemRequest inValue = new ReportViewerForCore.ReportService.MoveItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Target = Target;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).MoveItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.InheritParentSecurityResponse ReportViewerForCore.ReportService.ReportingService2010Soap.InheritParentSecurity(ReportViewerForCore.ReportService.InheritParentSecurityRequest request)
        {
            return base.Channel.InheritParentSecurity(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader InheritParentSecurity(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.InheritParentSecurityRequest inValue = new ReportViewerForCore.ReportService.InheritParentSecurityRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.InheritParentSecurityResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).InheritParentSecurity(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.InheritParentSecurityResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.InheritParentSecurityAsync(ReportViewerForCore.ReportService.InheritParentSecurityRequest request)
        {
            return base.Channel.InheritParentSecurityAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.InheritParentSecurityResponse> InheritParentSecurityAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.InheritParentSecurityRequest inValue = new ReportViewerForCore.ReportService.InheritParentSecurityRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).InheritParentSecurityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListItemHistoryResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListItemHistory(ReportViewerForCore.ReportService.ListItemHistoryRequest request)
        {
            return base.Channel.ListItemHistory(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListItemHistory(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.ItemHistorySnapshot[] ItemHistory)
        {
            ReportViewerForCore.ReportService.ListItemHistoryRequest inValue = new ReportViewerForCore.ReportService.ListItemHistoryRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.ListItemHistoryResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListItemHistory(inValue);
            ItemHistory = retVal.ItemHistory;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListItemHistoryResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListItemHistoryAsync(ReportViewerForCore.ReportService.ListItemHistoryRequest request)
        {
            return base.Channel.ListItemHistoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListItemHistoryResponse> ListItemHistoryAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.ListItemHistoryRequest inValue = new ReportViewerForCore.ReportService.ListItemHistoryRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListItemHistoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListChildrenResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListChildren(ReportViewerForCore.ReportService.ListChildrenRequest request)
        {
            return base.Channel.ListChildren(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListChildren(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool Recursive, out ReportViewerForCore.ReportService.CatalogItem[] CatalogItems)
        {
            ReportViewerForCore.ReportService.ListChildrenRequest inValue = new ReportViewerForCore.ReportService.ListChildrenRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Recursive = Recursive;
            ReportViewerForCore.ReportService.ListChildrenResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListChildren(inValue);
            CatalogItems = retVal.CatalogItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListChildrenResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListChildrenAsync(ReportViewerForCore.ReportService.ListChildrenRequest request)
        {
            return base.Channel.ListChildrenAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListChildrenResponse> ListChildrenAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool Recursive)
        {
            ReportViewerForCore.ReportService.ListChildrenRequest inValue = new ReportViewerForCore.ReportService.ListChildrenRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Recursive = Recursive;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListChildrenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListDependentItemsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListDependentItems(ReportViewerForCore.ReportService.ListDependentItemsRequest request)
        {
            return base.Channel.ListDependentItems(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListDependentItems(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.CatalogItem[] CatalogItems)
        {
            ReportViewerForCore.ReportService.ListDependentItemsRequest inValue = new ReportViewerForCore.ReportService.ListDependentItemsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.ListDependentItemsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListDependentItems(inValue);
            CatalogItems = retVal.CatalogItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListDependentItemsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListDependentItemsAsync(ReportViewerForCore.ReportService.ListDependentItemsRequest request)
        {
            return base.Channel.ListDependentItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListDependentItemsResponse> ListDependentItemsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.ListDependentItemsRequest inValue = new ReportViewerForCore.ReportService.ListDependentItemsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListDependentItemsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.FindItemsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.FindItems(ReportViewerForCore.ReportService.FindItemsRequest request)
        {
            return base.Channel.FindItems(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader FindItems(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Folder, ReportViewerForCore.ReportService.BooleanOperatorEnum BooleanOperator, ReportViewerForCore.ReportService.Property[] SearchOptions, ReportViewerForCore.ReportService.SearchCondition[] SearchConditions, out ReportViewerForCore.ReportService.CatalogItem[] Items)
        {
            ReportViewerForCore.ReportService.FindItemsRequest inValue = new ReportViewerForCore.ReportService.FindItemsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Folder = Folder;
            inValue.BooleanOperator = BooleanOperator;
            inValue.SearchOptions = SearchOptions;
            inValue.SearchConditions = SearchConditions;
            ReportViewerForCore.ReportService.FindItemsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).FindItems(inValue);
            Items = retVal.Items;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FindItemsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.FindItemsAsync(ReportViewerForCore.ReportService.FindItemsRequest request)
        {
            return base.Channel.FindItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FindItemsResponse> FindItemsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Folder, ReportViewerForCore.ReportService.BooleanOperatorEnum BooleanOperator, ReportViewerForCore.ReportService.Property[] SearchOptions, ReportViewerForCore.ReportService.SearchCondition[] SearchConditions)
        {
            ReportViewerForCore.ReportService.FindItemsRequest inValue = new ReportViewerForCore.ReportService.FindItemsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Folder = Folder;
            inValue.BooleanOperator = BooleanOperator;
            inValue.SearchOptions = SearchOptions;
            inValue.SearchConditions = SearchConditions;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).FindItemsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListParentsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListParents(ReportViewerForCore.ReportService.ListParentsRequest request)
        {
            return base.Channel.ListParents(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListParents(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.CatalogItem[] ListParentsResult)
        {
            ReportViewerForCore.ReportService.ListParentsRequest inValue = new ReportViewerForCore.ReportService.ListParentsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.ListParentsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListParents(inValue);
            ListParentsResult = retVal.ListParentsResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParentsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListParentsAsync(ReportViewerForCore.ReportService.ListParentsRequest request)
        {
            return base.Channel.ListParentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParentsResponse> ListParentsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.ListParentsRequest inValue = new ReportViewerForCore.ReportService.ListParentsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListParentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateFolderResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateFolder(ReportViewerForCore.ReportService.CreateFolderRequest request)
        {
            return base.Channel.CreateFolder(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateFolder(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Folder, string Parent, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.CatalogItem ItemInfo)
        {
            ReportViewerForCore.ReportService.CreateFolderRequest inValue = new ReportViewerForCore.ReportService.CreateFolderRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Folder = Folder;
            inValue.Parent = Parent;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.CreateFolderResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateFolder(inValue);
            ItemInfo = retVal.ItemInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateFolderResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateFolderAsync(ReportViewerForCore.ReportService.CreateFolderRequest request)
        {
            return base.Channel.CreateFolderAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateFolderResponse> CreateFolderAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Folder, string Parent, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.CreateFolderRequest inValue = new ReportViewerForCore.ReportService.CreateFolderRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Folder = Folder;
            inValue.Parent = Parent;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateFolderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetProperties(ReportViewerForCore.ReportService.SetPropertiesRequest request)
        {
            return base.Channel.SetProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.SetPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetPropertiesAsync(ReportViewerForCore.ReportService.SetPropertiesRequest request)
        {
            return base.Channel.SetPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetPropertiesResponse> SetPropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetProperties(ReportViewerForCore.ReportService.GetPropertiesRequest request)
        {
            return base.Channel.GetProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetProperties(ReportViewerForCore.ReportService.ItemNamespaceHeader ItemNamespaceHeader, ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.Property[] Values)
        {
            ReportViewerForCore.ReportService.GetPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetPropertiesRequest();
            inValue.ItemNamespaceHeader = ItemNamespaceHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.GetPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetProperties(inValue);
            Values = retVal.Values;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetPropertiesAsync(ReportViewerForCore.ReportService.GetPropertiesRequest request)
        {
            return base.Channel.GetPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPropertiesResponse> GetPropertiesAsync(ReportViewerForCore.ReportService.ItemNamespaceHeader ItemNamespaceHeader, ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.GetPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetPropertiesRequest();
            inValue.ItemNamespaceHeader = ItemNamespaceHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemReferencesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemReferences(ReportViewerForCore.ReportService.SetItemReferencesRequest request)
        {
            return base.Channel.SetItemReferences(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemReferences(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ItemReference[] ItemReferences)
        {
            ReportViewerForCore.ReportService.SetItemReferencesRequest inValue = new ReportViewerForCore.ReportService.SetItemReferencesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ItemReferences = ItemReferences;
            ReportViewerForCore.ReportService.SetItemReferencesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemReferences(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemReferencesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemReferencesAsync(ReportViewerForCore.ReportService.SetItemReferencesRequest request)
        {
            return base.Channel.SetItemReferencesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemReferencesResponse> SetItemReferencesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ItemReference[] ItemReferences)
        {
            ReportViewerForCore.ReportService.SetItemReferencesRequest inValue = new ReportViewerForCore.ReportService.SetItemReferencesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ItemReferences = ItemReferences;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemReferencesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemReferencesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemReferences(ReportViewerForCore.ReportService.GetItemReferencesRequest request)
        {
            return base.Channel.GetItemReferences(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemReferences(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string ReferenceItemType, out ReportViewerForCore.ReportService.ItemReferenceData[] ItemReferences)
        {
            ReportViewerForCore.ReportService.GetItemReferencesRequest inValue = new ReportViewerForCore.ReportService.GetItemReferencesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ReferenceItemType = ReferenceItemType;
            ReportViewerForCore.ReportService.GetItemReferencesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemReferences(inValue);
            ItemReferences = retVal.ItemReferences;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemReferencesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemReferencesAsync(ReportViewerForCore.ReportService.GetItemReferencesRequest request)
        {
            return base.Channel.GetItemReferencesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemReferencesResponse> GetItemReferencesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string ReferenceItemType)
        {
            ReportViewerForCore.ReportService.GetItemReferencesRequest inValue = new ReportViewerForCore.ReportService.GetItemReferencesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ReferenceItemType = ReferenceItemType;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemReferencesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListItemTypesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListItemTypes(ReportViewerForCore.ReportService.ListItemTypesRequest request)
        {
            return base.Channel.ListItemTypes(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListItemTypes(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListItemTypesResult)
        {
            ReportViewerForCore.ReportService.ListItemTypesRequest inValue = new ReportViewerForCore.ReportService.ListItemTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListItemTypesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListItemTypes(inValue);
            ListItemTypesResult = retVal.ListItemTypesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListItemTypesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListItemTypesAsync(ReportViewerForCore.ReportService.ListItemTypesRequest request)
        {
            return base.Channel.ListItemTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListItemTypesResponse> ListItemTypesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListItemTypesRequest inValue = new ReportViewerForCore.ReportService.ListItemTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListItemTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetSubscriptionPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetSubscriptionProperties(ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest request)
        {
            return base.Channel.SetSubscriptionProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetSubscriptionProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.SetSubscriptionPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSubscriptionProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSubscriptionPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest request)
        {
            return base.Channel.SetSubscriptionPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSubscriptionPropertiesResponse> SetSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetSubscriptionPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSubscriptionPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetSubscriptionPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetSubscriptionProperties(ReportViewerForCore.ReportService.GetSubscriptionPropertiesRequest request)
        {
            return base.Channel.GetSubscriptionProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetSubscriptionProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, out string Owner, out ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, out string Description, out ReportViewerForCore.ReportService.ActiveState Active, out string Status, out string EventType, out string MatchData, out ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.GetSubscriptionPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetSubscriptionPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            ReportViewerForCore.ReportService.GetSubscriptionPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSubscriptionProperties(inValue);
            Owner = retVal.Owner;
            ExtensionSettings = retVal.ExtensionSettings;
            Description = retVal.Description;
            Active = retVal.Active;
            Status = retVal.Status;
            EventType = retVal.EventType;
            MatchData = retVal.MatchData;
            Parameters = retVal.Parameters;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSubscriptionPropertiesResponse> GetSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.GetSubscriptionPropertiesRequest request)
        {
            return base.Channel.GetSubscriptionPropertiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetDataDrivenSubscriptionProperties(ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest request)
        {
            return base.Channel.SetDataDrivenSubscriptionProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetDataDrivenSubscriptionProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataDrivenSubscriptionID, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataDrivenSubscriptionID = DataDrivenSubscriptionID;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.DataRetrievalPlan = DataRetrievalPlan;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetDataDrivenSubscriptionProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetDataDrivenSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest request)
        {
            return base.Channel.SetDataDrivenSubscriptionPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesResponse> SetDataDrivenSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataDrivenSubscriptionID, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetDataDrivenSubscriptionPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataDrivenSubscriptionID = DataDrivenSubscriptionID;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.DataRetrievalPlan = DataRetrievalPlan;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetDataDrivenSubscriptionPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetDataDrivenSubscriptionProperties(ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesRequest request)
        {
            return base.Channel.GetDataDrivenSubscriptionProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetDataDrivenSubscriptionProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataDrivenSubscriptionID, out string Owner, out ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, out ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, out string Description, out ReportViewerForCore.ReportService.ActiveState Active, out string Status, out string EventType, out string MatchData, out ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataDrivenSubscriptionID = DataDrivenSubscriptionID;
            ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetDataDrivenSubscriptionProperties(inValue);
            Owner = retVal.Owner;
            ExtensionSettings = retVal.ExtensionSettings;
            DataRetrievalPlan = retVal.DataRetrievalPlan;
            Description = retVal.Description;
            Active = retVal.Active;
            Status = retVal.Status;
            EventType = retVal.EventType;
            MatchData = retVal.MatchData;
            Parameters = retVal.Parameters;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesResponse> GetDataDrivenSubscriptionPropertiesAsync(ReportViewerForCore.ReportService.GetDataDrivenSubscriptionPropertiesRequest request)
        {
            return base.Channel.GetDataDrivenSubscriptionPropertiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DisableSubscriptionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DisableSubscription(ReportViewerForCore.ReportService.DisableSubscriptionRequest request)
        {
            return base.Channel.DisableSubscription(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DisableSubscription(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            ReportViewerForCore.ReportService.DisableSubscriptionRequest inValue = new ReportViewerForCore.ReportService.DisableSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            ReportViewerForCore.ReportService.DisableSubscriptionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DisableSubscription(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DisableSubscriptionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DisableSubscriptionAsync(ReportViewerForCore.ReportService.DisableSubscriptionRequest request)
        {
            return base.Channel.DisableSubscriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DisableSubscriptionResponse> DisableSubscriptionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            ReportViewerForCore.ReportService.DisableSubscriptionRequest inValue = new ReportViewerForCore.ReportService.DisableSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DisableSubscriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.EnableSubscriptionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.EnableSubscription(ReportViewerForCore.ReportService.EnableSubscriptionRequest request)
        {
            return base.Channel.EnableSubscription(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader EnableSubscription(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            ReportViewerForCore.ReportService.EnableSubscriptionRequest inValue = new ReportViewerForCore.ReportService.EnableSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            ReportViewerForCore.ReportService.EnableSubscriptionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).EnableSubscription(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.EnableSubscriptionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.EnableSubscriptionAsync(ReportViewerForCore.ReportService.EnableSubscriptionRequest request)
        {
            return base.Channel.EnableSubscriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.EnableSubscriptionResponse> EnableSubscriptionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            ReportViewerForCore.ReportService.EnableSubscriptionRequest inValue = new ReportViewerForCore.ReportService.EnableSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).EnableSubscriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DeleteSubscriptionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteSubscription(ReportViewerForCore.ReportService.DeleteSubscriptionRequest request)
        {
            return base.Channel.DeleteSubscription(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DeleteSubscription(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            ReportViewerForCore.ReportService.DeleteSubscriptionRequest inValue = new ReportViewerForCore.ReportService.DeleteSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            ReportViewerForCore.ReportService.DeleteSubscriptionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteSubscription(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteSubscriptionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteSubscriptionAsync(ReportViewerForCore.ReportService.DeleteSubscriptionRequest request)
        {
            return base.Channel.DeleteSubscriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteSubscriptionResponse> DeleteSubscriptionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID)
        {
            ReportViewerForCore.ReportService.DeleteSubscriptionRequest inValue = new ReportViewerForCore.ReportService.DeleteSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteSubscriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateSubscriptionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateSubscription(ReportViewerForCore.ReportService.CreateSubscriptionRequest request)
        {
            return base.Channel.CreateSubscription(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateSubscription(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters, out string SubscriptionID)
        {
            ReportViewerForCore.ReportService.CreateSubscriptionRequest inValue = new ReportViewerForCore.ReportService.CreateSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.CreateSubscriptionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateSubscription(inValue);
            SubscriptionID = retVal.SubscriptionID;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateSubscriptionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateSubscriptionAsync(ReportViewerForCore.ReportService.CreateSubscriptionRequest request)
        {
            return base.Channel.CreateSubscriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateSubscriptionResponse> CreateSubscriptionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.CreateSubscriptionRequest inValue = new ReportViewerForCore.ReportService.CreateSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateSubscriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateDataDrivenSubscription(ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest request)
        {
            return base.Channel.CreateDataDrivenSubscription(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateDataDrivenSubscription(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters, out string SubscriptionID)
        {
            ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest inValue = new ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.DataRetrievalPlan = DataRetrievalPlan;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateDataDrivenSubscription(inValue);
            SubscriptionID = retVal.SubscriptionID;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateDataDrivenSubscriptionAsync(ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest request)
        {
            return base.Channel.CreateDataDrivenSubscriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionResponse> CreateDataDrivenSubscriptionAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ExtensionSettings ExtensionSettings, ReportViewerForCore.ReportService.DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] Parameters)
        {
            ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest inValue = new ReportViewerForCore.ReportService.CreateDataDrivenSubscriptionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.DataRetrievalPlan = DataRetrievalPlan;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateDataDrivenSubscriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetExtensionSettingsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetExtensionSettings(ReportViewerForCore.ReportService.GetExtensionSettingsRequest request)
        {
            return base.Channel.GetExtensionSettings(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetExtensionSettings(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Extension, out ReportViewerForCore.ReportService.ExtensionParameter[] ExtensionParameters)
        {
            ReportViewerForCore.ReportService.GetExtensionSettingsRequest inValue = new ReportViewerForCore.ReportService.GetExtensionSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Extension = Extension;
            ReportViewerForCore.ReportService.GetExtensionSettingsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetExtensionSettings(inValue);
            ExtensionParameters = retVal.ExtensionParameters;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetExtensionSettingsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetExtensionSettingsAsync(ReportViewerForCore.ReportService.GetExtensionSettingsRequest request)
        {
            return base.Channel.GetExtensionSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetExtensionSettingsResponse> GetExtensionSettingsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Extension)
        {
            ReportViewerForCore.ReportService.GetExtensionSettingsRequest inValue = new ReportViewerForCore.ReportService.GetExtensionSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Extension = Extension;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetExtensionSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ValidateExtensionSettingsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ValidateExtensionSettings(ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest request)
        {
            return base.Channel.ValidateExtensionSettings(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ValidateExtensionSettings(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Extension, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] ParameterValues, string SiteUrl, out ReportViewerForCore.ReportService.ExtensionParameter[] ParameterErrors)
        {
            ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest inValue = new ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Extension = Extension;
            inValue.ParameterValues = ParameterValues;
            inValue.SiteUrl = SiteUrl;
            ReportViewerForCore.ReportService.ValidateExtensionSettingsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ValidateExtensionSettings(inValue);
            ParameterErrors = retVal.ParameterErrors;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ValidateExtensionSettingsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ValidateExtensionSettingsAsync(ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest request)
        {
            return base.Channel.ValidateExtensionSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ValidateExtensionSettingsResponse> ValidateExtensionSettingsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Extension, ReportViewerForCore.ReportService.ParameterValueOrFieldReference[] ParameterValues, string SiteUrl)
        {
            ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest inValue = new ReportViewerForCore.ReportService.ValidateExtensionSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Extension = Extension;
            inValue.ParameterValues = ParameterValues;
            inValue.SiteUrl = SiteUrl;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ValidateExtensionSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListSubscriptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListSubscriptions(ReportViewerForCore.ReportService.ListSubscriptionsRequest request)
        {
            return base.Channel.ListSubscriptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListSubscriptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPathOrSiteURL, out ReportViewerForCore.ReportService.Subscription[] SubscriptionItems)
        {
            ReportViewerForCore.ReportService.ListSubscriptionsRequest inValue = new ReportViewerForCore.ReportService.ListSubscriptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPathOrSiteURL = ItemPathOrSiteURL;
            ReportViewerForCore.ReportService.ListSubscriptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSubscriptions(inValue);
            SubscriptionItems = retVal.SubscriptionItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSubscriptionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListSubscriptionsAsync(ReportViewerForCore.ReportService.ListSubscriptionsRequest request)
        {
            return base.Channel.ListSubscriptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSubscriptionsResponse> ListSubscriptionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPathOrSiteURL)
        {
            ReportViewerForCore.ReportService.ListSubscriptionsRequest inValue = new ReportViewerForCore.ReportService.ListSubscriptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPathOrSiteURL = ItemPathOrSiteURL;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSubscriptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListMySubscriptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListMySubscriptions(ReportViewerForCore.ReportService.ListMySubscriptionsRequest request)
        {
            return base.Channel.ListMySubscriptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListMySubscriptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPathOrSiteURL, out ReportViewerForCore.ReportService.Subscription[] SubscriptionItems)
        {
            ReportViewerForCore.ReportService.ListMySubscriptionsRequest inValue = new ReportViewerForCore.ReportService.ListMySubscriptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPathOrSiteURL = ItemPathOrSiteURL;
            ReportViewerForCore.ReportService.ListMySubscriptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListMySubscriptions(inValue);
            SubscriptionItems = retVal.SubscriptionItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListMySubscriptionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListMySubscriptionsAsync(ReportViewerForCore.ReportService.ListMySubscriptionsRequest request)
        {
            return base.Channel.ListMySubscriptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListMySubscriptionsResponse> ListMySubscriptionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPathOrSiteURL)
        {
            ReportViewerForCore.ReportService.ListMySubscriptionsRequest inValue = new ReportViewerForCore.ReportService.ListMySubscriptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPathOrSiteURL = ItemPathOrSiteURL;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListMySubscriptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListSubscriptionsUsingDataSource(ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest request)
        {
            return base.Channel.ListSubscriptionsUsingDataSource(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListSubscriptionsUsingDataSource(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, out ReportViewerForCore.ReportService.Subscription[] SubscriptionItems)
        {
            ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest inValue = new ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSubscriptionsUsingDataSource(inValue);
            SubscriptionItems = retVal.SubscriptionItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListSubscriptionsUsingDataSourceAsync(ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest request)
        {
            return base.Channel.ListSubscriptionsUsingDataSourceAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceResponse> ListSubscriptionsUsingDataSourceAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest inValue = new ReportViewerForCore.ReportService.ListSubscriptionsUsingDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSubscriptionsUsingDataSourceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ChangeSubscriptionOwnerResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ChangeSubscriptionOwner(ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest request)
        {
            return base.Channel.ChangeSubscriptionOwner(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ChangeSubscriptionOwner(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, string NewOwner)
        {
            ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest inValue = new ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            inValue.NewOwner = NewOwner;
            ReportViewerForCore.ReportService.ChangeSubscriptionOwnerResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ChangeSubscriptionOwner(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ChangeSubscriptionOwnerResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ChangeSubscriptionOwnerAsync(ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest request)
        {
            return base.Channel.ChangeSubscriptionOwnerAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ChangeSubscriptionOwnerResponse> ChangeSubscriptionOwnerAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SubscriptionID, string NewOwner)
        {
            ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest inValue = new ReportViewerForCore.ReportService.ChangeSubscriptionOwnerRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SubscriptionID = SubscriptionID;
            inValue.NewOwner = NewOwner;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ChangeSubscriptionOwnerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateDataSourceResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateDataSource(ReportViewerForCore.ReportService.CreateDataSourceRequest request)
        {
            return base.Channel.CreateDataSource(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateDataSource(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, string Parent, bool Overwrite, ReportViewerForCore.ReportService.DataSourceDefinition Definition, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.CatalogItem ItemInfo)
        {
            ReportViewerForCore.ReportService.CreateDataSourceRequest inValue = new ReportViewerForCore.ReportService.CreateDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            inValue.Parent = Parent;
            inValue.Overwrite = Overwrite;
            inValue.Definition = Definition;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.CreateDataSourceResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateDataSource(inValue);
            ItemInfo = retVal.ItemInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateDataSourceResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateDataSourceAsync(ReportViewerForCore.ReportService.CreateDataSourceRequest request)
        {
            return base.Channel.CreateDataSourceAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateDataSourceResponse> CreateDataSourceAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, string Parent, bool Overwrite, ReportViewerForCore.ReportService.DataSourceDefinition Definition, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.CreateDataSourceRequest inValue = new ReportViewerForCore.ReportService.CreateDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            inValue.Parent = Parent;
            inValue.Overwrite = Overwrite;
            inValue.Definition = Definition;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateDataSourceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.PrepareQueryResponse ReportViewerForCore.ReportService.ReportingService2010Soap.PrepareQuery(ReportViewerForCore.ReportService.PrepareQueryRequest request)
        {
            return base.Channel.PrepareQuery(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader PrepareQuery(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.DataSource DataSource, ReportViewerForCore.ReportService.DataSetDefinition DataSet, out ReportViewerForCore.ReportService.DataSetDefinition DataSettings, out bool Changed, out string[] ParameterNames)
        {
            ReportViewerForCore.ReportService.PrepareQueryRequest inValue = new ReportViewerForCore.ReportService.PrepareQueryRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            inValue.DataSet = DataSet;
            ReportViewerForCore.ReportService.PrepareQueryResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).PrepareQuery(inValue);
            DataSettings = retVal.DataSettings;
            Changed = retVal.Changed;
            ParameterNames = retVal.ParameterNames;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.PrepareQueryResponse> PrepareQueryAsync(ReportViewerForCore.ReportService.PrepareQueryRequest request)
        {
            return base.Channel.PrepareQueryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.EnableDataSourceResponse ReportViewerForCore.ReportService.ReportingService2010Soap.EnableDataSource(ReportViewerForCore.ReportService.EnableDataSourceRequest request)
        {
            return base.Channel.EnableDataSource(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader EnableDataSource(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            ReportViewerForCore.ReportService.EnableDataSourceRequest inValue = new ReportViewerForCore.ReportService.EnableDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            ReportViewerForCore.ReportService.EnableDataSourceResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).EnableDataSource(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.EnableDataSourceResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.EnableDataSourceAsync(ReportViewerForCore.ReportService.EnableDataSourceRequest request)
        {
            return base.Channel.EnableDataSourceAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.EnableDataSourceResponse> EnableDataSourceAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            ReportViewerForCore.ReportService.EnableDataSourceRequest inValue = new ReportViewerForCore.ReportService.EnableDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).EnableDataSourceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DisableDataSourceResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DisableDataSource(ReportViewerForCore.ReportService.DisableDataSourceRequest request)
        {
            return base.Channel.DisableDataSource(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DisableDataSource(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            ReportViewerForCore.ReportService.DisableDataSourceRequest inValue = new ReportViewerForCore.ReportService.DisableDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            ReportViewerForCore.ReportService.DisableDataSourceResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DisableDataSource(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DisableDataSourceResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DisableDataSourceAsync(ReportViewerForCore.ReportService.DisableDataSourceRequest request)
        {
            return base.Channel.DisableDataSourceAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DisableDataSourceResponse> DisableDataSourceAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            ReportViewerForCore.ReportService.DisableDataSourceRequest inValue = new ReportViewerForCore.ReportService.DisableDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DisableDataSourceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetDataSourceContentsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetDataSourceContents(ReportViewerForCore.ReportService.SetDataSourceContentsRequest request)
        {
            return base.Channel.SetDataSourceContents(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetDataSourceContents(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, ReportViewerForCore.ReportService.DataSourceDefinition Definition)
        {
            ReportViewerForCore.ReportService.SetDataSourceContentsRequest inValue = new ReportViewerForCore.ReportService.SetDataSourceContentsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            inValue.Definition = Definition;
            ReportViewerForCore.ReportService.SetDataSourceContentsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetDataSourceContents(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetDataSourceContentsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetDataSourceContentsAsync(ReportViewerForCore.ReportService.SetDataSourceContentsRequest request)
        {
            return base.Channel.SetDataSourceContentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetDataSourceContentsResponse> SetDataSourceContentsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, ReportViewerForCore.ReportService.DataSourceDefinition Definition)
        {
            ReportViewerForCore.ReportService.SetDataSourceContentsRequest inValue = new ReportViewerForCore.ReportService.SetDataSourceContentsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            inValue.Definition = Definition;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetDataSourceContentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetDataSourceContentsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetDataSourceContents(ReportViewerForCore.ReportService.GetDataSourceContentsRequest request)
        {
            return base.Channel.GetDataSourceContents(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetDataSourceContents(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, out ReportViewerForCore.ReportService.DataSourceDefinition Definition)
        {
            ReportViewerForCore.ReportService.GetDataSourceContentsRequest inValue = new ReportViewerForCore.ReportService.GetDataSourceContentsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            ReportViewerForCore.ReportService.GetDataSourceContentsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetDataSourceContents(inValue);
            Definition = retVal.Definition;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetDataSourceContentsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetDataSourceContentsAsync(ReportViewerForCore.ReportService.GetDataSourceContentsRequest request)
        {
            return base.Channel.GetDataSourceContentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetDataSourceContentsResponse> GetDataSourceContentsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource)
        {
            ReportViewerForCore.ReportService.GetDataSourceContentsRequest inValue = new ReportViewerForCore.ReportService.GetDataSourceContentsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetDataSourceContentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListDatabaseCredentialRetrievalOptions(ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest request)
        {
            return base.Channel.ListDatabaseCredentialRetrievalOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListDatabaseCredentialRetrievalOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListDatabaseCredentialRetrievalOptionsResult)
        {
            ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest inValue = new ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListDatabaseCredentialRetrievalOptions(inValue);
            ListDatabaseCredentialRetrievalOptionsResult = retVal.ListDatabaseCredentialRetrievalOptionsResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListDatabaseCredentialRetrievalOptionsAsync(ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest request)
        {
            return base.Channel.ListDatabaseCredentialRetrievalOptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsResponse> ListDatabaseCredentialRetrievalOptionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest inValue = new ReportViewerForCore.ReportService.ListDatabaseCredentialRetrievalOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListDatabaseCredentialRetrievalOptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemDataSourcesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemDataSources(ReportViewerForCore.ReportService.SetItemDataSourcesRequest request)
        {
            return base.Channel.SetItemDataSources(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemDataSources(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.DataSource[] DataSources)
        {
            ReportViewerForCore.ReportService.SetItemDataSourcesRequest inValue = new ReportViewerForCore.ReportService.SetItemDataSourcesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.DataSources = DataSources;
            ReportViewerForCore.ReportService.SetItemDataSourcesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemDataSources(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemDataSourcesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemDataSourcesAsync(ReportViewerForCore.ReportService.SetItemDataSourcesRequest request)
        {
            return base.Channel.SetItemDataSourcesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemDataSourcesResponse> SetItemDataSourcesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.DataSource[] DataSources)
        {
            ReportViewerForCore.ReportService.SetItemDataSourcesRequest inValue = new ReportViewerForCore.ReportService.SetItemDataSourcesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.DataSources = DataSources;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemDataSourcesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemDataSourcesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemDataSources(ReportViewerForCore.ReportService.GetItemDataSourcesRequest request)
        {
            return base.Channel.GetItemDataSources(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemDataSources(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.DataSource[] DataSources)
        {
            ReportViewerForCore.ReportService.GetItemDataSourcesRequest inValue = new ReportViewerForCore.ReportService.GetItemDataSourcesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemDataSourcesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemDataSources(inValue);
            DataSources = retVal.DataSources;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDataSourcesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemDataSourcesAsync(ReportViewerForCore.ReportService.GetItemDataSourcesRequest request)
        {
            return base.Channel.GetItemDataSourcesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDataSourcesResponse> GetItemDataSourcesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.GetItemDataSourcesRequest inValue = new ReportViewerForCore.ReportService.GetItemDataSourcesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemDataSourcesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.TestConnectForDataSourceDefinition(ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionRequest request)
        {
            return base.Channel.TestConnectForDataSourceDefinition(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader TestConnectForDataSourceDefinition(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.DataSourceDefinition DataSourceDefinition, string UserName, string Password, out bool TestConnectForDataSourceDefinitionResult, out string ConnectError)
        {
            ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionRequest inValue = new ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSourceDefinition = DataSourceDefinition;
            inValue.UserName = UserName;
            inValue.Password = Password;
            ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).TestConnectForDataSourceDefinition(inValue);
            TestConnectForDataSourceDefinitionResult = retVal.TestConnectForDataSourceDefinitionResult;
            ConnectError = retVal.ConnectError;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionResponse> TestConnectForDataSourceDefinitionAsync(ReportViewerForCore.ReportService.TestConnectForDataSourceDefinitionRequest request)
        {
            return base.Channel.TestConnectForDataSourceDefinitionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.TestConnectForItemDataSourceResponse ReportViewerForCore.ReportService.ReportingService2010Soap.TestConnectForItemDataSource(ReportViewerForCore.ReportService.TestConnectForItemDataSourceRequest request)
        {
            return base.Channel.TestConnectForItemDataSource(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader TestConnectForItemDataSource(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string DataSourceName, string UserName, string Password, out bool TestConnectForItemDataSourceResult, out string ConnectError)
        {
            ReportViewerForCore.ReportService.TestConnectForItemDataSourceRequest inValue = new ReportViewerForCore.ReportService.TestConnectForItemDataSourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.DataSourceName = DataSourceName;
            inValue.UserName = UserName;
            inValue.Password = Password;
            ReportViewerForCore.ReportService.TestConnectForItemDataSourceResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).TestConnectForItemDataSource(inValue);
            TestConnectForItemDataSourceResult = retVal.TestConnectForItemDataSourceResult;
            ConnectError = retVal.ConnectError;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.TestConnectForItemDataSourceResponse> TestConnectForItemDataSourceAsync(ReportViewerForCore.ReportService.TestConnectForItemDataSourceRequest request)
        {
            return base.Channel.TestConnectForItemDataSourceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateRoleResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateRole(ReportViewerForCore.ReportService.CreateRoleRequest request)
        {
            return base.Channel.CreateRole(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateRole(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string Description, string[] TaskIDs)
        {
            ReportViewerForCore.ReportService.CreateRoleRequest inValue = new ReportViewerForCore.ReportService.CreateRoleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.Description = Description;
            inValue.TaskIDs = TaskIDs;
            ReportViewerForCore.ReportService.CreateRoleResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateRole(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateRoleResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateRoleAsync(ReportViewerForCore.ReportService.CreateRoleRequest request)
        {
            return base.Channel.CreateRoleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateRoleResponse> CreateRoleAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string Description, string[] TaskIDs)
        {
            ReportViewerForCore.ReportService.CreateRoleRequest inValue = new ReportViewerForCore.ReportService.CreateRoleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.Description = Description;
            inValue.TaskIDs = TaskIDs;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateRoleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetRolePropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetRoleProperties(ReportViewerForCore.ReportService.SetRolePropertiesRequest request)
        {
            return base.Channel.SetRoleProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetRoleProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string Description, string[] TaskIDs)
        {
            ReportViewerForCore.ReportService.SetRolePropertiesRequest inValue = new ReportViewerForCore.ReportService.SetRolePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.Description = Description;
            inValue.TaskIDs = TaskIDs;
            ReportViewerForCore.ReportService.SetRolePropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetRoleProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetRolePropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetRolePropertiesAsync(ReportViewerForCore.ReportService.SetRolePropertiesRequest request)
        {
            return base.Channel.SetRolePropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetRolePropertiesResponse> SetRolePropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string Description, string[] TaskIDs)
        {
            ReportViewerForCore.ReportService.SetRolePropertiesRequest inValue = new ReportViewerForCore.ReportService.SetRolePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.Description = Description;
            inValue.TaskIDs = TaskIDs;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetRolePropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetRolePropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetRoleProperties(ReportViewerForCore.ReportService.GetRolePropertiesRequest request)
        {
            return base.Channel.GetRoleProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetRoleProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string SiteUrl, out string[] TaskIDs, out string Description)
        {
            ReportViewerForCore.ReportService.GetRolePropertiesRequest inValue = new ReportViewerForCore.ReportService.GetRolePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.SiteUrl = SiteUrl;
            ReportViewerForCore.ReportService.GetRolePropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetRoleProperties(inValue);
            TaskIDs = retVal.TaskIDs;
            Description = retVal.Description;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetRolePropertiesResponse> GetRolePropertiesAsync(ReportViewerForCore.ReportService.GetRolePropertiesRequest request)
        {
            return base.Channel.GetRolePropertiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DeleteRoleResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteRole(ReportViewerForCore.ReportService.DeleteRoleRequest request)
        {
            return base.Channel.DeleteRole(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DeleteRole(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name)
        {
            ReportViewerForCore.ReportService.DeleteRoleRequest inValue = new ReportViewerForCore.ReportService.DeleteRoleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            ReportViewerForCore.ReportService.DeleteRoleResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteRole(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteRoleResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteRoleAsync(ReportViewerForCore.ReportService.DeleteRoleRequest request)
        {
            return base.Channel.DeleteRoleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteRoleResponse> DeleteRoleAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name)
        {
            ReportViewerForCore.ReportService.DeleteRoleRequest inValue = new ReportViewerForCore.ReportService.DeleteRoleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteRoleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListRolesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListRoles(ReportViewerForCore.ReportService.ListRolesRequest request)
        {
            return base.Channel.ListRoles(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListRoles(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SecurityScope, string SiteUrl, out ReportViewerForCore.ReportService.Role[] Roles)
        {
            ReportViewerForCore.ReportService.ListRolesRequest inValue = new ReportViewerForCore.ReportService.ListRolesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SecurityScope = SecurityScope;
            inValue.SiteUrl = SiteUrl;
            ReportViewerForCore.ReportService.ListRolesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListRoles(inValue);
            Roles = retVal.Roles;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListRolesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListRolesAsync(ReportViewerForCore.ReportService.ListRolesRequest request)
        {
            return base.Channel.ListRolesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListRolesResponse> ListRolesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SecurityScope, string SiteUrl)
        {
            ReportViewerForCore.ReportService.ListRolesRequest inValue = new ReportViewerForCore.ReportService.ListRolesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SecurityScope = SecurityScope;
            inValue.SiteUrl = SiteUrl;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListRolesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListTasksResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListTasks(ReportViewerForCore.ReportService.ListTasksRequest request)
        {
            return base.Channel.ListTasks(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListTasks(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SecurityScope, out ReportViewerForCore.ReportService.Task[] Tasks)
        {
            ReportViewerForCore.ReportService.ListTasksRequest inValue = new ReportViewerForCore.ReportService.ListTasksRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SecurityScope = SecurityScope;
            ReportViewerForCore.ReportService.ListTasksResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListTasks(inValue);
            Tasks = retVal.Tasks;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListTasksResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListTasksAsync(ReportViewerForCore.ReportService.ListTasksRequest request)
        {
            return base.Channel.ListTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListTasksResponse> ListTasksAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SecurityScope)
        {
            ReportViewerForCore.ReportService.ListTasksRequest inValue = new ReportViewerForCore.ReportService.ListTasksRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SecurityScope = SecurityScope;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetPolicies(ReportViewerForCore.ReportService.SetPoliciesRequest request)
        {
            return base.Channel.SetPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.SetPoliciesRequest inValue = new ReportViewerForCore.ReportService.SetPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Policies = Policies;
            ReportViewerForCore.ReportService.SetPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetPolicies(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetPoliciesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetPoliciesAsync(ReportViewerForCore.ReportService.SetPoliciesRequest request)
        {
            return base.Channel.SetPoliciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetPoliciesResponse> SetPoliciesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.SetPoliciesRequest inValue = new ReportViewerForCore.ReportService.SetPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Policies = Policies;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetPoliciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetPolicies(ReportViewerForCore.ReportService.GetPoliciesRequest request)
        {
            return base.Channel.GetPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.Policy[] Policies, out bool InheritParent)
        {
            ReportViewerForCore.ReportService.GetPoliciesRequest inValue = new ReportViewerForCore.ReportService.GetPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetPolicies(inValue);
            Policies = retVal.Policies;
            InheritParent = retVal.InheritParent;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPoliciesResponse> GetPoliciesAsync(ReportViewerForCore.ReportService.GetPoliciesRequest request)
        {
            return base.Channel.GetPoliciesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemDataSourcePromptsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemDataSourcePrompts(ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest request)
        {
            return base.Channel.GetItemDataSourcePrompts(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemDataSourcePrompts(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.DataSourcePrompt[] DataSourcePrompts)
        {
            ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest inValue = new ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemDataSourcePromptsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemDataSourcePrompts(inValue);
            DataSourcePrompts = retVal.DataSourcePrompts;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDataSourcePromptsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemDataSourcePromptsAsync(ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest request)
        {
            return base.Channel.GetItemDataSourcePromptsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemDataSourcePromptsResponse> GetItemDataSourcePromptsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest inValue = new ReportViewerForCore.ReportService.GetItemDataSourcePromptsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemDataSourcePromptsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GenerateModelResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GenerateModel(ReportViewerForCore.ReportService.GenerateModelRequest request)
        {
            return base.Channel.GenerateModel(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GenerateModel(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string DataSource, string Model, string Parent, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.CatalogItem ItemInfo, out ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            ReportViewerForCore.ReportService.GenerateModelRequest inValue = new ReportViewerForCore.ReportService.GenerateModelRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DataSource = DataSource;
            inValue.Model = Model;
            inValue.Parent = Parent;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.GenerateModelResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GenerateModel(inValue);
            ItemInfo = retVal.ItemInfo;
            Warnings = retVal.Warnings;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GenerateModelResponse> GenerateModelAsync(ReportViewerForCore.ReportService.GenerateModelRequest request)
        {
            return base.Channel.GenerateModelAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetModelItemPermissionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetModelItemPermissions(ReportViewerForCore.ReportService.GetModelItemPermissionsRequest request)
        {
            return base.Channel.GetModelItemPermissions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetModelItemPermissions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, out string[] Permissions)
        {
            ReportViewerForCore.ReportService.GetModelItemPermissionsRequest inValue = new ReportViewerForCore.ReportService.GetModelItemPermissionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            ReportViewerForCore.ReportService.GetModelItemPermissionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetModelItemPermissions(inValue);
            Permissions = retVal.Permissions;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetModelItemPermissionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetModelItemPermissionsAsync(ReportViewerForCore.ReportService.GetModelItemPermissionsRequest request)
        {
            return base.Channel.GetModelItemPermissionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetModelItemPermissionsResponse> GetModelItemPermissionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            ReportViewerForCore.ReportService.GetModelItemPermissionsRequest inValue = new ReportViewerForCore.ReportService.GetModelItemPermissionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetModelItemPermissionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetModelItemPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetModelItemPolicies(ReportViewerForCore.ReportService.SetModelItemPoliciesRequest request)
        {
            return base.Channel.SetModelItemPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetModelItemPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.SetModelItemPoliciesRequest inValue = new ReportViewerForCore.ReportService.SetModelItemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            inValue.Policies = Policies;
            ReportViewerForCore.ReportService.SetModelItemPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetModelItemPolicies(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetModelItemPoliciesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetModelItemPoliciesAsync(ReportViewerForCore.ReportService.SetModelItemPoliciesRequest request)
        {
            return base.Channel.SetModelItemPoliciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetModelItemPoliciesResponse> SetModelItemPoliciesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.SetModelItemPoliciesRequest inValue = new ReportViewerForCore.ReportService.SetModelItemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            inValue.Policies = Policies;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetModelItemPoliciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetModelItemPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetModelItemPolicies(ReportViewerForCore.ReportService.GetModelItemPoliciesRequest request)
        {
            return base.Channel.GetModelItemPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetModelItemPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, out ReportViewerForCore.ReportService.Policy[] Policies, out bool InheritParent)
        {
            ReportViewerForCore.ReportService.GetModelItemPoliciesRequest inValue = new ReportViewerForCore.ReportService.GetModelItemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            ReportViewerForCore.ReportService.GetModelItemPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetModelItemPolicies(inValue);
            Policies = retVal.Policies;
            InheritParent = retVal.InheritParent;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetModelItemPoliciesResponse> GetModelItemPoliciesAsync(ReportViewerForCore.ReportService.GetModelItemPoliciesRequest request)
        {
            return base.Channel.GetModelItemPoliciesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetUserModelResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetUserModel(ReportViewerForCore.ReportService.GetUserModelRequest request)
        {
            return base.Channel.GetUserModel(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetUserModel(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string Perspective, out byte[] Definition)
        {
            ReportViewerForCore.ReportService.GetUserModelRequest inValue = new ReportViewerForCore.ReportService.GetUserModelRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.Perspective = Perspective;
            ReportViewerForCore.ReportService.GetUserModelResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetUserModel(inValue);
            Definition = retVal.Definition;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetUserModelResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetUserModelAsync(ReportViewerForCore.ReportService.GetUserModelRequest request)
        {
            return base.Channel.GetUserModelAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetUserModelResponse> GetUserModelAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string Perspective)
        {
            ReportViewerForCore.ReportService.GetUserModelRequest inValue = new ReportViewerForCore.ReportService.GetUserModelRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.Perspective = Perspective;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetUserModelAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.InheritModelItemParentSecurityResponse ReportViewerForCore.ReportService.ReportingService2010Soap.InheritModelItemParentSecurity(ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest request)
        {
            return base.Channel.InheritModelItemParentSecurity(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader InheritModelItemParentSecurity(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest inValue = new ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            ReportViewerForCore.ReportService.InheritModelItemParentSecurityResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).InheritModelItemParentSecurity(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.InheritModelItemParentSecurityResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.InheritModelItemParentSecurityAsync(ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest request)
        {
            return base.Channel.InheritModelItemParentSecurityAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.InheritModelItemParentSecurityResponse> InheritModelItemParentSecurityAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest inValue = new ReportViewerForCore.ReportService.InheritModelItemParentSecurityRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).InheritModelItemParentSecurityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetModelDrillthroughReportsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetModelDrillthroughReports(ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest request)
        {
            return base.Channel.SetModelDrillthroughReports(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetModelDrillthroughReports(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports)
        {
            ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest inValue = new ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            inValue.Reports = Reports;
            ReportViewerForCore.ReportService.SetModelDrillthroughReportsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetModelDrillthroughReports(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetModelDrillthroughReportsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetModelDrillthroughReportsAsync(ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest request)
        {
            return base.Channel.SetModelDrillthroughReportsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetModelDrillthroughReportsResponse> SetModelDrillthroughReportsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports)
        {
            ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest inValue = new ReportViewerForCore.ReportService.SetModelDrillthroughReportsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            inValue.Reports = Reports;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetModelDrillthroughReportsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListModelDrillthroughReportsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelDrillthroughReports(ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest request)
        {
            return base.Channel.ListModelDrillthroughReports(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListModelDrillthroughReports(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, out ReportViewerForCore.ReportService.ModelDrillthroughReport[] Reports)
        {
            ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest inValue = new ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            ReportViewerForCore.ReportService.ListModelDrillthroughReportsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelDrillthroughReports(inValue);
            Reports = retVal.Reports;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelDrillthroughReportsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelDrillthroughReportsAsync(ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest request)
        {
            return base.Channel.ListModelDrillthroughReportsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelDrillthroughReportsResponse> ListModelDrillthroughReportsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID)
        {
            ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest inValue = new ReportViewerForCore.ReportService.ListModelDrillthroughReportsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelDrillthroughReportsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListModelItemChildrenResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelItemChildren(ReportViewerForCore.ReportService.ListModelItemChildrenRequest request)
        {
            return base.Channel.ListModelItemChildren(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListModelItemChildren(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, bool Recursive, out ReportViewerForCore.ReportService.ModelItem[] ModelItems)
        {
            ReportViewerForCore.ReportService.ListModelItemChildrenRequest inValue = new ReportViewerForCore.ReportService.ListModelItemChildrenRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            inValue.Recursive = Recursive;
            ReportViewerForCore.ReportService.ListModelItemChildrenResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelItemChildren(inValue);
            ModelItems = retVal.ModelItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelItemChildrenResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelItemChildrenAsync(ReportViewerForCore.ReportService.ListModelItemChildrenRequest request)
        {
            return base.Channel.ListModelItemChildrenAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelItemChildrenResponse> ListModelItemChildrenAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, string ModelItemID, bool Recursive)
        {
            ReportViewerForCore.ReportService.ListModelItemChildrenRequest inValue = new ReportViewerForCore.ReportService.ListModelItemChildrenRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            inValue.ModelItemID = ModelItemID;
            inValue.Recursive = Recursive;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelItemChildrenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListModelItemTypesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelItemTypes(ReportViewerForCore.ReportService.ListModelItemTypesRequest request)
        {
            return base.Channel.ListModelItemTypes(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListModelItemTypes(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListModelItemTypesResult)
        {
            ReportViewerForCore.ReportService.ListModelItemTypesRequest inValue = new ReportViewerForCore.ReportService.ListModelItemTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListModelItemTypesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelItemTypes(inValue);
            ListModelItemTypesResult = retVal.ListModelItemTypesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelItemTypesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelItemTypesAsync(ReportViewerForCore.ReportService.ListModelItemTypesRequest request)
        {
            return base.Channel.ListModelItemTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelItemTypesResponse> ListModelItemTypesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListModelItemTypesRequest inValue = new ReportViewerForCore.ReportService.ListModelItemTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelItemTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListModelPerspectivesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelPerspectives(ReportViewerForCore.ReportService.ListModelPerspectivesRequest request)
        {
            return base.Channel.ListModelPerspectives(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListModelPerspectives(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, out ReportViewerForCore.ReportService.ModelCatalogItem[] ModelCatalogItems)
        {
            ReportViewerForCore.ReportService.ListModelPerspectivesRequest inValue = new ReportViewerForCore.ReportService.ListModelPerspectivesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            ReportViewerForCore.ReportService.ListModelPerspectivesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelPerspectives(inValue);
            ModelCatalogItems = retVal.ModelCatalogItems;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelPerspectivesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListModelPerspectivesAsync(ReportViewerForCore.ReportService.ListModelPerspectivesRequest request)
        {
            return base.Channel.ListModelPerspectivesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListModelPerspectivesResponse> ListModelPerspectivesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            ReportViewerForCore.ReportService.ListModelPerspectivesRequest inValue = new ReportViewerForCore.ReportService.ListModelPerspectivesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListModelPerspectivesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.RegenerateModelResponse ReportViewerForCore.ReportService.ReportingService2010Soap.RegenerateModel(ReportViewerForCore.ReportService.RegenerateModelRequest request)
        {
            return base.Channel.RegenerateModel(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader RegenerateModel(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model, out ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            ReportViewerForCore.ReportService.RegenerateModelRequest inValue = new ReportViewerForCore.ReportService.RegenerateModelRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            ReportViewerForCore.ReportService.RegenerateModelResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).RegenerateModel(inValue);
            Warnings = retVal.Warnings;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.RegenerateModelResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.RegenerateModelAsync(ReportViewerForCore.ReportService.RegenerateModelRequest request)
        {
            return base.Channel.RegenerateModelAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.RegenerateModelResponse> RegenerateModelAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            ReportViewerForCore.ReportService.RegenerateModelRequest inValue = new ReportViewerForCore.ReportService.RegenerateModelRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).RegenerateModelAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.RemoveAllModelItemPolicies(ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest request)
        {
            return base.Channel.RemoveAllModelItemPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader RemoveAllModelItemPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest inValue = new ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).RemoveAllModelItemPolicies(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.RemoveAllModelItemPoliciesAsync(ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest request)
        {
            return base.Channel.RemoveAllModelItemPoliciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesResponse> RemoveAllModelItemPoliciesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Model)
        {
            ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest inValue = new ReportViewerForCore.ReportService.RemoveAllModelItemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Model = Model;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).RemoveAllModelItemPoliciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateScheduleResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateSchedule(ReportViewerForCore.ReportService.CreateScheduleRequest request)
        {
            return base.Channel.CreateSchedule(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateSchedule(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition, string SiteUrl, out string ScheduleID)
        {
            ReportViewerForCore.ReportService.CreateScheduleRequest inValue = new ReportViewerForCore.ReportService.CreateScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.ScheduleDefinition = ScheduleDefinition;
            inValue.SiteUrl = SiteUrl;
            ReportViewerForCore.ReportService.CreateScheduleResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateSchedule(inValue);
            ScheduleID = retVal.ScheduleID;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateScheduleResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateScheduleAsync(ReportViewerForCore.ReportService.CreateScheduleRequest request)
        {
            return base.Channel.CreateScheduleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateScheduleResponse> CreateScheduleAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition, string SiteUrl)
        {
            ReportViewerForCore.ReportService.CreateScheduleRequest inValue = new ReportViewerForCore.ReportService.CreateScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.ScheduleDefinition = ScheduleDefinition;
            inValue.SiteUrl = SiteUrl;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateScheduleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DeleteScheduleResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteSchedule(ReportViewerForCore.ReportService.DeleteScheduleRequest request)
        {
            return base.Channel.DeleteSchedule(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DeleteSchedule(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.DeleteScheduleRequest inValue = new ReportViewerForCore.ReportService.DeleteScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            ReportViewerForCore.ReportService.DeleteScheduleResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteSchedule(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteScheduleResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteScheduleAsync(ReportViewerForCore.ReportService.DeleteScheduleRequest request)
        {
            return base.Channel.DeleteScheduleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteScheduleResponse> DeleteScheduleAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.DeleteScheduleRequest inValue = new ReportViewerForCore.ReportService.DeleteScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteScheduleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListSchedulesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListSchedules(ReportViewerForCore.ReportService.ListSchedulesRequest request)
        {
            return base.Channel.ListSchedules(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListSchedules(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SiteUrl, out ReportViewerForCore.ReportService.Schedule[] Schedules)
        {
            ReportViewerForCore.ReportService.ListSchedulesRequest inValue = new ReportViewerForCore.ReportService.ListSchedulesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SiteUrl = SiteUrl;
            ReportViewerForCore.ReportService.ListSchedulesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSchedules(inValue);
            Schedules = retVal.Schedules;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSchedulesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListSchedulesAsync(ReportViewerForCore.ReportService.ListSchedulesRequest request)
        {
            return base.Channel.ListSchedulesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSchedulesResponse> ListSchedulesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string SiteUrl)
        {
            ReportViewerForCore.ReportService.ListSchedulesRequest inValue = new ReportViewerForCore.ReportService.ListSchedulesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SiteUrl = SiteUrl;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSchedulesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetSchedulePropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetScheduleProperties(ReportViewerForCore.ReportService.GetSchedulePropertiesRequest request)
        {
            return base.Channel.GetScheduleProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetScheduleProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID, out ReportViewerForCore.ReportService.Schedule Schedule)
        {
            ReportViewerForCore.ReportService.GetSchedulePropertiesRequest inValue = new ReportViewerForCore.ReportService.GetSchedulePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            ReportViewerForCore.ReportService.GetSchedulePropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetScheduleProperties(inValue);
            Schedule = retVal.Schedule;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSchedulePropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetSchedulePropertiesAsync(ReportViewerForCore.ReportService.GetSchedulePropertiesRequest request)
        {
            return base.Channel.GetSchedulePropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSchedulePropertiesResponse> GetSchedulePropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.GetSchedulePropertiesRequest inValue = new ReportViewerForCore.ReportService.GetSchedulePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSchedulePropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListScheduleStatesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListScheduleStates(ReportViewerForCore.ReportService.ListScheduleStatesRequest request)
        {
            return base.Channel.ListScheduleStates(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListScheduleStates(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListScheduleStatesResult)
        {
            ReportViewerForCore.ReportService.ListScheduleStatesRequest inValue = new ReportViewerForCore.ReportService.ListScheduleStatesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListScheduleStatesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListScheduleStates(inValue);
            ListScheduleStatesResult = retVal.ListScheduleStatesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListScheduleStatesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListScheduleStatesAsync(ReportViewerForCore.ReportService.ListScheduleStatesRequest request)
        {
            return base.Channel.ListScheduleStatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListScheduleStatesResponse> ListScheduleStatesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListScheduleStatesRequest inValue = new ReportViewerForCore.ReportService.ListScheduleStatesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListScheduleStatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.PauseScheduleResponse ReportViewerForCore.ReportService.ReportingService2010Soap.PauseSchedule(ReportViewerForCore.ReportService.PauseScheduleRequest request)
        {
            return base.Channel.PauseSchedule(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader PauseSchedule(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.PauseScheduleRequest inValue = new ReportViewerForCore.ReportService.PauseScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            ReportViewerForCore.ReportService.PauseScheduleResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).PauseSchedule(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.PauseScheduleResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.PauseScheduleAsync(ReportViewerForCore.ReportService.PauseScheduleRequest request)
        {
            return base.Channel.PauseScheduleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.PauseScheduleResponse> PauseScheduleAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.PauseScheduleRequest inValue = new ReportViewerForCore.ReportService.PauseScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).PauseScheduleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ResumeScheduleResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ResumeSchedule(ReportViewerForCore.ReportService.ResumeScheduleRequest request)
        {
            return base.Channel.ResumeSchedule(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ResumeSchedule(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.ResumeScheduleRequest inValue = new ReportViewerForCore.ReportService.ResumeScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            ReportViewerForCore.ReportService.ResumeScheduleResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ResumeSchedule(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ResumeScheduleResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ResumeScheduleAsync(ReportViewerForCore.ReportService.ResumeScheduleRequest request)
        {
            return base.Channel.ResumeScheduleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ResumeScheduleResponse> ResumeScheduleAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.ResumeScheduleRequest inValue = new ReportViewerForCore.ReportService.ResumeScheduleRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ResumeScheduleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetSchedulePropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetScheduleProperties(ReportViewerForCore.ReportService.SetSchedulePropertiesRequest request)
        {
            return base.Channel.SetScheduleProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetScheduleProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string ScheduleID, ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition)
        {
            ReportViewerForCore.ReportService.SetSchedulePropertiesRequest inValue = new ReportViewerForCore.ReportService.SetSchedulePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.ScheduleID = ScheduleID;
            inValue.ScheduleDefinition = ScheduleDefinition;
            ReportViewerForCore.ReportService.SetSchedulePropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetScheduleProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSchedulePropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetSchedulePropertiesAsync(ReportViewerForCore.ReportService.SetSchedulePropertiesRequest request)
        {
            return base.Channel.SetSchedulePropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSchedulePropertiesResponse> SetSchedulePropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Name, string ScheduleID, ReportViewerForCore.ReportService.ScheduleDefinition ScheduleDefinition)
        {
            ReportViewerForCore.ReportService.SetSchedulePropertiesRequest inValue = new ReportViewerForCore.ReportService.SetSchedulePropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Name = Name;
            inValue.ScheduleID = ScheduleID;
            inValue.ScheduleDefinition = ScheduleDefinition;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSchedulePropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListScheduledItemsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListScheduledItems(ReportViewerForCore.ReportService.ListScheduledItemsRequest request)
        {
            return base.Channel.ListScheduledItems(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListScheduledItems(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID, out ReportViewerForCore.ReportService.CatalogItem[] Items)
        {
            ReportViewerForCore.ReportService.ListScheduledItemsRequest inValue = new ReportViewerForCore.ReportService.ListScheduledItemsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            ReportViewerForCore.ReportService.ListScheduledItemsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListScheduledItems(inValue);
            Items = retVal.Items;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListScheduledItemsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListScheduledItemsAsync(ReportViewerForCore.ReportService.ListScheduledItemsRequest request)
        {
            return base.Channel.ListScheduledItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListScheduledItemsResponse> ListScheduledItemsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ScheduleID)
        {
            ReportViewerForCore.ReportService.ListScheduledItemsRequest inValue = new ReportViewerForCore.ReportService.ListScheduledItemsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScheduleID = ScheduleID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListScheduledItemsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemParametersResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemParameters(ReportViewerForCore.ReportService.SetItemParametersRequest request)
        {
            return base.Channel.SetItemParameters(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemParameters(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ItemParameter[] Parameters)
        {
            ReportViewerForCore.ReportService.SetItemParametersRequest inValue = new ReportViewerForCore.ReportService.SetItemParametersRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.SetItemParametersResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemParameters(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemParametersResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemParametersAsync(ReportViewerForCore.ReportService.SetItemParametersRequest request)
        {
            return base.Channel.SetItemParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemParametersResponse> SetItemParametersAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, ReportViewerForCore.ReportService.ItemParameter[] Parameters)
        {
            ReportViewerForCore.ReportService.SetItemParametersRequest inValue = new ReportViewerForCore.ReportService.SetItemParametersRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemParametersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemParametersResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemParameters(ReportViewerForCore.ReportService.GetItemParametersRequest request)
        {
            return base.Channel.GetItemParameters(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemParameters(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string HistoryID, bool ForRendering, ReportViewerForCore.ReportService.ParameterValue[] Values, ReportViewerForCore.ReportService.DataSourceCredentials[] Credentials, out ReportViewerForCore.ReportService.ItemParameter[] Parameters)
        {
            ReportViewerForCore.ReportService.GetItemParametersRequest inValue = new ReportViewerForCore.ReportService.GetItemParametersRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.HistoryID = HistoryID;
            inValue.ForRendering = ForRendering;
            inValue.Values = Values;
            inValue.Credentials = Credentials;
            ReportViewerForCore.ReportService.GetItemParametersResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemParameters(inValue);
            Parameters = retVal.Parameters;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemParametersResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemParametersAsync(ReportViewerForCore.ReportService.GetItemParametersRequest request)
        {
            return base.Channel.GetItemParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemParametersResponse> GetItemParametersAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string HistoryID, bool ForRendering, ReportViewerForCore.ReportService.ParameterValue[] Values, ReportViewerForCore.ReportService.DataSourceCredentials[] Credentials)
        {
            ReportViewerForCore.ReportService.GetItemParametersRequest inValue = new ReportViewerForCore.ReportService.GetItemParametersRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.HistoryID = HistoryID;
            inValue.ForRendering = ForRendering;
            inValue.Values = Values;
            inValue.Credentials = Credentials;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemParametersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListParameterTypesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListParameterTypes(ReportViewerForCore.ReportService.ListParameterTypesRequest request)
        {
            return base.Channel.ListParameterTypes(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListParameterTypes(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListParameterTypesResult)
        {
            ReportViewerForCore.ReportService.ListParameterTypesRequest inValue = new ReportViewerForCore.ReportService.ListParameterTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListParameterTypesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListParameterTypes(inValue);
            ListParameterTypesResult = retVal.ListParameterTypesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParameterTypesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListParameterTypesAsync(ReportViewerForCore.ReportService.ListParameterTypesRequest request)
        {
            return base.Channel.ListParameterTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParameterTypesResponse> ListParameterTypesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListParameterTypesRequest inValue = new ReportViewerForCore.ReportService.ListParameterTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListParameterTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListParameterStatesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListParameterStates(ReportViewerForCore.ReportService.ListParameterStatesRequest request)
        {
            return base.Channel.ListParameterStates(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListParameterStates(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListParameterStatesResult)
        {
            ReportViewerForCore.ReportService.ListParameterStatesRequest inValue = new ReportViewerForCore.ReportService.ListParameterStatesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListParameterStatesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListParameterStates(inValue);
            ListParameterStatesResult = retVal.ListParameterStatesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParameterStatesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListParameterStatesAsync(ReportViewerForCore.ReportService.ListParameterStatesRequest request)
        {
            return base.Channel.ListParameterStatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListParameterStatesResponse> ListParameterStatesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListParameterStatesRequest inValue = new ReportViewerForCore.ReportService.ListParameterStatesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListParameterStatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateReportEditSessionResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateReportEditSession(ReportViewerForCore.ReportService.CreateReportEditSessionRequest request)
        {
            return base.Channel.CreateReportEditSession(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateReportEditSession(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string Report, string Parent, byte[] Definition, out string EditSessionID, out ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            ReportViewerForCore.ReportService.CreateReportEditSessionRequest inValue = new ReportViewerForCore.ReportService.CreateReportEditSessionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.Parent = Parent;
            inValue.Definition = Definition;
            ReportViewerForCore.ReportService.CreateReportEditSessionResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateReportEditSession(inValue);
            EditSessionID = retVal.EditSessionID;
            Warnings = retVal.Warnings;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateReportEditSessionResponse> CreateReportEditSessionAsync(ReportViewerForCore.ReportService.CreateReportEditSessionRequest request)
        {
            return base.Channel.CreateReportEditSessionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateLinkedItemResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateLinkedItem(ReportViewerForCore.ReportService.CreateLinkedItemRequest request)
        {
            return base.Channel.CreateLinkedItem(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateLinkedItem(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Parent, string Link, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.CreateLinkedItemRequest inValue = new ReportViewerForCore.ReportService.CreateLinkedItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Parent = Parent;
            inValue.Link = Link;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.CreateLinkedItemResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateLinkedItem(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateLinkedItemResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateLinkedItemAsync(ReportViewerForCore.ReportService.CreateLinkedItemRequest request)
        {
            return base.Channel.CreateLinkedItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateLinkedItemResponse> CreateLinkedItemAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Parent, string Link, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.CreateLinkedItemRequest inValue = new ReportViewerForCore.ReportService.CreateLinkedItemRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Parent = Parent;
            inValue.Link = Link;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateLinkedItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemLinkResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemLink(ReportViewerForCore.ReportService.SetItemLinkRequest request)
        {
            return base.Channel.SetItemLink(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemLink(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Link)
        {
            ReportViewerForCore.ReportService.SetItemLinkRequest inValue = new ReportViewerForCore.ReportService.SetItemLinkRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Link = Link;
            ReportViewerForCore.ReportService.SetItemLinkResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemLink(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemLinkResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemLinkAsync(ReportViewerForCore.ReportService.SetItemLinkRequest request)
        {
            return base.Channel.SetItemLinkAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemLinkResponse> SetItemLinkAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Link)
        {
            ReportViewerForCore.ReportService.SetItemLinkRequest inValue = new ReportViewerForCore.ReportService.SetItemLinkRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Link = Link;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemLinkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemLinkResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemLink(ReportViewerForCore.ReportService.GetItemLinkRequest request)
        {
            return base.Channel.GetItemLink(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemLink(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out string Link)
        {
            ReportViewerForCore.ReportService.GetItemLinkRequest inValue = new ReportViewerForCore.ReportService.GetItemLinkRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemLinkResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemLink(inValue);
            Link = retVal.Link;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemLinkResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemLinkAsync(ReportViewerForCore.ReportService.GetItemLinkRequest request)
        {
            return base.Channel.GetItemLinkAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemLinkResponse> GetItemLinkAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.GetItemLinkRequest inValue = new ReportViewerForCore.ReportService.GetItemLinkRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemLinkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListExecutionSettingsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListExecutionSettings(ReportViewerForCore.ReportService.ListExecutionSettingsRequest request)
        {
            return base.Channel.ListExecutionSettings(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListExecutionSettings(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListExecutionSettingsResult)
        {
            ReportViewerForCore.ReportService.ListExecutionSettingsRequest inValue = new ReportViewerForCore.ReportService.ListExecutionSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListExecutionSettingsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListExecutionSettings(inValue);
            ListExecutionSettingsResult = retVal.ListExecutionSettingsResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExecutionSettingsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListExecutionSettingsAsync(ReportViewerForCore.ReportService.ListExecutionSettingsRequest request)
        {
            return base.Channel.ListExecutionSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExecutionSettingsResponse> ListExecutionSettingsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListExecutionSettingsRequest inValue = new ReportViewerForCore.ReportService.ListExecutionSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListExecutionSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetExecutionOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetExecutionOptions(ReportViewerForCore.ReportService.SetExecutionOptionsRequest request)
        {
            return base.Channel.SetExecutionOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetExecutionOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string ExecutionSetting, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            ReportViewerForCore.ReportService.SetExecutionOptionsRequest inValue = new ReportViewerForCore.ReportService.SetExecutionOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ExecutionSetting = ExecutionSetting;
            inValue.Item = Item;
            ReportViewerForCore.ReportService.SetExecutionOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetExecutionOptions(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetExecutionOptionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetExecutionOptionsAsync(ReportViewerForCore.ReportService.SetExecutionOptionsRequest request)
        {
            return base.Channel.SetExecutionOptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetExecutionOptionsResponse> SetExecutionOptionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string ExecutionSetting, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            ReportViewerForCore.ReportService.SetExecutionOptionsRequest inValue = new ReportViewerForCore.ReportService.SetExecutionOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.ExecutionSetting = ExecutionSetting;
            inValue.Item = Item;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetExecutionOptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetExecutionOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetExecutionOptions(ReportViewerForCore.ReportService.GetExecutionOptionsRequest request)
        {
            return base.Channel.GetExecutionOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetExecutionOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out string ExecutionSetting, out ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            ReportViewerForCore.ReportService.GetExecutionOptionsRequest inValue = new ReportViewerForCore.ReportService.GetExecutionOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetExecutionOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetExecutionOptions(inValue);
            ExecutionSetting = retVal.ExecutionSetting;
            Item = retVal.Item;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetExecutionOptionsResponse> GetExecutionOptionsAsync(ReportViewerForCore.ReportService.GetExecutionOptionsRequest request)
        {
            return base.Channel.GetExecutionOptionsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotResponse ReportViewerForCore.ReportService.ReportingService2010Soap.UpdateItemExecutionSnapshot(ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest request)
        {
            return base.Channel.UpdateItemExecutionSnapshot(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader UpdateItemExecutionSnapshot(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest inValue = new ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).UpdateItemExecutionSnapshot(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.UpdateItemExecutionSnapshotAsync(ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest request)
        {
            return base.Channel.UpdateItemExecutionSnapshotAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotResponse> UpdateItemExecutionSnapshotAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest inValue = new ReportViewerForCore.ReportService.UpdateItemExecutionSnapshotRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).UpdateItemExecutionSnapshotAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetCacheOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetCacheOptions(ReportViewerForCore.ReportService.SetCacheOptionsRequest request)
        {
            return base.Channel.SetCacheOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetCacheOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool CacheItem, ReportViewerForCore.ReportService.ExpirationDefinition Item)
        {
            ReportViewerForCore.ReportService.SetCacheOptionsRequest inValue = new ReportViewerForCore.ReportService.SetCacheOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.CacheItem = CacheItem;
            inValue.Item = Item;
            ReportViewerForCore.ReportService.SetCacheOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetCacheOptions(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetCacheOptionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetCacheOptionsAsync(ReportViewerForCore.ReportService.SetCacheOptionsRequest request)
        {
            return base.Channel.SetCacheOptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetCacheOptionsResponse> SetCacheOptionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool CacheItem, ReportViewerForCore.ReportService.ExpirationDefinition Item)
        {
            ReportViewerForCore.ReportService.SetCacheOptionsRequest inValue = new ReportViewerForCore.ReportService.SetCacheOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.CacheItem = CacheItem;
            inValue.Item = Item;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetCacheOptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetCacheOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetCacheOptions(ReportViewerForCore.ReportService.GetCacheOptionsRequest request)
        {
            return base.Channel.GetCacheOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetCacheOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out bool CacheItem, out ReportViewerForCore.ReportService.ExpirationDefinition Item)
        {
            ReportViewerForCore.ReportService.GetCacheOptionsRequest inValue = new ReportViewerForCore.ReportService.GetCacheOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetCacheOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetCacheOptions(inValue);
            CacheItem = retVal.CacheItem;
            Item = retVal.Item;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetCacheOptionsResponse> GetCacheOptionsAsync(ReportViewerForCore.ReportService.GetCacheOptionsRequest request)
        {
            return base.Channel.GetCacheOptionsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.FlushCacheResponse ReportViewerForCore.ReportService.ReportingService2010Soap.FlushCache(ReportViewerForCore.ReportService.FlushCacheRequest request)
        {
            return base.Channel.FlushCache(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader FlushCache(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.FlushCacheRequest inValue = new ReportViewerForCore.ReportService.FlushCacheRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.FlushCacheResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).FlushCache(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FlushCacheResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.FlushCacheAsync(ReportViewerForCore.ReportService.FlushCacheRequest request)
        {
            return base.Channel.FlushCacheAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FlushCacheResponse> FlushCacheAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.FlushCacheRequest inValue = new ReportViewerForCore.ReportService.FlushCacheRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).FlushCacheAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateItemHistorySnapshotResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateItemHistorySnapshot(ReportViewerForCore.ReportService.CreateItemHistorySnapshotRequest request)
        {
            return base.Channel.CreateItemHistorySnapshot(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateItemHistorySnapshot(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out string HistoryID, out ReportViewerForCore.ReportService.Warning[] Warnings)
        {
            ReportViewerForCore.ReportService.CreateItemHistorySnapshotRequest inValue = new ReportViewerForCore.ReportService.CreateItemHistorySnapshotRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.CreateItemHistorySnapshotResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateItemHistorySnapshot(inValue);
            HistoryID = retVal.HistoryID;
            Warnings = retVal.Warnings;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateItemHistorySnapshotResponse> CreateItemHistorySnapshotAsync(ReportViewerForCore.ReportService.CreateItemHistorySnapshotRequest request)
        {
            return base.Channel.CreateItemHistorySnapshotAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DeleteItemHistorySnapshotResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteItemHistorySnapshot(ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest request)
        {
            return base.Channel.DeleteItemHistorySnapshot(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DeleteItemHistorySnapshot(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string HistoryID)
        {
            ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest inValue = new ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.HistoryID = HistoryID;
            ReportViewerForCore.ReportService.DeleteItemHistorySnapshotResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteItemHistorySnapshot(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteItemHistorySnapshotResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteItemHistorySnapshotAsync(ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest request)
        {
            return base.Channel.DeleteItemHistorySnapshotAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteItemHistorySnapshotResponse> DeleteItemHistorySnapshotAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string HistoryID)
        {
            ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest inValue = new ReportViewerForCore.ReportService.DeleteItemHistorySnapshotRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.HistoryID = HistoryID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteItemHistorySnapshotAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemHistoryLimitResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemHistoryLimit(ReportViewerForCore.ReportService.SetItemHistoryLimitRequest request)
        {
            return base.Channel.SetItemHistoryLimit(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemHistoryLimit(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool UseSystem, int HistoryLimit)
        {
            ReportViewerForCore.ReportService.SetItemHistoryLimitRequest inValue = new ReportViewerForCore.ReportService.SetItemHistoryLimitRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.UseSystem = UseSystem;
            inValue.HistoryLimit = HistoryLimit;
            ReportViewerForCore.ReportService.SetItemHistoryLimitResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemHistoryLimit(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemHistoryLimitResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemHistoryLimitAsync(ReportViewerForCore.ReportService.SetItemHistoryLimitRequest request)
        {
            return base.Channel.SetItemHistoryLimitAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemHistoryLimitResponse> SetItemHistoryLimitAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool UseSystem, int HistoryLimit)
        {
            ReportViewerForCore.ReportService.SetItemHistoryLimitRequest inValue = new ReportViewerForCore.ReportService.SetItemHistoryLimitRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.UseSystem = UseSystem;
            inValue.HistoryLimit = HistoryLimit;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemHistoryLimitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemHistoryLimitResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemHistoryLimit(ReportViewerForCore.ReportService.GetItemHistoryLimitRequest request)
        {
            return base.Channel.GetItemHistoryLimit(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemHistoryLimit(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out int HistoryLimit, out bool IsSystem, out int SystemLimit)
        {
            ReportViewerForCore.ReportService.GetItemHistoryLimitRequest inValue = new ReportViewerForCore.ReportService.GetItemHistoryLimitRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemHistoryLimitResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemHistoryLimit(inValue);
            HistoryLimit = retVal.HistoryLimit;
            IsSystem = retVal.IsSystem;
            SystemLimit = retVal.SystemLimit;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemHistoryLimitResponse> GetItemHistoryLimitAsync(ReportViewerForCore.ReportService.GetItemHistoryLimitRequest request)
        {
            return base.Channel.GetItemHistoryLimitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetItemHistoryOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemHistoryOptions(ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest request)
        {
            return base.Channel.SetItemHistoryOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetItemHistoryOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest inValue = new ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.EnableManualSnapshotCreation = EnableManualSnapshotCreation;
            inValue.KeepExecutionSnapshots = KeepExecutionSnapshots;
            inValue.Item = Item;
            ReportViewerForCore.ReportService.SetItemHistoryOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemHistoryOptions(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemHistoryOptionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetItemHistoryOptionsAsync(ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest request)
        {
            return base.Channel.SetItemHistoryOptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetItemHistoryOptionsResponse> SetItemHistoryOptionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest inValue = new ReportViewerForCore.ReportService.SetItemHistoryOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.EnableManualSnapshotCreation = EnableManualSnapshotCreation;
            inValue.KeepExecutionSnapshots = KeepExecutionSnapshots;
            inValue.Item = Item;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetItemHistoryOptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetItemHistoryOptionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetItemHistoryOptions(ReportViewerForCore.ReportService.GetItemHistoryOptionsRequest request)
        {
            return base.Channel.GetItemHistoryOptions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetItemHistoryOptions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out bool EnableManualSnapshotCreation, out bool KeepExecutionSnapshots, out ReportViewerForCore.ReportService.ScheduleDefinitionOrReference Item)
        {
            ReportViewerForCore.ReportService.GetItemHistoryOptionsRequest inValue = new ReportViewerForCore.ReportService.GetItemHistoryOptionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetItemHistoryOptionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetItemHistoryOptions(inValue);
            EnableManualSnapshotCreation = retVal.EnableManualSnapshotCreation;
            KeepExecutionSnapshots = retVal.KeepExecutionSnapshots;
            Item = retVal.Item;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetItemHistoryOptionsResponse> GetItemHistoryOptionsAsync(ReportViewerForCore.ReportService.GetItemHistoryOptionsRequest request)
        {
            return base.Channel.GetItemHistoryOptionsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetReportServerConfigInfoResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetReportServerConfigInfo(ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest request)
        {
            return base.Channel.GetReportServerConfigInfo(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetReportServerConfigInfo(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, bool ScaleOut, out string ServerConfigInfo)
        {
            ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest inValue = new ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScaleOut = ScaleOut;
            ReportViewerForCore.ReportService.GetReportServerConfigInfoResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetReportServerConfigInfo(inValue);
            ServerConfigInfo = retVal.ServerConfigInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetReportServerConfigInfoResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetReportServerConfigInfoAsync(ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest request)
        {
            return base.Channel.GetReportServerConfigInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetReportServerConfigInfoResponse> GetReportServerConfigInfoAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, bool ScaleOut)
        {
            ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest inValue = new ReportViewerForCore.ReportService.GetReportServerConfigInfoRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ScaleOut = ScaleOut;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetReportServerConfigInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.IsSSLRequiredResponse ReportViewerForCore.ReportService.ReportingService2010Soap.IsSSLRequired(ReportViewerForCore.ReportService.IsSSLRequiredRequest request)
        {
            return base.Channel.IsSSLRequired(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader IsSSLRequired(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out bool IsSSLRequiredResult)
        {
            ReportViewerForCore.ReportService.IsSSLRequiredRequest inValue = new ReportViewerForCore.ReportService.IsSSLRequiredRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.IsSSLRequiredResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).IsSSLRequired(inValue);
            IsSSLRequiredResult = retVal.IsSSLRequiredResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.IsSSLRequiredResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.IsSSLRequiredAsync(ReportViewerForCore.ReportService.IsSSLRequiredRequest request)
        {
            return base.Channel.IsSSLRequiredAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.IsSSLRequiredResponse> IsSSLRequiredAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.IsSSLRequiredRequest inValue = new ReportViewerForCore.ReportService.IsSSLRequiredRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).IsSSLRequiredAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetSystemPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetSystemProperties(ReportViewerForCore.ReportService.SetSystemPropertiesRequest request)
        {
            return base.Channel.SetSystemProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetSystemProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetSystemPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetSystemPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.SetSystemPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSystemProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSystemPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetSystemPropertiesAsync(ReportViewerForCore.ReportService.SetSystemPropertiesRequest request)
        {
            return base.Channel.SetSystemPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSystemPropertiesResponse> SetSystemPropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetSystemPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetSystemPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSystemPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetSystemPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetSystemProperties(ReportViewerForCore.ReportService.GetSystemPropertiesRequest request)
        {
            return base.Channel.GetSystemProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetSystemProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.Property[] Values)
        {
            ReportViewerForCore.ReportService.GetSystemPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetSystemPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.GetSystemPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSystemProperties(inValue);
            Values = retVal.Values;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetSystemPropertiesAsync(ReportViewerForCore.ReportService.GetSystemPropertiesRequest request)
        {
            return base.Channel.GetSystemPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPropertiesResponse> GetSystemPropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.GetSystemPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetSystemPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSystemPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetUserSettingsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetUserSettings(ReportViewerForCore.ReportService.SetUserSettingsRequest request)
        {
            return base.Channel.SetUserSettings(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetUserSettings(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetUserSettingsRequest inValue = new ReportViewerForCore.ReportService.SetUserSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.SetUserSettingsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetUserSettings(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetUserSettingsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetUserSettingsAsync(ReportViewerForCore.ReportService.SetUserSettingsRequest request)
        {
            return base.Channel.SetUserSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetUserSettingsResponse> SetUserSettingsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.SetUserSettingsRequest inValue = new ReportViewerForCore.ReportService.SetUserSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetUserSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetUserSettingsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetUserSettings(ReportViewerForCore.ReportService.GetUserSettingsRequest request)
        {
            return base.Channel.GetUserSettings(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetUserSettings(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties, out ReportViewerForCore.ReportService.Property[] Values)
        {
            ReportViewerForCore.ReportService.GetUserSettingsRequest inValue = new ReportViewerForCore.ReportService.GetUserSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            ReportViewerForCore.ReportService.GetUserSettingsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetUserSettings(inValue);
            Values = retVal.Values;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetUserSettingsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetUserSettingsAsync(ReportViewerForCore.ReportService.GetUserSettingsRequest request)
        {
            return base.Channel.GetUserSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetUserSettingsResponse> GetUserSettingsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Property[] Properties)
        {
            ReportViewerForCore.ReportService.GetUserSettingsRequest inValue = new ReportViewerForCore.ReportService.GetUserSettingsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Properties = Properties;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetUserSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetSystemPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetSystemPolicies(ReportViewerForCore.ReportService.SetSystemPoliciesRequest request)
        {
            return base.Channel.SetSystemPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetSystemPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.SetSystemPoliciesRequest inValue = new ReportViewerForCore.ReportService.SetSystemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Policies = Policies;
            ReportViewerForCore.ReportService.SetSystemPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSystemPolicies(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSystemPoliciesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetSystemPoliciesAsync(ReportViewerForCore.ReportService.SetSystemPoliciesRequest request)
        {
            return base.Channel.SetSystemPoliciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetSystemPoliciesResponse> SetSystemPoliciesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.SetSystemPoliciesRequest inValue = new ReportViewerForCore.ReportService.SetSystemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Policies = Policies;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetSystemPoliciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetSystemPoliciesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetSystemPolicies(ReportViewerForCore.ReportService.GetSystemPoliciesRequest request)
        {
            return base.Channel.GetSystemPolicies(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetSystemPolicies(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out ReportViewerForCore.ReportService.Policy[] Policies)
        {
            ReportViewerForCore.ReportService.GetSystemPoliciesRequest inValue = new ReportViewerForCore.ReportService.GetSystemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.GetSystemPoliciesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSystemPolicies(inValue);
            Policies = retVal.Policies;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPoliciesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetSystemPoliciesAsync(ReportViewerForCore.ReportService.GetSystemPoliciesRequest request)
        {
            return base.Channel.GetSystemPoliciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPoliciesResponse> GetSystemPoliciesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.GetSystemPoliciesRequest inValue = new ReportViewerForCore.ReportService.GetSystemPoliciesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSystemPoliciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListExtensionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListExtensions(ReportViewerForCore.ReportService.ListExtensionsRequest request)
        {
            return base.Channel.ListExtensions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListExtensions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ExtensionType, out ReportViewerForCore.ReportService.Extension[] Extensions)
        {
            ReportViewerForCore.ReportService.ListExtensionsRequest inValue = new ReportViewerForCore.ReportService.ListExtensionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ExtensionType = ExtensionType;
            ReportViewerForCore.ReportService.ListExtensionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListExtensions(inValue);
            Extensions = retVal.Extensions;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExtensionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListExtensionsAsync(ReportViewerForCore.ReportService.ListExtensionsRequest request)
        {
            return base.Channel.ListExtensionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExtensionsResponse> ListExtensionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ExtensionType)
        {
            ReportViewerForCore.ReportService.ListExtensionsRequest inValue = new ReportViewerForCore.ReportService.ListExtensionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ExtensionType = ExtensionType;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListExtensionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListExtensionTypesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListExtensionTypes(ReportViewerForCore.ReportService.ListExtensionTypesRequest request)
        {
            return base.Channel.ListExtensionTypes(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListExtensionTypes(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListExtensionTypesResult)
        {
            ReportViewerForCore.ReportService.ListExtensionTypesRequest inValue = new ReportViewerForCore.ReportService.ListExtensionTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListExtensionTypesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListExtensionTypes(inValue);
            ListExtensionTypesResult = retVal.ListExtensionTypesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExtensionTypesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListExtensionTypesAsync(ReportViewerForCore.ReportService.ListExtensionTypesRequest request)
        {
            return base.Channel.ListExtensionTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListExtensionTypesResponse> ListExtensionTypesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListExtensionTypesRequest inValue = new ReportViewerForCore.ReportService.ListExtensionTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListExtensionTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListEventsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListEvents(ReportViewerForCore.ReportService.ListEventsRequest request)
        {
            return base.Channel.ListEvents(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListEvents(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out ReportViewerForCore.ReportService.Event[] Events)
        {
            ReportViewerForCore.ReportService.ListEventsRequest inValue = new ReportViewerForCore.ReportService.ListEventsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListEventsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListEvents(inValue);
            Events = retVal.Events;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListEventsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListEventsAsync(ReportViewerForCore.ReportService.ListEventsRequest request)
        {
            return base.Channel.ListEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListEventsResponse> ListEventsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListEventsRequest inValue = new ReportViewerForCore.ReportService.ListEventsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.FireEventResponse ReportViewerForCore.ReportService.ReportingService2010Soap.FireEvent(ReportViewerForCore.ReportService.FireEventRequest request)
        {
            return base.Channel.FireEvent(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader FireEvent(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string EventType, string EventData, string SiteUrl)
        {
            ReportViewerForCore.ReportService.FireEventRequest inValue = new ReportViewerForCore.ReportService.FireEventRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.EventType = EventType;
            inValue.EventData = EventData;
            inValue.SiteUrl = SiteUrl;
            ReportViewerForCore.ReportService.FireEventResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).FireEvent(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FireEventResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.FireEventAsync(ReportViewerForCore.ReportService.FireEventRequest request)
        {
            return base.Channel.FireEventAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.FireEventResponse> FireEventAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string EventType, string EventData, string SiteUrl)
        {
            ReportViewerForCore.ReportService.FireEventRequest inValue = new ReportViewerForCore.ReportService.FireEventRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.EventType = EventType;
            inValue.EventData = EventData;
            inValue.SiteUrl = SiteUrl;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).FireEventAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListJobsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobs(ReportViewerForCore.ReportService.ListJobsRequest request)
        {
            return base.Channel.ListJobs(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListJobs(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out ReportViewerForCore.ReportService.Job[] Jobs)
        {
            ReportViewerForCore.ReportService.ListJobsRequest inValue = new ReportViewerForCore.ReportService.ListJobsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListJobsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobs(inValue);
            Jobs = retVal.Jobs;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobsAsync(ReportViewerForCore.ReportService.ListJobsRequest request)
        {
            return base.Channel.ListJobsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobsResponse> ListJobsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListJobsRequest inValue = new ReportViewerForCore.ReportService.ListJobsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListJobTypesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobTypes(ReportViewerForCore.ReportService.ListJobTypesRequest request)
        {
            return base.Channel.ListJobTypes(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListJobTypes(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListJobTypesResult)
        {
            ReportViewerForCore.ReportService.ListJobTypesRequest inValue = new ReportViewerForCore.ReportService.ListJobTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListJobTypesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobTypes(inValue);
            ListJobTypesResult = retVal.ListJobTypesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobTypesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobTypesAsync(ReportViewerForCore.ReportService.ListJobTypesRequest request)
        {
            return base.Channel.ListJobTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobTypesResponse> ListJobTypesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListJobTypesRequest inValue = new ReportViewerForCore.ReportService.ListJobTypesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListJobActionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobActions(ReportViewerForCore.ReportService.ListJobActionsRequest request)
        {
            return base.Channel.ListJobActions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListJobActions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListJobActionsResult)
        {
            ReportViewerForCore.ReportService.ListJobActionsRequest inValue = new ReportViewerForCore.ReportService.ListJobActionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListJobActionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobActions(inValue);
            ListJobActionsResult = retVal.ListJobActionsResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobActionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobActionsAsync(ReportViewerForCore.ReportService.ListJobActionsRequest request)
        {
            return base.Channel.ListJobActionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobActionsResponse> ListJobActionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListJobActionsRequest inValue = new ReportViewerForCore.ReportService.ListJobActionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobActionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListJobStatesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobStates(ReportViewerForCore.ReportService.ListJobStatesRequest request)
        {
            return base.Channel.ListJobStates(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListJobStates(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListJobStatesResult)
        {
            ReportViewerForCore.ReportService.ListJobStatesRequest inValue = new ReportViewerForCore.ReportService.ListJobStatesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListJobStatesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobStates(inValue);
            ListJobStatesResult = retVal.ListJobStatesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobStatesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListJobStatesAsync(ReportViewerForCore.ReportService.ListJobStatesRequest request)
        {
            return base.Channel.ListJobStatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListJobStatesResponse> ListJobStatesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListJobStatesRequest inValue = new ReportViewerForCore.ReportService.ListJobStatesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListJobStatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CancelJobResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CancelJob(ReportViewerForCore.ReportService.CancelJobRequest request)
        {
            return base.Channel.CancelJob(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CancelJob(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string JobID, out bool CancelJobResult)
        {
            ReportViewerForCore.ReportService.CancelJobRequest inValue = new ReportViewerForCore.ReportService.CancelJobRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.JobID = JobID;
            ReportViewerForCore.ReportService.CancelJobResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CancelJob(inValue);
            CancelJobResult = retVal.CancelJobResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CancelJobResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CancelJobAsync(ReportViewerForCore.ReportService.CancelJobRequest request)
        {
            return base.Channel.CancelJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CancelJobResponse> CancelJobAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string JobID)
        {
            ReportViewerForCore.ReportService.CancelJobRequest inValue = new ReportViewerForCore.ReportService.CancelJobRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.JobID = JobID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CancelJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.CreateCacheRefreshPlanResponse ReportViewerForCore.ReportService.ReportingService2010Soap.CreateCacheRefreshPlan(ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest request)
        {
            return base.Channel.CreateCacheRefreshPlan(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader CreateCacheRefreshPlan(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters, out string CacheRefreshPlanID)
        {
            ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest inValue = new ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.CreateCacheRefreshPlanResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateCacheRefreshPlan(inValue);
            CacheRefreshPlanID = retVal.CacheRefreshPlanID;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateCacheRefreshPlanResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.CreateCacheRefreshPlanAsync(ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest request)
        {
            return base.Channel.CreateCacheRefreshPlanAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.CreateCacheRefreshPlanResponse> CreateCacheRefreshPlanAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest inValue = new ReportViewerForCore.ReportService.CreateCacheRefreshPlanRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).CreateCacheRefreshPlanAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.SetCacheRefreshPlanProperties(ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest request)
        {
            return base.Channel.SetCacheRefreshPlanProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader SetCacheRefreshPlanProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.CacheRefreshPlanID = CacheRefreshPlanID;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetCacheRefreshPlanProperties(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.SetCacheRefreshPlanPropertiesAsync(ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest request)
        {
            return base.Channel.SetCacheRefreshPlanPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesResponse> SetCacheRefreshPlanPropertiesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID, string Description, string EventType, string MatchData, ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest inValue = new ReportViewerForCore.ReportService.SetCacheRefreshPlanPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.CacheRefreshPlanID = CacheRefreshPlanID;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            inValue.Parameters = Parameters;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).SetCacheRefreshPlanPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetCacheRefreshPlanProperties(ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesRequest request)
        {
            return base.Channel.GetCacheRefreshPlanProperties(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetCacheRefreshPlanProperties(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID, out string Description, out string LastRunStatus, out ReportViewerForCore.ReportService.CacheRefreshPlanState State, out string EventType, out string MatchData, out ReportViewerForCore.ReportService.ParameterValue[] Parameters)
        {
            ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesRequest inValue = new ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.CacheRefreshPlanID = CacheRefreshPlanID;
            ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetCacheRefreshPlanProperties(inValue);
            Description = retVal.Description;
            LastRunStatus = retVal.LastRunStatus;
            State = retVal.State;
            EventType = retVal.EventType;
            MatchData = retVal.MatchData;
            Parameters = retVal.Parameters;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesResponse> GetCacheRefreshPlanPropertiesAsync(ReportViewerForCore.ReportService.GetCacheRefreshPlanPropertiesRequest request)
        {
            return base.Channel.GetCacheRefreshPlanPropertiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.DeleteCacheRefreshPlanResponse ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteCacheRefreshPlan(ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest request)
        {
            return base.Channel.DeleteCacheRefreshPlan(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader DeleteCacheRefreshPlan(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID)
        {
            ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest inValue = new ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.CacheRefreshPlanID = CacheRefreshPlanID;
            ReportViewerForCore.ReportService.DeleteCacheRefreshPlanResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteCacheRefreshPlan(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteCacheRefreshPlanResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.DeleteCacheRefreshPlanAsync(ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest request)
        {
            return base.Channel.DeleteCacheRefreshPlanAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.DeleteCacheRefreshPlanResponse> DeleteCacheRefreshPlanAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string CacheRefreshPlanID)
        {
            ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest inValue = new ReportViewerForCore.ReportService.DeleteCacheRefreshPlanRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.CacheRefreshPlanID = CacheRefreshPlanID;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).DeleteCacheRefreshPlanAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListCacheRefreshPlansResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListCacheRefreshPlans(ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest request)
        {
            return base.Channel.ListCacheRefreshPlans(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListCacheRefreshPlans(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out ReportViewerForCore.ReportService.CacheRefreshPlan[] CacheRefreshPlans)
        {
            ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest inValue = new ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.ListCacheRefreshPlansResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListCacheRefreshPlans(inValue);
            CacheRefreshPlans = retVal.CacheRefreshPlans;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListCacheRefreshPlansResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListCacheRefreshPlansAsync(ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest request)
        {
            return base.Channel.ListCacheRefreshPlansAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListCacheRefreshPlansResponse> ListCacheRefreshPlansAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest inValue = new ReportViewerForCore.ReportService.ListCacheRefreshPlansRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListCacheRefreshPlansAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.LogonUserResponse ReportViewerForCore.ReportService.ReportingService2010Soap.LogonUser(ReportViewerForCore.ReportService.LogonUserRequest request)
        {
            return base.Channel.LogonUser(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader LogonUser(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string userName, string password, string authority)
        {
            ReportViewerForCore.ReportService.LogonUserRequest inValue = new ReportViewerForCore.ReportService.LogonUserRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.userName = userName;
            inValue.password = password;
            inValue.authority = authority;
            ReportViewerForCore.ReportService.LogonUserResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).LogonUser(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.LogonUserResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.LogonUserAsync(ReportViewerForCore.ReportService.LogonUserRequest request)
        {
            return base.Channel.LogonUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.LogonUserResponse> LogonUserAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string userName, string password, string authority)
        {
            ReportViewerForCore.ReportService.LogonUserRequest inValue = new ReportViewerForCore.ReportService.LogonUserRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.userName = userName;
            inValue.password = password;
            inValue.authority = authority;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).LogonUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.LogoffResponse ReportViewerForCore.ReportService.ReportingService2010Soap.Logoff(ReportViewerForCore.ReportService.LogoffRequest request)
        {
            return base.Channel.Logoff(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader Logoff(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.LogoffRequest inValue = new ReportViewerForCore.ReportService.LogoffRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.LogoffResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).Logoff(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.LogoffResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.LogoffAsync(ReportViewerForCore.ReportService.LogoffRequest request)
        {
            return base.Channel.LogoffAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.LogoffResponse> LogoffAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.LogoffRequest inValue = new ReportViewerForCore.ReportService.LogoffRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).LogoffAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetPermissionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetPermissions(ReportViewerForCore.ReportService.GetPermissionsRequest request)
        {
            return base.Channel.GetPermissions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetPermissions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath, out string[] Permissions)
        {
            ReportViewerForCore.ReportService.GetPermissionsRequest inValue = new ReportViewerForCore.ReportService.GetPermissionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            ReportViewerForCore.ReportService.GetPermissionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetPermissions(inValue);
            Permissions = retVal.Permissions;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPermissionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetPermissionsAsync(ReportViewerForCore.ReportService.GetPermissionsRequest request)
        {
            return base.Channel.GetPermissionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetPermissionsResponse> GetPermissionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, string ItemPath)
        {
            ReportViewerForCore.ReportService.GetPermissionsRequest inValue = new ReportViewerForCore.ReportService.GetPermissionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ItemPath = ItemPath;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetPermissionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.GetSystemPermissionsResponse ReportViewerForCore.ReportService.ReportingService2010Soap.GetSystemPermissions(ReportViewerForCore.ReportService.GetSystemPermissionsRequest request)
        {
            return base.Channel.GetSystemPermissions(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader GetSystemPermissions(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] Permissions)
        {
            ReportViewerForCore.ReportService.GetSystemPermissionsRequest inValue = new ReportViewerForCore.ReportService.GetSystemPermissionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.GetSystemPermissionsResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSystemPermissions(inValue);
            Permissions = retVal.Permissions;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPermissionsResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.GetSystemPermissionsAsync(ReportViewerForCore.ReportService.GetSystemPermissionsRequest request)
        {
            return base.Channel.GetSystemPermissionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.GetSystemPermissionsResponse> GetSystemPermissionsAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.GetSystemPermissionsRequest inValue = new ReportViewerForCore.ReportService.GetSystemPermissionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).GetSystemPermissionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReportViewerForCore.ReportService.ListSecurityScopesResponse ReportViewerForCore.ReportService.ReportingService2010Soap.ListSecurityScopes(ReportViewerForCore.ReportService.ListSecurityScopesRequest request)
        {
            return base.Channel.ListSecurityScopes(request);
        }
        
        public ReportViewerForCore.ReportService.ServerInfoHeader ListSecurityScopes(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader, out string[] ListSecurityScopesResult)
        {
            ReportViewerForCore.ReportService.ListSecurityScopesRequest inValue = new ReportViewerForCore.ReportService.ListSecurityScopesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            ReportViewerForCore.ReportService.ListSecurityScopesResponse retVal = ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSecurityScopes(inValue);
            ListSecurityScopesResult = retVal.ListSecurityScopesResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSecurityScopesResponse> ReportViewerForCore.ReportService.ReportingService2010Soap.ListSecurityScopesAsync(ReportViewerForCore.ReportService.ListSecurityScopesRequest request)
        {
            return base.Channel.ListSecurityScopesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportViewerForCore.ReportService.ListSecurityScopesResponse> ListSecurityScopesAsync(ReportViewerForCore.ReportService.TrustedUserHeader TrustedUserHeader)
        {
            ReportViewerForCore.ReportService.ListSecurityScopesRequest inValue = new ReportViewerForCore.ReportService.ListSecurityScopesRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((ReportViewerForCore.ReportService.ReportingService2010Soap)(this)).ListSecurityScopesAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ReportingService2010Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ReportingService2010Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ReportingService2010Soap))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/ReportServer/ReportService2010.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ReportingService2010Soap12))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/ReportServer/ReportService2010.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ReportingService2010Soap,
            
            ReportingService2010Soap12,
        }
    }
}
